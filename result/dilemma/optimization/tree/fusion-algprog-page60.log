Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), maximum (tri (tree1)) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), maximum (tri (tree1)) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tri (Tip (nat1))) = mainNew (Tip (nat1))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tri (Tip (nat1))) = mainNew (Tip (nat1))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tri (Bin (tree2) (tree3))) = mainNew (Bin (tree2) (tree3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tri (Bin (tree2) (tree3))) = mainNew (Bin (tree2) (tree3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 2(rank:11.)
rewrite <- IH2 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 2(rank:11.)
rewrite <- IH1 in goal at 1(rank:11.)
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Lemma List
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 13


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 15


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
case lq (maximum (tree2)) (maximum (tree3))(rank:6.)
=================================================
Progress: 16


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 17


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 19


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
rewrite <- IH2 in goal at 2(rank:11.)
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:4.)
rewrite <- IH2 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 1(rank:11.)
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 22


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 23


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 24


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 25


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 26


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
=================================================
Progress: 27


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
rewrite <- IH2 in goal at 2(rank:11.)
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:4.)
rewrite <- IH2 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 1(rank:11.)
=================================================
Progress: 28


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 29


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 30


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 31


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 32


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 33


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (maximum (tri (tree2))) (mainNew (tree3))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (maximum (tri (tree2))) (mainNew (tree3))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
=================================================
Progress: 34


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
rewrite <- IH2 in goal at 2(rank:11.)
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
rewrite <- IH2 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 1(rank:11.)
=================================================
Progress: 35


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 36


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 37


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 38


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 39


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (mainNew (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 40


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
=================================================
Progress: 41


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:4.)
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 42


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 43


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 44


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 45


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 46


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 47


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (maximum (tri (tree3)))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 48


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 49


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 50


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 51


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 52


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 53


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 54


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 55


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 56


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:4.)
=================================================
Progress: 57


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
=================================================
Progress: 58


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 60


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 61


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
=================================================
Progress: 62


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 63


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 64


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 65


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 66


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
=================================================
Progress: 67


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 68


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 69


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 70


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (mainNew (tree3))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 71


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:4.)
=================================================
Progress: 72


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 73


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 74


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 75


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 76


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 77


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 78


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 79


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 80


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 81


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
=================================================
Progress: 82


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 83


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 84


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 85


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (maximum (tri (tree2))) (mainNew (tree3))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))))
=================================================
Progress: 86


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:4.)
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 87


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 88


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 89


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 90


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 91


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
=================================================
Progress: 92


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (maximum (tri (tree3)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 93


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 94


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 95


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 96


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
=================================================
Progress: 97


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:4.)
=================================================
Progress: 98


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 99


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 100


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 101


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
=================================================
Progress: 102


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 103


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 104


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 105


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 106


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))
=================================================
Progress: 107


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))
=================================================
Progress: 110


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 111


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 112


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 113


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
=================================================
Progress: 114


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 115


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
=================================================
Progress: 116


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 117


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 118


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 119


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
=================================================
Progress: 120


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 121


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 122


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (mainNew (tree3))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank:5.)
=================================================
Progress: 123


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) then maximum (tf3 (tri (tree3))) else maximum (tf3 (tri (tree2))) = SUCC (maximum (tri (tree3)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 124


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 125


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 126


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 127


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 128


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 129


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 130


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
=================================================
Progress: 131


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 132


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 133


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 134


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 135


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 136


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 137


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
=================================================
Progress: 138


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 139


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) (Tip (SUCC (ZERO))))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) (Tip (SUCC (ZERO))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 140


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
=================================================
Progress: 141


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 142


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (maximum (tri (tree3)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
=================================================
Progress: 143


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
=================================================
Progress: 144


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 145


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 146


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
=================================================
Progress: 147


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 148


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 149


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 1
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))))))) (mainNew (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) (Tip (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) then SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 150


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 151


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 152


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 153


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 154


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 155


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 156


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 157


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (mainNew (tree3))(rank:7.)
=================================================
Progress: 158


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 159


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 160


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 161


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 162


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
=================================================
Progress: 164


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 165


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 166


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 167


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 168


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 169


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 170


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 171


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 172


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 173


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 174


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 175


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 176


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 2
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) (maximum (Tip (SUCC (ZERO)))) then SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (Tip (ZERO)))) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (Tip (ZERO)))) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) then SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (Tip (ZERO)))) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 177


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 178


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 179


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree3(rank:7.)
=================================================
Progress: 180


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree3(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
nat2 : nat
Base2 : tree3 = Tip (nat2)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (Tip (nat2))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 181


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
nat2 : nat
Base2 : tree3 = Tip (nat2)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (Tip (nat2))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (Bin (tree4) (tree5))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 182


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (Bin (tree4) (tree5))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 183


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 184


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 185


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 186


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (if lq (mainNew (tree4)) (mainNew (tree5)) then SUCC (mainNew (tree5)) else SUCC (mainNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree4)) (mainNew (tree5))(rank:9.)
=================================================
Progress: 187


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (if lq (mainNew (tree4)) (mainNew (tree5)) then SUCC (mainNew (tree5)) else SUCC (mainNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree4)) (mainNew (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree5)) = true
---------------------------------------
SUCC (nat2) = SUCC (SUCC (mainNew (tree5)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
case lq (mainNew (tree4)) (mainNew (tree5))
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))))
Prop: ZERO = SUCC (mainNew (Tip (ZERO)))
Prop: ZERO = SUCC (mainNew (Tip (ZERO)))
Prop: SUCC (ZERO) = SUCC (SUCC (mainNew (Tip (SUCC (ZERO)))))
Prop: SUCC (ZERO) = SUCC (SUCC (mainNew (Tip (ZERO))))
Prop: SUCC (ZERO) = SUCC (SUCC (mainNew (Tip (SUCC (SUCC (ZERO))))))
Lemma List
forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree5)) = true
---------------------------------------
SUCC (nat2) = SUCC (SUCC (mainNew (tree5)))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 188


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree5)) = true
---------------------------------------
SUCC (nat2) = SUCC (SUCC (mainNew (tree5)))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 189


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 190


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
forall (tree1:tree), SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 191


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
forall (tree1:tree), SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat1) = SUCC (SUCC (mainNew (Tip (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 192


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat1) = SUCC (SUCC (mainNew (Tip (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat1) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat1) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 193


1st goal of : forall (nat1:nat) (tree1:tree), lq (ZERO) (nat1) = true -> SUCC (nat1) = SUCC (SUCC (mainNew (tree1)))
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat1) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 194


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 195


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
nat1 = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
End of Lemma List


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
nat1 = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 196


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
nat1 = SUCC (ZERO)

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro nat1(rank:11.)
=================================================
Progress: 197


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

0 goal(s) more...

4 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 198


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> nat1 = SUCC (ZERO)
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
nat1 = SUCC (ZERO)

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
=================================================
Progress: 199


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 200


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 201


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 202


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 203


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 204


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 205


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 206


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 207


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
=================================================
Progress: 208


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
=================================================
Progress: 209


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 210


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 211


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 212


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 213


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 214


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 215


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 216


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 217


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 218


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 219


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
case lq (maximum (tri (tree2))) (mainNew (tree3))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 220


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (SUCC (SUCC (ZERO))))))))) (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (SUCC (SUCC (ZERO)))))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))))) = if lq (maximum (tri (Tip (SUCC (SUCC (ZERO)))))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))))) else SUCC (maximum (tri (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))))) (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))))
=================================================
Progress: 221


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
=================================================
Progress: 222


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 223


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 224


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 225


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 226


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 227


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 228


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
=================================================
Progress: 229


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 230


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 231


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 232


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:5.)
=================================================
Progress: 233


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 234


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 235


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 236


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 237


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
=================================================
Progress: 238


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 239


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 240


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 241


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 242


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 243


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 244


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 245


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
=================================================
Progress: 246


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 247


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
=================================================
Progress: 248


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
=================================================
Progress: 249


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 250


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 251


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 252


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 253


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
=================================================
Progress: 254


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 255


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
=================================================
Progress: 256


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 257


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (SUCC (ZERO))))))
=================================================
Progress: 258


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 259


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank:5.)
=================================================
Progress: 260


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 261


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 2
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 262


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 263


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (maximum (tri (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 264


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (maximum (tri (tree3))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (maximum (tri (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 265


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 266


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 267


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 268


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 269


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 270


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 271


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 272


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
=================================================
Progress: 273


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 274


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
=================================================
Progress: 275


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
=================================================
Progress: 276


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 277


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
=================================================
Progress: 278


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 1
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = if lq (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (mainNew (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) then SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO)))))) else SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = if lq (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) else SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) then SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) then SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = if lq (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) else SUCC (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = if lq (maximum (tri (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) then SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) else SUCC (maximum (tri (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (tri (Tip (ZERO)))) then SUCC (maximum (tri (Tip (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))) (maximum (tri (Tip (ZERO)))) then SUCC (maximum (tri (Tip (ZERO)))) else SUCC (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (tri (Tip (ZERO)))) then SUCC (maximum (tri (Tip (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 279


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 280


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 281


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 282


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 283


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 284


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 285


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 286


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (mainNew (tree3))(rank:7.)
=================================================
Progress: 287


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 288


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 289


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 290


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 291


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 292


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 293


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
=================================================
Progress: 294


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 295


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 296


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 297


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 298


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 299


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 300


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 301


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 302


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 303


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))) (maximum (Tip (SUCC (ZERO)))) then SUCC (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) else SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Tip (SUCC (ZERO)))) (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) else SUCC (mainNew (Tip (SUCC (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))))))))) (maximum (tri (Tip (ZERO)))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO)))))))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Bin (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) then SUCC (maximum (Bin (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) = if lq (mainNew (Tip (SUCC (ZERO)))) (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) else SUCC (mainNew (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO))))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO))))) then SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) then SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) else SUCC (maximum (tri (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 304


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 305


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 306


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 307


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 308


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 309


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 310


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: SUCC (ZERO) = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 311


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 312


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 313


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 314


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
=================================================
Progress: 315


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 316


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 317


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 1
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (mainNew (Tip (SUCC (SUCC (ZERO))))) (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) else SUCC (maximum (tri (Tip (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (SUCC (SUCC (ZERO))))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (SUCC (SUCC (ZERO)))))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 318


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 319


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 320


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 321


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 322


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 323


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 324


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 325


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 326


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 327


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 328


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 329


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 330


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (mainNew (tree3))(rank:7.)
=================================================
Progress: 331


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 332


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 333


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 334


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 335


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 336


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 337


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 338


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
=================================================
Progress: 339


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 340


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 341


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 342


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 343


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: ZERO = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
=================================================
Progress: 344


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 345


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 346


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 347


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 348


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
=================================================
Progress: 349


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 350


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 351


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 352


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 353


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 2
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (mainNew (Tip (SUCC (SUCC (ZERO))))) (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (maximum (tri (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))))) = if lq (mainNew (Tip (SUCC (ZERO)))) (maximum (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (SUCC (SUCC (SUCC (ZERO)))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (SUCC (SUCC (ZERO)))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 354


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 355


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 356


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree3(rank:7.)
=================================================
Progress: 357


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree3(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
nat2 : nat
Base2 : tree3 = Tip (nat2)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (Tip (nat2))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 358


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
nat2 : nat
Base2 : tree3 = Tip (nat2)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (Tip (nat2))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (Bin (tree4) (tree5))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 359


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (Bin (tree4) (tree5))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 360


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 361


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 362


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 363


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (mainNew (Bin (tree4) (tree5))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (if lq (mainNew (tree4)) (mainNew (tree5)) then SUCC (mainNew (tree5)) else SUCC (mainNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree4)) (mainNew (tree5))(rank:9.)
=================================================
Progress: 364


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (if lq (mainNew (tree4)) (mainNew (tree5)) then SUCC (mainNew (tree5)) else SUCC (mainNew (tree4)))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree4)) (mainNew (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree3 : tree
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree4)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree4)) else SUCC (maximum (tri (Tip (nat1))))
IH2 : forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree5)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree5)) else SUCC (maximum (tri (Tip (nat1))))
Inductive1 : tree3 = Bin (tree4) (tree5)
Cond1 : lq (SUCC (ZERO)) (if lq (maximum (tf3 (tf3 (tri (tree4))))) (maximum (tf3 (tf3 (tri (tree5))))) then maximum (tf3 (tf3 (tri (tree5)))) else maximum (tf3 (tf3 (tri (tree4))))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree5)) = true
---------------------------------------
SUCC (nat2) = SUCC (SUCC (mainNew (tree5)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
case lq (mainNew (tree4)) (mainNew (tree5))
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (mainNew (Tip (ZERO)))
Prop: SUCC (SUCC (ZERO)) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: ZERO = SUCC (mainNew (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: SUCC (ZERO) = SUCC (SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: SUCC (ZERO) = SUCC (SUCC (mainNew (Tip (ZERO))))
Prop: SUCC (SUCC (SUCC (ZERO))) = SUCC (SUCC (mainNew (Tip (ZERO))))
asdf
=================================================
Progress: 365


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
=================================================
Progress: 366


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 367


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))) (Tip (ZERO))))) = SUCC (maximum (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))) (Tip (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 368


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 1
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO))))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = if lq (maximum (tri (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))) (maximum (Tip (SUCC (SUCC (SUCC (ZERO)))))) then SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO)))))) else SUCC (mainNew (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))) (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 369


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 370


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 371


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 372


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 373


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 374


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 375


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 376


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (mainNew (tree3))(rank:7.)
=================================================
Progress: 377


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 378


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 379


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 380


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 381


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 382


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
=================================================
Progress: 383


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 384


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 385


1st goal of : forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 386


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 387


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (SUCC (ZERO))) = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 388


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 389


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 390


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 391


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 392


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 2
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Tip (SUCC (SUCC (ZERO)))))) (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO))))) then SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (SUCC (SUCC (ZERO))))))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (SUCC (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) then SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Tip (SUCC (SUCC (ZERO)))))) (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (maximum (tri (Tip (SUCC (SUCC (ZERO))))))
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 393


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 394


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 395


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 396


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
forall (tree3:tree), maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (mainNew (tree3)) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 397


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
forall (tree3:tree), maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (mainNew (tree3)) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
forall (tree3:tree), SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (mainNew (tree3)) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 398


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
forall (tree3:tree), SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (mainNew (tree3)) else SUCC (mainNew (Tip (nat1)))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
forall (tree3:tree), SUCC (nat2) = SUCC (mainNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree3(rank:9.)
=================================================
Progress: 399


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
forall (tree3:tree), SUCC (nat2) = SUCC (mainNew (tree3))

3 goal(s) more...

1 conjecture(s) more...
>>> induction tree3(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
tree3 : tree
nat3 : nat
Base3 : tree3 = Tip (nat3)
---------------------------------------
SUCC (nat2) = SUCC (mainNew (Tip (nat3)))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 400


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
tree3 : tree
nat3 : nat
Base3 : tree3 = Tip (nat3)
---------------------------------------
SUCC (nat2) = SUCC (mainNew (Tip (nat3)))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (maximum (tree1)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
tree3 : tree
nat3 : nat
Base3 : tree3 = Tip (nat3)
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (SUCC (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
asdf
=================================================
Progress: 401


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
=================================================
Progress: 402


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 403


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 404


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
=================================================
Progress: 405


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 406


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))))) = SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 407


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (maximum (tri (tree2))) (mainNew (tree3))(rank:5.)
=================================================
Progress: 408


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (maximum (tri (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 409


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (maximum (tri (tree2))) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 0
case lq (maximum (tri (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO)))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (mainNew (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO)))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 410


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = if lq (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))))) (mainNew (Tip (SUCC (SUCC (ZERO))))) then SUCC (mainNew (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (SUCC (SUCC (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))))) (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO)))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) (mainNew (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO)))))
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 411


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 412


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 413


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 414


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 415


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 416


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 417


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (Tip (nat1)))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (mainNew (tree3))(rank:7.)
=================================================
Progress: 418


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 419


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (mainNew (tree3))(rank:7.)
=================================================
Progress: 420


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 421


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (Tip (nat1)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 422


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 423


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 424


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
=================================================
Progress: 425


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 426


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = SUCC (maximum (Tip (nat2)))

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 427


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
maximum (tf3 (Bin (tree4) (tree5))) = SUCC (maximum (Bin (tree4) (tree5)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
=================================================
Progress: 428


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 429


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 430


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 431


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 432


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 433


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 434


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 435


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 436


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 1
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (ZERO))))) = if lq (mainNew (Tip (SUCC (SUCC (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (ZERO))))) else SUCC (maximum (tri (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
=================================================
Progress: 437


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (maximum (tri (Tip (SUCC (SUCC (ZERO)))))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) = if lq (maximum (tri (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (mainNew (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) then SUCC (mainNew (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) else SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 2
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (maximum (tri (Tip (SUCC (SUCC (ZERO)))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = if lq (maximum (tri (Tip (SUCC (SUCC (SUCC (ZERO))))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (mainNew (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) else SUCC (mainNew (Tip (ZERO)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))))) (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Tip (SUCC (SUCC (ZERO)))))) (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))))) (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) then SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) else SUCC (maximum (tri (Tip (ZERO))))
=================================================
Progress: 438


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
=================================================
Progress: 439


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 440


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
=================================================
Progress: 441


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 1
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) (mainNew (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = if lq (mainNew (Tip (SUCC (ZERO)))) (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) else SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = if lq (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (SUCC (ZERO))))) (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) then SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) else SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))))) (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (SUCC (ZERO)))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (maximum (tri (Tip (SUCC (SUCC (ZERO)))))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 442


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) then SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO)))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (SUCC (SUCC (ZERO))))) (maximum (Tip (ZERO))) then SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) then SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) = if lq (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) then SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) else SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = if lq (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (maximum (tri (Tip (SUCC (ZERO))))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) then SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (Tip (ZERO)))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (Tip (ZERO)))) then SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (Tip (ZERO)))) else SUCC (mainNew (Tip (SUCC (ZERO))))
=================================================
Progress: 443


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
=================================================
Progress: 444


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 445


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))))
=================================================
Progress: 446


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Tip (SUCC (SUCC (SUCC (ZERO)))))) (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (SUCC (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (SUCC (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))) (mainNew (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (maximum (tri (Tip (ZERO)))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 447


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
=================================================
Progress: 448


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 449


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))))) = SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 450


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 1
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO)))) then SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (Tip (ZERO))))))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (maximum (tri (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (Tip (ZERO))))))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (maximum (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) else SUCC (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))
Lemma List
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 451


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (maximum (tri (tree2)))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree3(rank:5.)
=================================================
Progress: 452


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree3(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 453


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 454


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (maximum (tf3 (tri (Tip (nat1))))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (Tip (nat1))) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 455


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
---------------------------------------
forall (tree1:tree), lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 456


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = if lq (ZERO) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (Tip (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 457


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
maximum (tf3 (Tip (nat2))) = if lq (ZERO) (maximum (Tip (nat2))) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:8.)
=================================================
Progress: 458


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
---------------------------------------
SUCC (nat2) = if lq (ZERO) (nat2) then SUCC (maximum (Tip (nat2))) else SUCC (maximum (tri (Tip (nat1))))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 459


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (nat2) = SUCC (nat2)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 460


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (maximum (tree1)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
tree1 : tree
nat2 : nat
Base2 : tree1 = Tip (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (nat2) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 461


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 462


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 463


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = if lq (mainNew (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (mainNew (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = if lq (mainNew (Tip (SUCC (ZERO)))) (maximum (tri (Tip (SUCC (ZERO))))) then SUCC (mainNew (Tip (SUCC (ZERO)))) else SUCC (mainNew (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Tip (ZERO))) (maximum (tri (Tip (ZERO)))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (SUCC (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (SUCC (ZERO))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Tip (SUCC (SUCC (ZERO))))) (maximum (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (mainNew (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = if lq (mainNew (Tip (SUCC (ZERO)))) (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) then SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) else SUCC (mainNew (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (ZERO))))))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = if lq (mainNew (Tip (SUCC (ZERO)))) (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) then SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (maximum (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) then SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))))) (maximum (tri (Tip (ZERO)))) then SUCC (maximum (tri (Tip (ZERO)))) else SUCC (maximum (tri (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))))))
Prop: maximum (tf3 (tri (Tip (SUCC (ZERO))))) = if lq (mainNew (Tip (ZERO))) (maximum (tri (Tip (SUCC (ZERO))))) then SUCC (maximum (tri (Tip (SUCC (ZERO))))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO))))) else SUCC (maximum (tri (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))
=================================================
Progress: 464


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (maximum (tri (tree3))) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
=================================================
Progress: 465


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 466


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (mainNew (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = SUCC (maximum (tri (tree3)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) = SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = SUCC (mainNew (Tip (ZERO)))
=================================================
Progress: 467


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tri (tree3))) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tri (tree2)) = mainNew (tree2)
IH2 : maximum (tri (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true
---------------------------------------
maximum (tf3 (tri (tree3))) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (mainNew (tree3)) else SUCC (mainNew (tree2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (tri (Tip (SUCC (SUCC (ZERO)))))) = if lq (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) (mainNew (Tip (SUCC (SUCC (ZERO))))) then SUCC (mainNew (Tip (SUCC (SUCC (ZERO))))) else SUCC (mainNew (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (tri (Tip (ZERO)))) = if lq (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (mainNew (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (tri (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))))))))) = if lq (mainNew (Tip (ZERO))) (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))))) then SUCC (mainNew (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))))) else SUCC (mainNew (Tip (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
rewrite IH1 in goal at 0
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = if lq (mainNew (Tip (SUCC (SUCC (SUCC (ZERO)))))) (mainNew (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) else SUCC (mainNew (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (ZERO))) then SUCC (maximum (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (SUCC (SUCC (ZERO))))) then SUCC (maximum (Tip (ZERO))) else SUCC (mainNew (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (mainNew (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
case lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Bin (Tip (ZERO)) (Tip (ZERO)))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Tip (ZERO))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (mainNew (Tip (SUCC (ZERO)))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Tip (ZERO))) then SUCC (maximum (Tip (SUCC (ZERO)))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = if lq (mainNew (Tip (SUCC (ZERO)))) (mainNew (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (Tip (ZERO)))) then SUCC (maximum (Tip (ZERO))) else SUCC (maximum (tri (Tip (SUCC (ZERO)))))
=================================================
Progress: 468


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:6.)
rewrite IH2 in goal at 2(rank:21.)
case lq (maximum (tree2)) (maximum (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 469


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 470


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 471


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 472


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 473


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:7.)
=================================================
Progress: 474


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 475


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 476


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 477


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 478


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 479


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 480


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 481


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 482


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank:7.)
=================================================
Progress: 483


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 484


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 485


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (ZERO)) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (SUCC (ZERO))))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 486


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 487


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 488


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 489


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 490


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (maximum (Tip (nat3))) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 491


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (maximum (Tip (nat3))) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (nat3) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 492


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (nat3) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
---------------------------------------
if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (nat1)(rank:10.)
=================================================
Progress: 493


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
---------------------------------------
if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (nat1)(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
Case1 : lq (SUCC (nat2)) (nat1) = true
---------------------------------------
SUCC (nat3) = nat1

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (nat1)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
asdf
=================================================
Progress: 494


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then SUCC (ZERO) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO))))))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) then maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 495


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 496


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 497


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 498


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 499


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 500


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank:9.)
=================================================
Progress: 501


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 502


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = false
---------------------------------------
SUCC (nat2) = nat1

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 503


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:7.)
=================================================
Progress: 504


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 505


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 506


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:7.)
=================================================
Progress: 507


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 508


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 509


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 510


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
Prop: SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 511


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 512


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 513


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 514


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 515


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 516


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 517


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree2(rank:9.)
=================================================
Progress: 518


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 519


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 520


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
=================================================
Progress: 521


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) = Tip (ZERO)
Prop: Tip (SUCC (SUCC (ZERO))) = Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Tip (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))
=================================================
Progress: 522


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO)))))
Lemma List
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 523


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 524


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 525


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 526


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
=================================================
Progress: 527


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 528


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 529


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 530


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 531


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 532


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO)))))) (Tip (ZERO))))
=================================================
Progress: 533


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 534


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 535


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 536


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 537


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 538


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 539


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 540


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 541


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 542


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 543


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 544


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 545


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 546


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 547


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 548


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 549


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 550


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 551


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 552


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 553


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 554


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 555


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 556


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 557


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 558


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 559


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree4)) (maximum (tree5))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 560


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 561


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 562


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 563


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 564


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 565


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))))))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))))))))
=================================================
Progress: 566


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 567


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 568


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 569


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (ZERO))))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 570


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 571


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 572


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 573


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 574


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 575


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 576


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree2(rank:9.)
=================================================
Progress: 577


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 578


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 579


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))
Prop: Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))) = Tip (ZERO)
=================================================
Progress: 580


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 581


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 582


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 583


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 584


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 585


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 586


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (SUCC (SUCC (ZERO))))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 587


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 588


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 589


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 590


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 591


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 592


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 593


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree2(rank:9.)
=================================================
Progress: 594


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 595


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 596


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
=================================================
Progress: 597


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 598


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 599


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 600


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 601


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 602


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 603


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 604


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 605


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 606


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 607


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 608


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 609


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 610


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 611


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank:9.)
=================================================
Progress: 612


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 613


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 614


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (ZERO)) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) (Tip (SUCC (ZERO))))))) (Tip (ZERO))))))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) (SUCC (maximum (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (SUCC (maximum (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (SUCC (maximum (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 615


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 616


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 617


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 618


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 619


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 620


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 621


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 622


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 623


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 624


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 625


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 626


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 627


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 628


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 629


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 630


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:9.)
case lq (maximum (tree3)) (maximum (tree4))(rank:9.)
=================================================
Progress: 631


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 632


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 633


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 634


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree3)) (maximum (tree4))(rank:9.)
rewrite Cond1 in goal at 0(rank:16.)
=================================================
Progress: 635


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:10.)
case lq (maximum (tree3)) (maximum (tree4))(rank:10.)
=================================================
Progress: 636


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:10.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 637


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 638


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:11.)
=================================================
Progress: 639


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 640


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 641


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 642


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 643


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 644


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 645


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 646


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case2 in goal at 0(rank:12.)
=================================================
Progress: 647


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 648


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 649


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 650


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 651


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 652


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 653


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then SUCC (ZERO) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) (maximum (tf3 (Tip (SUCC (ZERO))))) then ZERO else maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 654


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 655


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 656


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 657


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 658


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 659


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank:9.)
=================================================
Progress: 660


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 661


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = false
---------------------------------------
SUCC (nat2) = nat1

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
asdf
=================================================
Progress: 662


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
=================================================
Progress: 663


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 664


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 665


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 666


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 667


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 668


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 669


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 670


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 671


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 672


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 673


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 674


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank:9.)
=================================================
Progress: 675


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 676


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 677


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (SUCC (ZERO))) then maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (SUCC (SUCC (ZERO))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) (SUCC (maximum (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (maximum (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 678


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 679


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 680


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 681


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 682


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 683


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 684


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 685


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 686


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 687


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 688


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 689


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 690


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 691


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 692


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 693


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:9.)
case lq (maximum (tree3)) (maximum (tree4))(rank:9.)
=================================================
Progress: 694


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 695


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 696


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 697


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree3)) (maximum (tree4))(rank:9.)
rewrite Cond1 in goal at 0(rank:16.)
=================================================
Progress: 698


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:10.)
case lq (maximum (tree3)) (maximum (tree4))(rank:10.)
=================================================
Progress: 699


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:10.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 700


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 701


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:11.)
=================================================
Progress: 702


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 703


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 704


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 705


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 706


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 707


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 708


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 709


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case2 in goal at 0(rank:12.)
=================================================
Progress: 710


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 711


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 712


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 713


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 714


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 715


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 716


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (SUCC (ZERO))))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (SUCC (SUCC (ZERO))))))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) then ZERO else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then SUCC (ZERO) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 717


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 718


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 719


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 720


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 721


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 722


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank:9.)
=================================================
Progress: 723


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 724


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = false
---------------------------------------
SUCC (nat2) = nat1

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 725


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
=================================================
Progress: 726


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 727


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 728


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 729


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 730


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 731


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 732


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 733


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 734


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 735


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 736


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 737


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank:9.)
=================================================
Progress: 738


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 739


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 740


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (SUCC (SUCC (ZERO))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 741


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 742


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 743


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 744


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 745


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (maximum (Tip (nat3))) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 746


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (maximum (Tip (nat3))) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (nat3) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 747


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (nat3) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
---------------------------------------
if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (nat1)(rank:10.)
=================================================
Progress: 748


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
---------------------------------------
if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (nat1)(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
Case1 : lq (SUCC (nat2)) (nat1) = true
---------------------------------------
SUCC (nat3) = nat1

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (nat1)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 749


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then SUCC (ZERO) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then SUCC (ZERO) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then SUCC (ZERO) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) then maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 750


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 751


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 752


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 753


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 754


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 755


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank:9.)
=================================================
Progress: 756


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 757


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = false
---------------------------------------
SUCC (nat2) = nat1

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (SUCC (SUCC (ZERO))) = ZERO
asdf
=================================================
Progress: 758


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
=================================================
Progress: 759


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 760


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 761


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 762


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 763


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 764


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 765


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 766


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 767


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 768


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 769


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 770


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank:9.)
=================================================
Progress: 771


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 772


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 773


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (SUCC (SUCC (ZERO))))))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) else maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (ZERO) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (SUCC (ZERO)) then maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 774


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 775


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 776


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 777


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 778


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
forall (tree2:tree), lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (maximum (Tip (nat3))) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 779


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (maximum (Tip (nat3))) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (nat3) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 780


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
---------------------------------------
lq (nat2) (nat3) = true -> if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
---------------------------------------
if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (nat1)(rank:10.)
=================================================
Progress: 781


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
---------------------------------------
if lq (SUCC (nat2)) (nat1) then maximum (tf3 (Tip (nat3))) else maximum (tf3 (Tip (nat2))) = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (nat1)(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (nat1) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
tree2 : tree
nat3 : nat
Base2 : tree2 = Tip (nat3)
Cond1 : lq (nat2) (nat3) = true
Case1 : lq (SUCC (nat2)) (nat1) = true
---------------------------------------
SUCC (nat3) = nat1

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (nat1)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (SUCC (ZERO)) = SUCC (ZERO)
asdf
=================================================
Progress: 782


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) then ZERO else maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO))))))) then maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 783


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 784


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 785


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 786


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 787


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 788


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank:9.)
=================================================
Progress: 789


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 790


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = false
---------------------------------------
SUCC (nat2) = nat1

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (SUCC (ZERO)) = ZERO
asdf
=================================================
Progress: 791


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
=================================================
Progress: 792


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 793


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 794


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 795


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 796


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 797


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 798


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 799


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 800


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 801


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 802


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 803


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank:9.)
=================================================
Progress: 804


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 805


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 806


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (SUCC (SUCC (SUCC (SUCC (ZERO))))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (SUCC (SUCC (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (maximum (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (SUCC (maximum (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (ZERO))))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 807


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 808


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 809


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 810


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 811


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 812


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 813


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 814


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 815


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 816


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 817


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 818


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 819


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 820


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 821


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 822


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:9.)
case lq (maximum (tree3)) (maximum (tree4))(rank:9.)
=================================================
Progress: 823


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 824


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 825


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 826


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree3)) (maximum (tree4))(rank:9.)
rewrite Cond1 in goal at 0(rank:16.)
=================================================
Progress: 827


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:10.)
case lq (maximum (tree3)) (maximum (tree4))(rank:10.)
=================================================
Progress: 828


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:10.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 829


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 830


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:11.)
=================================================
Progress: 831


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 832


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 833


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 834


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 835


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 836


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 837


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 838


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case2 in goal at 0(rank:12.)
=================================================
Progress: 839


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 840


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 841


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 842


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 843


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 844


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 845


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (ZERO) else maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO))))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then SUCC (ZERO) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then SUCC (ZERO) else maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (SUCC (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) then maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (ZERO)))))) then maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (ZERO))))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (ZERO)))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 846


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 847


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 848


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 849


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 850


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 851


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank:9.)
=================================================
Progress: 852


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 853


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = false
---------------------------------------
SUCC (nat2) = nat1

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 854


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
=================================================
Progress: 855


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 856


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 857


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 858


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 859


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 860


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 861


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 862


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 863


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 864


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 865


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 866


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank:9.)
=================================================
Progress: 867


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 868


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 869


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))) (ZERO) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (SUCC (maximum (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (SUCC (maximum (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 870


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 871


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 872


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 873


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 874


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 875


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 876


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 877


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 878


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 879


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 880


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 881


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:9.)
=================================================
Progress: 882


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 883


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 884


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 885


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:9.)
case lq (maximum (tree3)) (maximum (tree4))(rank:9.)
=================================================
Progress: 886


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 887


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 888


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 889


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree3)) (maximum (tree4))(rank:9.)
rewrite Cond1 in goal at 0(rank:16.)
=================================================
Progress: 890


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:10.)
case lq (maximum (tree3)) (maximum (tree4))(rank:10.)
=================================================
Progress: 891


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:10.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 892


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 893


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:11.)
=================================================
Progress: 894


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 895


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 896


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 897


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 898


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 899


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 900


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 901


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case2 in goal at 0(rank:12.)
=================================================
Progress: 902


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 903


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 904


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 905


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 906


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:11.)
=================================================
Progress: 907


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case2 in goal at 0(rank:19.)
rewrite <- Case3 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 908


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) then SUCC (ZERO) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) then SUCC (ZERO) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))) (maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))))) then maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) else maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 909


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then SUCC (maximum (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 910


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 911


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 912


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 913


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (maximum (Tip (nat2))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 914


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
lq (nat2) (maximum (tree2)) = true -> if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank:9.)
=================================================
Progress: 915


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 916


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Cond1 : lq (nat2) (maximum (tree2)) = true
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = false
---------------------------------------
SUCC (nat2) = nat1

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 917


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank:9.)
=================================================
Progress: 918


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
if lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) then maximum (tf3 (tree5)) else maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 919


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 920


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 921


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 922


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 923


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 924


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 925


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 926


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 927


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 928


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 929


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank:9.)
=================================================
Progress: 930


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 931


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 932


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (ZERO)) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (SUCC (SUCC (ZERO))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 933


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then SUCC (SUCC (SUCC (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 934


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
=================================================
Progress: 935


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 936


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 937


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 938


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 939


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 940


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 941


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 942


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 943


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 944


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 945


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 946


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 947


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 948


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 949


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 950


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 951


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 952


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree4)) (maximum (tree5))(rank:9.)
=================================================
Progress: 953


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (if lq (maximum (tree4)) (maximum (tree5)) then maximum (tree5) else maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (maximum (tree4)) (maximum (tree5))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 954


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = false
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree4))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 955


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 956


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 957


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 958


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 959


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) = maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))
Prop: Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO))))) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 960


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 961


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 962


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 963


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 964


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) = Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))
=================================================
Progress: 965


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (SUCC (ZERO))) = Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO))))))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 966


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 967


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:9.)
=================================================
Progress: 968


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:10.)
=================================================
Progress: 969


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 970


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 971


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 972


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:18.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 973


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 974


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = maximum (tf3 (Tip (SUCC (ZERO))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 975


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 976


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 977


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 978


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 979


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Bin (Tip (SUCC (ZERO))) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 980


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))) = Tip (SUCC (SUCC (SUCC (ZERO))))
Prop: Tip (ZERO) = Bin (Tip (SUCC (ZERO))) (Tip (ZERO))
Prop: Tip (SUCC (ZERO)) = Bin (Tip (SUCC (ZERO))) (Tip (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 981


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 982


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:9.)
=================================================
Progress: 983


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:10.)
=================================================
Progress: 984


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 985


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 986


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 987


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:18.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 988


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 989


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (ZERO))))
Prop: SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (SUCC (SUCC (ZERO))) = Bin (Tip (ZERO)) (Tip (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 990


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 991


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 992


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 993


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 994


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) = Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))
Prop: Tip (SUCC (SUCC (SUCC (ZERO)))) = Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))
Prop: Bin (Tip (SUCC (ZERO))) (Tip (ZERO)) = Tip (SUCC (SUCC (ZERO)))
=================================================
Progress: 995


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 996


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 997


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = maximum (tf3 (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (ZERO))) (Tip (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 998


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 999


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1000


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1001


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1002


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO))) = Tip (SUCC (ZERO))
=================================================
Progress: 1003


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1004


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1005


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (SUCC (ZERO)))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1006


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1007


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1008


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1009


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1010


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))))) (Tip (SUCC (ZERO))))
Prop: Tip (SUCC (ZERO)) = Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))
=================================================
Progress: 1011


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 1012


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1013


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:9.)
=================================================
Progress: 1014


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:10.)
=================================================
Progress: 1015


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1016


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1017


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1018


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:18.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1019


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1020


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) = maximum (tf3 (Tip (SUCC (ZERO))))
Prop: SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) = maximum (tf3 (Tip (SUCC (ZERO))))
Prop: SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (Tip (ZERO)))) (Tip (ZERO))))) = maximum (tf3 (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1021


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1022


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1023


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1024


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1025


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) = Tip (SUCC (SUCC (SUCC (ZERO))))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
=================================================
Progress: 1026


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree4))) (SUCC (maximum (tree5)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) (Tip (SUCC (ZERO))))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1027


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1028


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:9.)
=================================================
Progress: 1029


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:10.)
=================================================
Progress: 1030


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1031


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1032


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1033


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:18.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1034


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1035


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))
Prop: Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1036


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (SUCC (ZERO)))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1037


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))
Lemma List
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1038


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1039


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1040


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1041


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
=================================================
Progress: 1042


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1043


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1044


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1045


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1046


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 1047


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1048


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1049


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1050


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1051


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1052


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1053


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1054


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1055


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1056


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1057


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1058


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1059


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1060


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank:9.)
=================================================
Progress: 1061


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1062


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1063


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))) (Tip (ZERO))))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))) (Tip (ZERO)))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))))) (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1064


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))))) then ZERO else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1065


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 1066


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree2(rank:9.)
=================================================
Progress: 1067


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 1068


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1069


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
if lq (maximum (tf3 (Tip (nat2)))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank:11.)
=================================================
Progress: 1070


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
---------------------------------------
if lq (SUCC (nat2)) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (Tip (nat2))) = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (nat2)) (maximum (tf3 (tree2)))(rank : 11.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1071


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = true
---------------------------------------
nat1 = nat1

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then nat1 else maximum (tf3 (tree1)) = nat1
nat1 : nat
tree2 : tree
tree1 : tree
nat2 : nat
Base1 : tree1 = Tip (nat2)
Case1 : lq (SUCC (nat2)) (maximum (tf3 (tree2))) = false
---------------------------------------
SUCC (nat2) = nat1

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (SUCC (nat2)) (maximum (tf3 (tree2)))
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: SUCC (ZERO) = SUCC (ZERO)
asdf
=================================================
Progress: 1072


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
=================================================
Progress: 1073


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1074


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1075


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1076


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1077


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1078


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1079


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (ZERO))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)) = Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: Tip (ZERO) = Tip (SUCC (SUCC (ZERO)))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1080


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (SUCC (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1081


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1082


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1083


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1084


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))))
Lemma List
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1085


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1086


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1087


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1088


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
=================================================
Progress: 1089


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1090


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1091


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1092


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1093


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 1094


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1095


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1096


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1097


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1098


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1099


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1100


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1101


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1102


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1103


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1104


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1105


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1106


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1107


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank:9.)
=================================================
Progress: 1108


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1109


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1110


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO))))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (ZERO)) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (Tip (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO))))))))) then maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (Tip (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (Tip (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO))))))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1111


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then SUCC (SUCC (SUCC (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (SUCC (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then SUCC (SUCC (SUCC (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (SUCC (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) (maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))) then SUCC (ZERO) else maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (maximum (tf3 (Tip (SUCC (ZERO))))) then ZERO else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1112


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
=================================================
Progress: 1113


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1114


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1115


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1116


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1117


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1118


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1119


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO))) = Tip (SUCC (ZERO))
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1120


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))) = Bin (Tip (ZERO)) (Tip (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1121


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1122


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1123


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1124


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Lemma List
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1125


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1126


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1127


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1128


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
=================================================
Progress: 1129


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1130


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1131


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1132


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1133


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 1134


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1135


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1136


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1137


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1138


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1139


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1140


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1141


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1142


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1143


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1144


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1145


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1146


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1147


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank:9.)
=================================================
Progress: 1148


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1149


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1150


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (ZERO) then maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) (SUCC (ZERO)) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) then maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
=================================================
Progress: 1151


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))))) (maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))) then ZERO else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO))))))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) then SUCC (SUCC (ZERO)) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) then maximum (tf3 (Bin (Bin (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))))
=================================================
Progress: 1152


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
=================================================
Progress: 1153


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1154


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1155


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1156


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1157


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1158


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1159


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))))) = maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (SUCC (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) (Tip (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1160


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)) = Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))
Prop: Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)) = Tip (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1161


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1162


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1163


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1164


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Lemma List
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1165


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1166


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1167


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1168


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
=================================================
Progress: 1169


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1170


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1171


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1172


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1173


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 1174


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1175


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1176


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1177


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1178


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1179


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1180


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1181


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1182


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1183


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1184


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1185


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1186


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1187


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank:9.)
=================================================
Progress: 1188


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1189


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1190


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))) (SUCC (SUCC (ZERO))) then maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) else maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (SUCC (ZERO))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (SUCC (SUCC (ZERO))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) (maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO))))))) then maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1191


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))) then SUCC (ZERO) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Tip (SUCC (ZERO))))) then ZERO else maximum (tf3 (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO))))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) then ZERO else maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO))))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1192


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
=================================================
Progress: 1193


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1194


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1195


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1196


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1197


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1198


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1199


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (ZERO))))
Prop: SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) = maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1200


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO)) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1201


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1202


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
=================================================
Progress: 1203


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (SUCC (ZERO)))))))
=================================================
Progress: 1204


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1205


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1206


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1207


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1208


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
=================================================
Progress: 1209


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1210


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1211


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1212


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1213


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 1214


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1215


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1216


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1217


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1218


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1219


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1220


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1221


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1222


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1223


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1224


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1225


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1226


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1227


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank:9.)
=================================================
Progress: 1228


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1229


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1230


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (ZERO) then maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (ZERO)) then maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (SUCC (ZERO))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (SUCC (ZERO))
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (SUCC (ZERO)) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))) then maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) then maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) else maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
=================================================
Progress: 1231


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) then ZERO else maximum (tf3 (Tip (SUCC (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then SUCC (ZERO) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (Tip (ZERO))))) = ZERO
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO))))))) then maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) else maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
=================================================
Progress: 1232


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
=================================================
Progress: 1233


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1234


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1235


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1236


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1237


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1238


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1239


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (ZERO))))
Prop: SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) = maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
Prop: Tip (ZERO) = Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1240


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO))))) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Tip (ZERO)))))
=================================================
Progress: 1241


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1242


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1243


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1244


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (maximum (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1245


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))(rank : 0.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1246


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

---------------------------------------
forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1247


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat1)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1248


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
maximum (tf3 (Bin (tree2) (tree3))) = SUCC (maximum (Bin (tree2) (tree3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH1 in goal at 1(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite IH2 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
=================================================
Progress: 1249


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1250


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite IH2 in goal at 0(rank:16.)
rewrite IH2 in goal at 1(rank:16.)
rewrite IH2 in goal at 2(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1251


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1252


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1253


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:8.)
rewrite IH2 in goal at 2(rank:23.)
case lq (maximum (tree2)) (maximum (tree3))(rank:8.)
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
=================================================
Progress: 1254


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
rewrite IH2 in goal at 0(rank:16.)
=================================================
Progress: 1255


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1256


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1257


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1258


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1259


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1260


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1261


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1262


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1263


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1264


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1265


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
rewrite IH2 in goal at 0(rank:24.)
rewrite IH2 in goal at 1(rank:24.)
rewrite IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1266


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1267


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank:9.)
=================================================
Progress: 1268


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1269


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1270


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 1
Prop: if lq (maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO))))))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = ZERO
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) (ZERO) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (ZERO) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (maximum (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (SUCC (maximum (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) then maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Tip (SUCC (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then maximum (tf3 (Tip (ZERO))) else maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1271


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 1272


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 1273


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1274


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1275


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree2(rank:11.)
=================================================
Progress: 1276


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (maximum (Tip (nat1))) (maximum (tree2)) = true -> if lq (maximum (tf3 (Tip (nat1)))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree2(rank:11.)
=================================================
Progress: 1277


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

3 conjecture(s) more...
>>> induction tree2(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 1278


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
---------------------------------------
forall (tree2:tree), lq (nat1) (maximum (tree2)) = true -> if lq (nat1) (maximum (tree2)) then maximum (tf3 (tree2)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree2))

1 goal(s) more...

3 conjecture(s) more...
>>> induction tree2(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 1279


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Tip (nat2)))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1280


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (maximum (Tip (nat2))) = true -> if lq (nat1) (maximum (Tip (nat2))) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Tip (nat2)))

2 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1281


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1282


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
---------------------------------------
lq (nat1) (nat2) = true -> if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1283


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1284


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1285


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (SUCC (nat1)) (maximum (tf3 (Bin (tree3) (tree4)))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1286


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:11.)
case lq (maximum (tree3)) (maximum (tree4))(rank:11.)
=================================================
Progress: 1287


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1288


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Tip (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
if true then maximum (tf3 (Tip (nat2))) else maximum (tf3 (Tip (nat1))) = SUCC (nat2)

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1289


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (maximum (Bin (tree3) (tree4))) = true -> if lq (nat1) (maximum (Bin (tree3) (tree4))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (Bin (tree3) (tree4)))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1290


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
---------------------------------------
lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true -> if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case lq (maximum (tree3)) (maximum (tree4))(rank:11.)
rewrite Cond1 in goal at 0(rank:18.)
=================================================
Progress: 1291


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
case lq (maximum (tree3)) (maximum (tree4))(rank:12.)
=================================================
Progress: 1292


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 1293


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 1294


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:13.)
=================================================
Progress: 1295


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 1296


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 1297


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

3 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 1298


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 1299


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 1300


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:14.)
=================================================
Progress: 1301


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:14.)
=================================================
Progress: 1302


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

4 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Case2 in goal at 0(rank:14.)
=================================================
Progress: 1303


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1304


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Case3 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 1305


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1306


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 1307


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 1308


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case3 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
=================================================
Progress: 1309


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then SUCC (maximum (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 2
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))) (Tip (SUCC (SUCC (ZERO)))))))))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO))))))) (maximum (tf3 (Tip (ZERO)))) then SUCC (ZERO) else maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))) = SUCC (ZERO)
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO)))))))) then SUCC (ZERO) else maximum (tf3 (Tip (ZERO))) = SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = ZERO
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Tip (ZERO)))) then ZERO else maximum (tf3 (Tip (ZERO))) = ZERO
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) (maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))))) then SUCC (ZERO) else maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (ZERO)
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: if lq (maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) (maximum (tf3 (Tip (SUCC (ZERO))))) then maximum (tf3 (Tip (SUCC (ZERO)))) else maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) then maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: if lq (maximum (tf3 (Tip (ZERO)))) (maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) then maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) else maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
=================================================
Progress: 1310


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank:9.)
=================================================
Progress: 1311


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1312


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite IH1 in goal at 0(rank:24.)
rewrite IH2 in goal at 0(rank:24.)
=================================================
Progress: 1313


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree2)) (maximum (tree3))(rank:9.)
=================================================
Progress: 1314


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (if lq (maximum (tree2)) (maximum (tree3)) then maximum (tree3) else maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tree2)) (maximum (tree3))(rank : 9.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1315


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = false
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree2))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1316


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1317


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (SUCC (ZERO))) = Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: Tip (SUCC (ZERO)) = Bin (Tip (SUCC (ZERO))) (Tip (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1318


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (SUCC (ZERO)))
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH2 in goal at 0
case lq (maximum (tf3 (tree2))) (SUCC (maximum (tree3)))
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1319


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 1320


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))
=================================================
Progress: 1321


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1322


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1323


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1324


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1325


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1326


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1327


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1328


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1329


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1330


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1331


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1332


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1333


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1334


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1335


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1336


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO)) = Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1337


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO))) = Tip (SUCC (ZERO))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (SUCC (SUCC (ZERO))) = Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 1338


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Tip (SUCC (ZERO))))))
=================================================
Progress: 1339


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1340


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1341


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1342


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1343


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO)))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))))
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1344


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1345


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1346


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1347


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1348


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (SUCC (ZERO)))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (SUCC (ZERO))
=================================================
Progress: 1349


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO))))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1350


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1351


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
=================================================
Progress: 1352


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1353


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1354


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1355


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))) = Tip (SUCC (ZERO))
Prop: Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO)) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1356


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1357


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1358


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1359


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1360


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
Prop: Tip (SUCC (ZERO)) = Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
=================================================
Progress: 1361


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1362


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))))
=================================================
Progress: 1363


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1364


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1365


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1366


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1367


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (SUCC (ZERO))) = Tip (SUCC (ZERO))
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1368


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1369


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1370


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1371


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1372


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))
Prop: Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (ZERO)))) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
=================================================
Progress: 1373


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))
Prop: Tip (ZERO) = Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1374


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1375


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))
=================================================
Progress: 1376


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1377


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1378


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1379


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (SUCC (ZERO))))))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))))))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (SUCC (ZERO))) (Tip (ZERO)) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))))))) (Tip (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1380


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1381


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1382


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1383


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1384


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
Prop: Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1385


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (SUCC (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))))))
=================================================
Progress: 1386


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1387


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
Case3 : lq (maximum (tree4)) (maximum (tree5)) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
case lq (maximum (tree4)) (maximum (tree5))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1388


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1389


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1390


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1391


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1392


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1393


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1394


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1395


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1396


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (SUCC (maximum (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
=================================================
Progress: 1397


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree5))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree4)) (maximum (tree5))
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1398


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1399


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1400


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1401


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1402


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1403


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Bin (Tip (SUCC (ZERO))) (Tip (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1404


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))
=================================================
Progress: 1405


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1406


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1407


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (SUCC (ZERO))))))
=================================================
Progress: 1408


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1409


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1410


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)) = Tip (ZERO)
Prop: Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1411


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1412


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1413


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1414


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1415


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1416


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1417


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:10.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 1418


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1419


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1420


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1421


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:18.)
rewrite <- Case1 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite <- Case2 in goal at 0(rank:26.)
=================================================
Progress: 1422


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1423


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1424


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
=================================================
Progress: 1425


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1426


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1427


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1428


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1429


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1430


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1431


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1432


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Bin (Tip (ZERO)) (Tip (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (SUCC (SUCC (ZERO))))
=================================================
Progress: 1433


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1434


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:10.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 1435


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1436


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1437


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1438


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:18.)
rewrite <- Case1 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite <- Case2 in goal at 0(rank:26.)
=================================================
Progress: 1439


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1440


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1441


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 1442


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1443


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1444


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (SUCC (ZERO)))
Prop: Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1445


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1446


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1447


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1448


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1449


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Tip (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO))))))) (Tip (SUCC (ZERO)))
Prop: Tip (ZERO) = Tip (SUCC (SUCC (SUCC (ZERO))))
=================================================
Progress: 1450


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1451


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1452


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))))) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1453


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
=================================================
Progress: 1454


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1455


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))) = Tip (SUCC (ZERO))
Prop: Bin (Tip (ZERO)) (Tip (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1456


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1457


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1458


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1459


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1460


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1461


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1462


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1463


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1464


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1465


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1466


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (SUCC (SUCC (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1467


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), maximum (tf3 (tree1)) = if lq (maximum (tri (tree2))) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (maximum (tri (tree2)))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1468


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1469


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1470


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1471


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (SUCC (ZERO)) = Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))
=================================================
Progress: 1472


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1473


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:10.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 1474


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1475


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1476


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1477


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:18.)
rewrite <- Case1 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite <- Case2 in goal at 0(rank:26.)
=================================================
Progress: 1478


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1479


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1480


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1481


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = maximum (tf3 (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree4))) (maximum (tf3 (tree5)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) (Tip (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) (Tip (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1482


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
maximum (tf3 (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1483


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = true
---------------------------------------
SUCC (maximum (tree5)) = SUCC (maximum (tree5))

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree4)) (maximum (tree5))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (SUCC (SUCC (ZERO)))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1484


1st goal of : forall (tree1:tree) (tree2:tree) (tree3:tree), lq (maximum (tf3 (tri (tree2)))) (maximum (tf3 (tri (tree3)))) = true -> maximum (tf3 (tree1)) = if lq (mainNew (tree2)) (mainNew (tree3)) then SUCC (maximum (tree1)) else SUCC (mainNew (tree2))
tree3 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Tip (nat1)
Cond1 : lq (SUCC (ZERO)) (maximum (tf3 (tri (tree3)))) = true
Case1 : lq (ZERO) (mainNew (tree3)) = true
tree1 : tree
tree4 : tree
tree5 : tree
IH1 : maximum (tf3 (tree4)) = SUCC (maximum (tree4))
IH2 : maximum (tf3 (tree5)) = SUCC (maximum (tree5))
Inductive1 : tree1 = Bin (tree4) (tree5)
Case2 : lq (maximum (tree4)) (maximum (tree5)) = true
Case3 : lq (maximum (tf3 (tree4))) (maximum (tf3 (tree5))) = false
---------------------------------------
SUCC (maximum (tree4)) = SUCC (maximum (tree5))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 1485


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 1486


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1487


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1488


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (ZERO)))) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
=================================================
Progress: 1489


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1490


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:10.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 1491


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1492


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:11.)
=================================================
Progress: 1493


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1494


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:18.)
rewrite <- Case1 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 0(rank:18.)
rewrite <- Case2 in goal at 0(rank:26.)
=================================================
Progress: 1495


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1496


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1497


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1498


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1499


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1500


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
=================================================
Progress: 1501


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1502


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1503


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1504


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
=================================================
Progress: 1505


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1506


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1507


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1508


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1509


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1510


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (SUCC (ZERO)))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1511


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 1512


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1513


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1514


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1515


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1516


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1517


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (SUCC (ZERO))
=================================================
Progress: 1518


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1519


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1520


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1521


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1522


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1523


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))))) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1524


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1525


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1526


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1527


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))
=================================================
Progress: 1528


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1529


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1530


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1531


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1532


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) (Tip (ZERO))))
=================================================
Progress: 1533


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1534


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1535


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
=================================================
Progress: 1536


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1537


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1538


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1539


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1540


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1541


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1542


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1543


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1544


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1545


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))
Prop: Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Tip (ZERO)) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1546


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1547


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1548


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1549


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1550


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1551


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))
Prop: Bin (Tip (SUCC (ZERO))) (Tip (ZERO)) = Tip (ZERO)
=================================================
Progress: 1552


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
=================================================
Progress: 1553


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1554


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1555


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Tip (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1556


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1557


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))))))
=================================================
Progress: 1558


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1559


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1560


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1561


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: SUCC (maximum (Tip (SUCC (ZERO)))) = maximum (tf3 (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1562


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))) = Tip (ZERO)
Prop: Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1563


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1564


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1565


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1566


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1567


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1568


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (SUCC (ZERO)))
=================================================
Progress: 1569


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO))))) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO))))) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1570


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1571


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1572


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1573


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1574


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1575


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1576


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1577


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1578


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (SUCC (ZERO)))))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))) = Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO)))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1579


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))
Prop: Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO))) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
=================================================
Progress: 1580


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1581


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1582


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1583


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1584


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1585


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (SUCC (ZERO))) = Tip (SUCC (SUCC (ZERO)))
Prop: Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))) = Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)))
Prop: Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)) = Tip (ZERO)
=================================================
Progress: 1586


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1587


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1588


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) (Tip (ZERO))))
=================================================
Progress: 1589


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1590


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))
=================================================
Progress: 1591


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree2)) (maximum (tree3)) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
case lq (maximum (tree2)) (maximum (tree3))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1592


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1593


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1594


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:8.)
=================================================
Progress: 1595


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (SUCC (SUCC (ZERO))))) = maximum (tf3 (Tip (ZERO)))
Prop: SUCC (maximum (Tip (ZERO))) = maximum (tf3 (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) (Tip (ZERO))) = Tip (ZERO)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO))))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1596


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
maximum (tf3 (tree2)) = maximum (tf3 (tree3))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (maximum (tree2)) (maximum (tree3))
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
=================================================
Progress: 1597


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1598


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1599


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
=================================================
Progress: 1600


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 1
case lq (SUCC (maximum (tree2))) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO))))
=================================================
Progress: 1601


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1602


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = true
---------------------------------------
SUCC (maximum (tree3)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), maximum (tf3 (tree1)) = SUCC (maximum (tree1))
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : maximum (tf3 (tree2)) = SUCC (maximum (tree2))
IH2 : maximum (tf3 (tree3)) = SUCC (maximum (tree3))
Inductive1 : tree1 = Bin (tree2) (tree3)
Case1 : lq (maximum (tree2)) (maximum (tree3)) = true
Case2 : lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3))) = false
---------------------------------------
SUCC (maximum (tree2)) = SUCC (maximum (tree3))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 1
Tactic List : 0
previous tactics
simpl in goal
case lq (maximum (tree2)) (maximum (tree3))
rewrite IH1 in goal at 2
case lq (maximum (tf3 (tree2))) (maximum (tf3 (tree3)))
rewrite IH2 in goal at 0
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) (Tip (ZERO))
Prop: Tip (SUCC (SUCC (SUCC (ZERO)))) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) (Tip (ZERO))))) = Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))
=================================================
Progress: 1603


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:11.)
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:11.)
=================================================
Progress: 1604


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
rewrite IH2 in goal at 0(rank:28.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1605


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = maximum (tf3 (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:12.)
rewrite IH2 in goal at 3(rank:20.)
rewrite IH2 in goal at 2(rank:28.)
rewrite IH2 in goal at 0(rank:28.)
rewrite IH2 in goal at 1(rank:28.)
=================================================
Progress: 1606


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1607


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1608


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = maximum (tf3 (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1609


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1610


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1611


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1612


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1613


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO))))))) (Tip (SUCC (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1614


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 1615


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree2(rank:9.)
=================================================
Progress: 1616


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1617


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 1618


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
=================================================
Progress: 1619


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (SUCC (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)) = Tip (SUCC (ZERO))
=================================================
Progress: 1620


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:26.)
rewrite Cond1 in goal at 2(rank:26.)
=================================================
Progress: 1621


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:11.)
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:11.)
=================================================
Progress: 1622


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
rewrite IH2 in goal at 0(rank:28.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1623


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = maximum (tf3 (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:12.)
rewrite IH2 in goal at 3(rank:20.)
rewrite IH2 in goal at 2(rank:28.)
rewrite IH2 in goal at 0(rank:28.)
rewrite IH2 in goal at 1(rank:28.)
=================================================
Progress: 1624


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1625


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1626


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = maximum (tf3 (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1627


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1628


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1629


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1630


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1631


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO))))) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
=================================================
Progress: 1632


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
=================================================
Progress: 1633


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:26.)
rewrite Cond1 in goal at 2(rank:26.)
=================================================
Progress: 1634


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:11.)
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:11.)
=================================================
Progress: 1635


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
rewrite IH2 in goal at 0(rank:28.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1636


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = maximum (tf3 (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:12.)
rewrite IH2 in goal at 3(rank:20.)
rewrite IH2 in goal at 2(rank:28.)
rewrite IH2 in goal at 0(rank:28.)
rewrite IH2 in goal at 1(rank:28.)
=================================================
Progress: 1637


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1638


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1639


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = maximum (tf3 (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1640


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1641


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1642


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1643


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1644


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1645


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))
Prop: Tip (SUCC (ZERO)) = Bin (Tip (ZERO)) (Tip (ZERO))
=================================================
Progress: 1646


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:26.)
rewrite Cond1 in goal at 2(rank:26.)
=================================================
Progress: 1647


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:11.)
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:11.)
=================================================
Progress: 1648


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
rewrite IH2 in goal at 0(rank:28.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1649


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = maximum (tf3 (tree4))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank:12.)
rewrite IH2 in goal at 3(rank:20.)
rewrite IH2 in goal at 2(rank:28.)
rewrite IH2 in goal at 0(rank:28.)
rewrite IH2 in goal at 1(rank:28.)
=================================================
Progress: 1650


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1651


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1652


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = maximum (tf3 (tree4))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1653


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1654


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1655


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1656


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1657


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))
Prop: Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) = Tip (SUCC (ZERO))
Prop: Tip (SUCC (ZERO)) = Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)))
=================================================
Progress: 1658


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))) (Tip (ZERO))))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))))))
Prop: Tip (ZERO) = Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)))) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1659


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (nat1) (maximum (tree4)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:26.)
rewrite Cond1 in goal at 2(rank:26.)
=================================================
Progress: 1660


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1661


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 1662


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1663


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1664


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
simpl in goal
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
rewrite Cond1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO)))) = Bin (Tip (SUCC (ZERO))) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1665


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 1666


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree2(rank:9.)
=================================================
Progress: 1667


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1668


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 1669


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
Cond2 : lq (maximum (tree1)) (maximum (tree2)) = false
---------------------------------------
tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))
Prop: Tip (SUCC (SUCC (SUCC (ZERO)))) = Tip (ZERO)
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO)) = Tip (ZERO)
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
Cond2 : lq (maximum (tree1)) (maximum (tree2)) = false
---------------------------------------
tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 1670


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
Cond2 : lq (maximum (tree1)) (maximum (tree2)) = false
---------------------------------------
tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro tree1(rank:11.)
=================================================
Progress: 1671


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
>>> intro tree1(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro tree2(rank:11.)
=================================================
Progress: 1672


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
>>> intro tree2(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 1673


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 1674


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
Cond2 : lq (maximum (tree1)) (maximum (tree2)) = false
---------------------------------------
tree2 = tree1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))
=================================================
Progress: 1675


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1676


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 1677


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1678


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1679


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
simpl in goal
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
rewrite Cond1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO)) = Bin (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1680


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1681


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 1682


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1683


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1684


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
simpl in goal
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
rewrite Cond1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Bin (Tip (SUCC (ZERO))) (Tip (ZERO))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))
Prop: Tip (ZERO) = Tip (SUCC (SUCC (ZERO)))
=================================================
Progress: 1685


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1686


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:10.)
=================================================
Progress: 1687


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1688


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1689


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite Cond1 in goal at 0
simpl in goal
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
rewrite Cond1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (SUCC (ZERO))
=================================================
Progress: 1690


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1691


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if true then maximum (tf3 (Bin (tree3) (tree4))) else maximum (tf3 (Tip (nat1))) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
=================================================
Progress: 1692


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

1 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
case lq (maximum (tree3)) (maximum (tree4))(rank:12.)
=================================================
Progress: 1693


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (if lq (maximum (tree3)) (maximum (tree4)) then maximum (tree4) else maximum (tree3))

2 goal(s) more...

3 conjecture(s) more...
>>> case lq (maximum (tree3)) (maximum (tree4))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 1694


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree4))

3 goal(s) more...

3 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:13.)
=================================================
Progress: 1695


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

3 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1696


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
maximum (tf3 (tree4)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 4
rewrite Cond1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case2 in goal at 0(rank:20.)
rewrite <- Cond1 in goal at 0(rank:20.)
=================================================
Progress: 1697


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite Cond1 in goal at 0(rank:26.)
=================================================
Progress: 1698


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:19.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 1699


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1700


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:10.)
=================================================
Progress: 1701


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1702


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1703


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite Cond1 in goal at 0
simpl in goal
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) = Tip (ZERO)
Prop: Bin (Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

3 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1704


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 1705


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree2(rank:9.)
=================================================
Progress: 1706


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1707


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 1708


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true->lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false -> tree1 = tree2
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tree1)) (maximum (tree2)) = true
Cond2 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = false
---------------------------------------
tree1 = tree2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
=================================================
Progress: 1709


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite Cond1 in goal at 0(rank:26.)
=================================================
Progress: 1710


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:19.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 1711


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1712


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:10.)
=================================================
Progress: 1713


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1714


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1715


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite Cond1 in goal at 0
simpl in goal
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (SUCC (SUCC (ZERO))))) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))) = Tip (ZERO)
=================================================
Progress: 1716


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite Cond1 in goal at 0(rank:26.)
=================================================
Progress: 1717


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:19.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 1718


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1719


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:10.)
=================================================
Progress: 1720


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1721


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1722


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite Cond1 in goal at 0
simpl in goal
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))) = Bin (Tip (ZERO)) (Tip (ZERO))
=================================================
Progress: 1723


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:11.)
rewrite Cond1 in goal at 0(rank:26.)
=================================================
Progress: 1724


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Cond1 in goal at 0(rank:19.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 1725


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 18.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 1726


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:10.)
=================================================
Progress: 1727


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Cond1 in goal at 0(rank:10.)
=================================================
Progress: 1728


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1729


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if true then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (SUCC (maximum (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (nat1) (maximum (tree3)) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (nat1) (maximum (tree4)) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
rewrite Cond1 in goal at 0
simpl in goal
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
rewrite Cond1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (SUCC (ZERO))) (Tip (ZERO)) = Tip (ZERO)
=================================================
Progress: 1730


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1731


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1732


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1733


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1734


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1735


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Tip (SUCC (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1736


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1737


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1738


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1739


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1740


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1741


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))
Prop: Tip (ZERO) = Bin (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO))) (Tip (ZERO)))) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO))))
=================================================
Progress: 1742


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1743


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 1744


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))(rank:12.)
=================================================
Progress: 1745


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree3)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 1746


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: Tip (SUCC (SUCC (ZERO))) = Tip (SUCC (ZERO))
Prop: Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (SUCC (ZERO)))
Lemma List
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
End of Lemma List


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

5 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1747


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

5 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 1748


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree2(rank:9.)
=================================================
Progress: 1749


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1750


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
---------------------------------------
lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 1751


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
---------------------------------------
lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true->lq (maximum (tree1)) (maximum (tree2)) = false -> tree2 = tree1
tree1 : tree
tree2 : tree
Cond1 : lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) = true
Cond2 : lq (maximum (tree1)) (maximum (tree2)) = false
---------------------------------------
tree2 = tree1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1752


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1753


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1754


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1755


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1756


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (ZERO)))))
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1757


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1758


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1759


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1760


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1761


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case2 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (ZERO)))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case2 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Bin (Tip (ZERO)) (Bin (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (ZERO))))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))) (Tip (ZERO))))) (Bin (Bin (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (SUCC (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
=================================================
Progress: 1762


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1763


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1764


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1765


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1766


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1767


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) = Tip (SUCC (SUCC (SUCC (ZERO))))
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1768


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1769


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1770


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1771


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1772


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1773


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (ZERO)))) = SUCC (maximum (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Bin (Tip (ZERO)) (Tip (ZERO)))))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Tip (SUCC (ZERO))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
=================================================
Progress: 1774


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1775


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 1776


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))(rank:12.)
=================================================
Progress: 1777


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree3)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 1778


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (SUCC (SUCC (ZERO)))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))) (Tip (ZERO)) = Tip (ZERO)
=================================================
Progress: 1779


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1780


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1781


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1782


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1783


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Tip (SUCC (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (SUCC (SUCC (ZERO))))
=================================================
Progress: 1784


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1785


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1786


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1787


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1788


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case2 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case2 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1789


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1790


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1791


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1792


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1793


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1794


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (SUCC (SUCC (ZERO))))))))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Bin (Tip (SUCC (ZERO))) (Tip (ZERO)))))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (ZERO)) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1795


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1796


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:13.)
rewrite IH2 in goal at 0(rank:29.)
rewrite IH2 in goal at 1(rank:29.)
rewrite IH2 in goal at 2(rank:29.)
rewrite IH2 in goal at 3(rank:29.)
=================================================
Progress: 1797


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:20.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 1798


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:12.)
=================================================
Progress: 1799


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree4))

6 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1800


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case4 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (ZERO)))) = SUCC (maximum (Bin (Tip (SUCC (SUCC (SUCC (ZERO))))) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
reflexivity
validate generalize_common_subterm_goal
Prop: Tip (ZERO) = Tip (ZERO)
Prop: Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Tip (SUCC (SUCC (SUCC (ZERO))))
=================================================
Progress: 1801


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1802


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:11.)
=================================================
Progress: 1803


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))(rank:12.)
=================================================
Progress: 1804


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
---------------------------------------
maximum (tf3 (tree4)) = if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree3)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 1805


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = maximum (tf3 (tree3))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> maximum (tf3 (tree3)) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree3)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tree3)) (maximum (tree4)) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
---------------------------------------
maximum (tf3 (tree4)) = SUCC (maximum (tree3))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) (Tip (ZERO)))) (Tip (ZERO)))))
Prop: maximum (tf3 (Bin (Bin (Bin (Tip (SUCC (ZERO))) (Tip (ZERO))) (Tip (SUCC (ZERO)))) (Bin (Tip (ZERO)) (Tip (ZERO))))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
case lq (maximum (tree3)) (maximum (tree4))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH1 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree3)))
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Tip (SUCC (ZERO))) = Bin (Tip (ZERO)) (Tip (SUCC (ZERO)))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (ZERO)
=================================================
Progress: 1806


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1807


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1808


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1809


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1810


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (SUCC (ZERO)))))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Bin (Tip (ZERO)) (Tip (ZERO))) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (ZERO)) (Tip (ZERO))))
Prop: maximum (tf3 (Tip (SUCC (SUCC (ZERO))))) = SUCC (maximum (Tip (ZERO)))
previous tactics
simpl in goal
intro Cond1
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tree3)) (maximum (tree4))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case1 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
validate generalize_common_subterm_goal
Prop: Bin (Tip (ZERO)) (Bin (Bin (Tip (ZERO)) (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO))))) (Tip (ZERO))) = Tip (ZERO)
Prop: Tip (ZERO) = Bin (Tip (ZERO)) (Tip (ZERO))
Prop: Bin (Tip (SUCC (SUCC (ZERO)))) (Tip (ZERO)) = Tip (SUCC (ZERO))
=================================================
Progress: 1811


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
lq (nat1) (maximum (tree4)) = true

4 goal(s) more...

2 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 1812


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = true
---------------------------------------
true = true

4 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 1813


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1814


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
---------------------------------------
maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 1815


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (maximum (tree3)) (maximum (tree4)) = true
Case2 : lq (SUCC (nat1)) (maximum (tf3 (tree3))) = true
Case3 : lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) = false
Case4 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
maximum (tf3 (tree3)) = SUCC (maximum (tree4))

6 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case2 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (ZERO)))
Prop: maximum (tf3 (Bin (Tip (ZERO)) (Tip (SUCC (ZERO))))) = SUCC (maximum (Bin (Tip (SUCC (ZERO))) (Tip (SUCC (ZERO)))))
Prop: maximum (tf3 (Tip (ZERO))) = SUCC (maximum (Tip (SUCC (ZERO))))
previous tactics
simpl in goal
intro Cond1
case lq (maximum (tree3)) (maximum (tree4))
case lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)))
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))
rewrite <- IH2 in goal at 0
rewrite Case2 in goal at 0
reflexivity
rewrite Cond1 in goal at 0
reflexivity
rewrite <- IH2 in goal at 0
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))
validate generalize_common_subterm_goal
Prop: Tip (SUCC (ZERO)) = Tip (ZERO)
Prop: Tip (SUCC (ZERO)) = Tip (SUCC (ZERO))
Prop: Tip (ZERO) = Tip (SUCC (ZERO))
=================================================
Progress: 1816


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = SUCC (maximum (tree4))

3 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank:12.)
case lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4)))(rank:12.)
=================================================
Progress: 1817


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = if lq (SUCC (nat1)) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (Tip (nat1)))

4 goal(s) more...

2 conjecture(s) more...
>>> case lq (SUCC (nat1)) (maximum (tf3 (tree4)))(rank : 12.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (maximum (tree1)) (maximum (tree2)) = true -> if lq (maximum (tf3 (tree1))) (maximum (tf3 (tree2))) then maximum (tf3 (tree2)) else maximum (tf3 (tree1)) = SUCC (maximum (tree2))
tree1 : tree
nat1 : nat
Base1 : tree1 = Tip (nat1)
tree2 : tree
tree3 : tree
tree4 : tree
IH1 : lq (nat1) (maximum (tree3)) = true -> if lq (SUCC (nat1)) (maximum (tf3 (tree3))) then maximum (tf3 (tree3)) else maximum (tf3 (Tip (nat1))) = SUCC (maximum (tree3))
IH2 : lq (nat1) (maximum (tree4)) = true -> maximum (tf3 (tree4)) = SUCC (maximum (tree4))
Inductive1 : tree2 = Bin (tree3) (tree4)
Cond1 : lq (nat1) (maximum (tree4)) = true
Case1 : lq (SUCC (nat1)) (if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3))) = true
Case2 : lq (maximum (tree3)) (maximum (tree4)) = true
Case3 : lq (SUCC (nat1)) (maximum (tf3 (tree4))) = true
---------------------------------------
if lq (maximum (tf3 (tree3))) (maximum (tf3 (tree4))) then maximum (tf3 (tree4)) else maximum (tf3 (tree3)) = maximum (tf3 (tree4))

5 goal(s) more...

2 conjecture(s) more...
