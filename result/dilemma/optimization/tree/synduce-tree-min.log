Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), tf1 (ZERO) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), tf1 (ZERO) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (ZERO) (repr (Node (nat1) (tree2) (tree3))) = mainNew (Node (nat1) (tree2) (tree3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (ZERO) (repr (Node (nat1) (tree2) (tree3))) = mainNew (Node (nat1) (tree2) (tree3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 13
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
rewrite IH1 in goal at 0(rank:11.)
rewrite IH1 in goal at 2(rank:11.)
rewrite <- IH1 in goal at 1(rank:11.)
rewrite <- IH1 in goal at 2(rank:11.)
rewrite <- IH1 in goal at 3(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite IH1 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:11.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil))
previous tactics
simpl in goal
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
parent
tf1 (nat1) (repr (tree3))
lower
tf1(_, repr(tree3))
upper
_
remove upper
tf1(ZERO(), repr(tree3))
remove lower
tf1(ZERO(), repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Lemma List
forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
parent
tf1 (nat1) (repr (tree3))
lower
tf1(_, repr(tree3))
upper
_
remove upper
tf1(ZERO(), repr(tree3))
remove lower
tf1(ZERO(), repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 17


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 19


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
forall (tree1:tree), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
parent
tf1 (nat1) (repr (tree3))
lower
tf1(_, repr(tree3))
upper
_
remove upper
tf1(ZERO(), repr(tree3))
remove lower
tf1(ZERO(), repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
remove upper
tf1(nat1, repr(tree3))
remove lower
tf1(nat1, repr(tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 22


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat), tf1 (nat1) (Tnil) = tf1 (ZERO) (Tnil)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 23


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
forall (tree1:tree), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (mainNew (tree2)) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
tf1 (nat1) (Tnil) = tf1 (ZERO) (Tnil)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 24


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat), tf1 (nat1) (Tnil) = tf1 (ZERO) (Tnil)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat), nat1 = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:6.)
=================================================
Progress: 25


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (mainNew (tree2)) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
tf1 (nat1) (Tnil) = tf1 (ZERO) (Tnil)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (mainNew (tree2)) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
nat1 = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: ZERO = ZERO
asdf
=================================================
Progress: 26


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat), nat1 = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
nat1 : nat
---------------------------------------
nat1 = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
nat1 : nat
---------------------------------------
nat1 = ZERO

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 27


1st goal of : forall (tree1:tree) (nat1:nat), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
nat1 : nat
---------------------------------------
nat1 = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), nat1 = ZERO

---------------------------------------
forall (nat1:nat), nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat), nat1 = ZERO

---------------------------------------
forall (nat1:nat), nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat), nat1 = ZERO
nat1 : nat
---------------------------------------
nat1 = ZERO

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
asdf
=================================================
Progress: 29


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (nat1)(rank:4.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 1(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:19.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
=================================================
Progress: 30


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 31


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 32


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 33


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 34


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 35


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 36


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 37


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 38


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
=================================================
Progress: 39


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 40


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 41


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (nat1)(rank:4.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 1(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:19.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
=================================================
Progress: 42


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 43


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 44


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 45


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 46


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 47


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 48


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 49


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 50


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 51


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 52


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 53


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
rewrite <- IH2 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:19.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
=================================================
Progress: 54


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 55


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 56


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 57


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 58


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 60


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 61


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 62


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 63


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 64


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 65


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 1(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:19.)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:4.)
=================================================
Progress: 66


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 67


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 3(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 68


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 69


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 70


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 71


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 72


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 73


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 74


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 75


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 76


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 77


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 78


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 79


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 80


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 81


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 82


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 83


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
rewrite <- IH2 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:19.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
=================================================
Progress: 84


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 85


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 86


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 87


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 88


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 89


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 90


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 91


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 92


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 93


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 94


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 95


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
rewrite <- IH2 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:19.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
=================================================
Progress: 96


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 97


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 3(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite IH1 in goal at 3(rank:20.)
rewrite IH1 in goal at 1(rank:12.)
=================================================
Progress: 98


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 99


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
=================================================
Progress: 100


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 101


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 102


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 103


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 104


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 105


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 106


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 107


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 110


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 111


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 112


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 113


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
rewrite <- IH1 in goal at 0(rank:19.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:4.)
=================================================
Progress: 114


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 115


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 3(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 116


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 117


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 118


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 119


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 120


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 121


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 122


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 123


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 124


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 125


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 126


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 127


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 128


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 129


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 130


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 131


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
rewrite <- IH1 in goal at 0(rank:19.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:4.)
=================================================
Progress: 132


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 133


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH1 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 134


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 135


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:6.)
=================================================
Progress: 136


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 137


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 138


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 139


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 140


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 141


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 142


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 143


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 144


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 145


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 146


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))
=================================================
Progress: 147


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 148


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))))))) = mainNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))))))
=================================================
Progress: 149


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:4.)
=================================================
Progress: 150


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 151


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 152


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 153


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
=================================================
Progress: 154


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 155


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 156


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 157


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 158


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 159


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 160


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 161


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 162


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 164


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 165


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 166


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 167


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:4.)
=================================================
Progress: 168


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 169


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 3(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 170


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 171


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 172


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 173


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 174


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 175


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 176


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 177


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 178


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 179


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 180


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 181


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))) (Node (SUCC (ZERO)) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))) (Node (SUCC (ZERO)) (Tnil) (Tnil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 182


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 183


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 184


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 185


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:4.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:4.)
=================================================
Progress: 186


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 187


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 3(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite IH1 in goal at 3(rank:20.)
rewrite IH1 in goal at 1(rank:12.)
=================================================
Progress: 188


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 189


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
=================================================
Progress: 190


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 191


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 192


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 193


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 194


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 195


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 196


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 197


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 198


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 199


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 200


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
=================================================
Progress: 201


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 202


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 203


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 204


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 205


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 206


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 207


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 208


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 209


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))))) = mainNew (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 210


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 211


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 212


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 213


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 214


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 215


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 216


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 217


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 218


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 219


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 220


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 221


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 222


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 223


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 224


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 225


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 226


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 227


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 228


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 229


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 230


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 231


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 232


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 233


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 234


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 235


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 236


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 237


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
forall (tree1:tree), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 238


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 239


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
forall (tree1:tree), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
tf1 (nat1) (Tnil) = tf1 (ZERO) (Tnil)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 240


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
tf1 (nat1) (Tnil) = tf1 (ZERO) (Tnil)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)
nat1 : nat
tree2 : tree
Cond1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
nat1 = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 241


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 242


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 243


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 244


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 245


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 246


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 247


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 248


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil)))))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 249


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 250


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 251


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 252


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 253


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 254


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 255


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 256


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 257


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 258


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 259


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 260


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 261


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 262


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Lemma List
forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 263


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 264


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 265


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 266


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 267


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
lq (nat1) (mainNew (Tnil)) = true -> tf1 (nat1) (repr (Tnil)) = mainNew (Tnil)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 268


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
lq (nat1) (mainNew (Tnil)) = true -> tf1 (nat1) (repr (Tnil)) = mainNew (Tnil)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (mainNew (Node (nat2) (tree2) (tree3))) = true -> tf1 (nat1) (repr (Node (nat2) (tree2) (tree3))) = mainNew (Node (nat2) (tree2) (tree3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 269


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (mainNew (Node (nat2) (tree2) (tree3))) = true -> tf1 (nat1) (repr (Node (nat2) (tree2) (tree3))) = mainNew (Node (nat2) (tree2) (tree3))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true -> tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 270


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true -> tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:6.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 3(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:14.)
=================================================
Progress: 271


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
lq (nat1) (mainNew (Tnil)) = true -> tf1 (nat1) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 272


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
lq (nat1) (mainNew (Tnil)) = true -> tf1 (nat1) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (mainNew (Node (nat2) (tree2) (tree3))) = true -> tf1 (nat1) (repr (Node (nat2) (tree2) (tree3))) = tf1 (ZERO) (repr (Node (nat2) (tree2) (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 273


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (mainNew (Node (nat2) (tree2) (tree3))) = true -> tf1 (nat1) (repr (Node (nat2) (tree2) (tree3))) = tf1 (ZERO) (repr (Node (nat2) (tree2) (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true -> tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 274


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true -> tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:6.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
case lq (tf1 (ZERO) (repr (tree2))) (nat2)(rank:6.)
=================================================
Progress: 275


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 276


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (nat2) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 1(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:15.)
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:7.)
=================================================
Progress: 277


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat2)(rank:7.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 278


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat2)(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:7.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 279


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (nat2) (mainNew (tree3))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
=================================================
Progress: 280


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:8.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 281


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (nat2) (mainNew (tree3))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
=================================================
Progress: 282


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat2)(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 283


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 284


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 285


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 286


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (tf1 (ZERO) (repr (tree2))) (nat2)
reflexivity
rewrite <- IH1 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (SUCC (SUCC (ZERO))) (repr (Tnil))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (SUCC (ZERO)) (repr (Tnil))) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (tf1 (ZERO) (repr (tree2))) (nat2)
reflexivity
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = false -> tf1 (nat2) (tree1) = tf1 (tf1 (nat1) (repr (tree2))) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 287


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 288


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = false -> tf1 (nat2) (tree1) = tf1 (tf1 (nat1) (repr (tree2))) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = false -> tf1 (nat2) (tree1) = tf1 (tf1 (nat1) (repr (tree2))) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = false -> tf1 (nat2) (tree1) = tf1 (tf1 (nat1) (repr (tree2))) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:15.)
=================================================
Progress: 289


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (ZERO) (repr (tree2))) (nat2)
case lq (tf1 (nat1) (repr (tree2))) (nat2)
reflexivity
rewrite IH1 in goal at 0
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (SUCC (ZERO)) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)))) (Tnil)))))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (ZERO) (repr (tree2))) (nat2)
case lq (tf1 (nat1) (repr (tree2))) (nat2)
reflexivity
Prop: tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (SUCC (ZERO)) (Tnil)
Prop: tf1 (tf1 (SUCC (SUCC (ZERO))) (repr (Tnil))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))
validate generalize_common_subterm_goal
Prop: tf1 (tf1 (SUCC (ZERO)) (repr (Tnil))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (SUCC (ZERO)) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))
Lemma List
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = false -> tf1 (tf1 (nat1) (repr (tree2))) (tree1) = tf1 (nat2) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 290


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = false -> tf1 (tf1 (nat1) (repr (tree2))) (tree1) = tf1 (nat2) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = false -> tf1 (tf1 (nat1) (repr (tree2))) (tree1) = tf1 (nat2) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = false -> tf1 (tf1 (nat1) (repr (tree2))) (tree1) = tf1 (nat2) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:15.)
=================================================
Progress: 291


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 292


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 293


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:9.)
=================================================
Progress: 294


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
Case3 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:9.)
=================================================
Progress: 295


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:9.)
=================================================
Progress: 296


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat) (tree2:tree), tf1 (nat1) (Tnil) = tf1 (tf1 (ZERO) (repr (tree2))) (Tnil)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 297


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (tf1 (ZERO) (repr (Tnil))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 298


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat) (tree2:tree), tf1 (nat1) (Tnil) = tf1 (tf1 (ZERO) (repr (tree2))) (Tnil)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat) (tree2:tree), nat1 = tf1 (ZERO) (repr (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 299


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (tf1 (ZERO) (repr (Tnil))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (nat1) = true -> tf1 (ZERO) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 300


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (nat1) = true -> tf1 (ZERO) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
forall (tree1:tree), tf1 (ZERO) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:9.)
=================================================
Progress: 301


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat2) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat2) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (SUCC (SUCC (ZERO))))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Lemma List
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 302


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:11.)
=================================================
Progress: 303


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
Case3 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
Case3 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat2) (mainNew (tree3))
case lq (tf1 (nat1) (repr (tree2))) (nat2)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil))) = tf1 (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
intro Cond1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat2) (mainNew (tree3))
case lq (tf1 (nat1) (repr (tree2))) (nat2)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) = mainNew (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 304


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (mainNew (tree1)) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (mainNew (tree2)) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (mainNew (tree3)) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (nat2) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (SUCC (ZERO)) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
intro Cond1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (nat2) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 305


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat) (tree2:tree), nat1 = tf1 (ZERO) (repr (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
tree2 : tree
Base2 : tree2 = Tnil
---------------------------------------
forall (nat1:nat), nat1 = tf1 (ZERO) (repr (Tnil))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 306


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
forall (tree1:tree), tf1 (ZERO) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
tf1 (ZERO) (Tnil) = tf1 (nat1) (Tnil)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 307


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
tree2 : tree
Base2 : tree2 = Tnil
---------------------------------------
forall (nat1:nat), nat1 = tf1 (ZERO) (repr (Tnil))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
tree2 : tree
Base2 : tree2 = Tnil
---------------------------------------
forall (nat1:nat), nat1 = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 308


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
tf1 (ZERO) (Tnil) = tf1 (nat1) (Tnil)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: ZERO = SUCC (SUCC (ZERO))
asdf
=================================================
Progress: 309


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
tree2 : tree
Base2 : tree2 = Tnil
---------------------------------------
forall (nat1:nat), nat1 = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
tree2 : tree
Base2 : tree2 = Tnil
nat1 : nat
---------------------------------------
nat1 = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
tree2 : tree
Base2 : tree2 = Tnil
nat1 : nat
---------------------------------------
nat1 = ZERO

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 310


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
tree1 : tree
Base1 : tree1 = Tnil
tree2 : tree
Base2 : tree2 = Tnil
nat1 : nat
---------------------------------------
nat1 = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), nat1 = ZERO

---------------------------------------
forall (nat1:nat), nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 311


1st goal of : forall (nat1:nat), nat1 = ZERO

---------------------------------------
forall (nat1:nat), nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat), nat1 = ZERO
nat1 : nat
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), nat1 = ZERO
End of Lemma List


1st goal of : forall (nat1:nat), nat1 = ZERO
nat1 : nat
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 312


1st goal of : forall (nat1:nat), nat1 = ZERO
nat1 : nat
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (nat1:nat), nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), nat1 = ZERO

---------------------------------------
forall (nat1:nat), nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro nat1(rank:11.)
=================================================
Progress: 313


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:11.)
=================================================
Progress: 314


1st goal of : forall (nat1:nat), nat1 = ZERO

---------------------------------------
forall (nat1:nat), nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat), nat1 = ZERO
nat1 : nat
---------------------------------------
nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 315


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 11.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:11.)
=================================================
Progress: 316


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 11.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
nat2 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 317


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
nat2 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
nat2 : nat
tree2 : tree
Cond1 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
forall (tree1:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 318


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
nat2 : nat
tree2 : tree
Cond1 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
forall (tree1:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat1) (mainNew (tree2)) = true->lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
nat2 : nat
tree2 : tree
Cond1 : lq (nat1) (mainNew (tree2)) = true
Cond2 : lq (nat2) (mainNew (tree2)) = true
---------------------------------------
forall (tree1:tree), tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:12.)
=================================================
Progress: 319


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 320


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 321


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 322


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 323


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (mainNew (tree2)) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 324


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 325


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 326


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 2
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 2
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 327


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 328


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 329


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 330


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 331


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 332


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 333


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 334


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 335


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 336


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 337


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 338


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 339


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))))) = mainNew (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 340


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 341


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 342


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 343


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 344


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 345


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 346


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 347


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 348


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 349


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 350


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 351


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 352


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 353


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 354


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 355


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 356


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 357


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 3(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 358


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 3(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
=================================================
Progress: 359


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 360


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 361


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 362


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 363


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 364


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 365


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 366


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 367


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 368


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 369


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 370


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
=================================================
Progress: 371


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 372


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 373


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 374


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 375


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 376


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 377


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 378


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 379


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 380


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 381


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 382


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 383


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 384


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:12.)
=================================================
Progress: 385


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 386


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 387


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 388


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 389


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 390


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 391


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
=================================================
Progress: 392


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 393


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 394


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 395


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 396


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 397


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 398


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 399


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 400


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 401


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 402


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil)) (Tnil)) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 403


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 404


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 405


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 406


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 407


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 408


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil))) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 409


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 410


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 411


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 412


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 413


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 414


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 415


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 416


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 417


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 418


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 419


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 420


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 421


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 422


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 423


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 424


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 425


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 426


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 427


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 428


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))
=================================================
Progress: 429


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 430


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 431


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 432


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 433


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 434


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 435


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
=================================================
Progress: 436


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
=================================================
Progress: 437


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 438


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 439


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 440


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 441


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 442


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 443


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 444


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 445


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 446


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 447


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 448


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 449


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 450


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 451


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 452


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 453


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 454


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
=================================================
Progress: 455


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 456


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 457


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 458


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 459


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 460


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 461


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 462


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
=================================================
Progress: 463


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 464


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 465


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 466


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))) (Tnil)) (Tnil)) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))) (Tnil)) (Tnil)) (Tnil)))
=================================================
Progress: 467


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 468


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 469


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 470


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 471


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 472


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 473


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 474


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 475


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 476


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 477


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 478


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 479


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 480


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 481


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 482


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 483


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 484


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 485


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 486


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 487


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 488


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 489


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 490


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 491


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 492


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 493


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) (Tnil))) (Tnil)))) = mainNew (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) (Tnil))) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 494


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 495


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil))) = mainNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 496


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 497


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 498


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 499


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 500


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil))))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil)) (Tnil)))) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil)) (Tnil)))) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 501


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite IH1 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 502


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
=================================================
Progress: 503


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 504


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 505


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 506


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 507


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 508


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 509


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 510


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 511


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 512


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 513


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite IH1 in goal at 3(rank:20.)
=================================================
Progress: 514


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 515


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 516


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 517


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
=================================================
Progress: 518


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 519


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 520


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 521


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 522


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 523


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 524


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 525


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 526


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 527


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 528


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 529


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 530


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 531


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil))) (Tnil))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 532


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) (Tnil)) (Tnil))) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))))) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) (Tnil)) (Tnil))) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))))) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
=================================================
Progress: 533


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = mainNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
=================================================
Progress: 534


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 3(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 535


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 3(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
=================================================
Progress: 536


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 537


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 538


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 539


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 540


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 541


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 542


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 543


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 544


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
=================================================
Progress: 545


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 546


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 547


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
=================================================
Progress: 548


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 549


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 550


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 551


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 552


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 553


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 554


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 555


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 556


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 557


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 558


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 559


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 560


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 561


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 562


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 563


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 564


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 565


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 566


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 567


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 568


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 569


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 570


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 571


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 572


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 573


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 574


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 575


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 576


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 577


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 578


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 579


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 580


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 581


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 582


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 583


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 584


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 585


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 586


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 587


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 588


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 589


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 590


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 591


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 592


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 593


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 594


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Tnil)))
=================================================
Progress: 595


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 596


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:6.)
=================================================
Progress: 597


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 598


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 599


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 600


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 601


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 602


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 603


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 604


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 605


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)))) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)))) (Tnil))
=================================================
Progress: 606


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 607


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 608


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 609


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 610


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 611


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 612


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 613


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 614


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 615


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 616


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 617


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 618


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 619


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 620


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 621


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 622


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 623


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 624


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 625


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 626


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 627


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 628


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 629


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 630


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 631


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 632


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 633


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 634


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 635


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 636


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 637


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 638


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 639


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 640


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (SUCC (ZERO))))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 641


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite <- IH1 in goal at 1(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 642


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 643


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 644


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 645


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 646


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 647


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 648


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 649


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 650


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil))) = mainNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 651


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 652


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 653


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 654


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 655


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 656


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 657


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH2 in goal at 3
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 658


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 659


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 660


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 661


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))
=================================================
Progress: 662


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 663


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 664


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 665


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 666


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 667


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 668


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 669


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 670


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 671


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 672


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
=================================================
Progress: 673


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 674


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 675


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
=================================================
Progress: 676


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 677


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 678


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 679


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 680


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 681


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 682


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 683


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 684


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 685


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 686


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 687


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 688


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 689


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 690


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))
=================================================
Progress: 691


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 692


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
=================================================
Progress: 693


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 694


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 695


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 696


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 697


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 698


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 699


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 700


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 701


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 702


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
=================================================
Progress: 703


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 704


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 705


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 706


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 707


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 708


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 709


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 710


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 711


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 712


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 713


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 714


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 715


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 716


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 717


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 718


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 719


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 720


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 721


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 722


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
=================================================
Progress: 723


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 724


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 3(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 725


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 3(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
=================================================
Progress: 726


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 727


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 728


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 729


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 730


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 731


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 732


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 733


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 734


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
=================================================
Progress: 735


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) (Tnil)))))) = tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) (Tnil))))))
Prop: tf1 (ZERO) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 736


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 737


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
=================================================
Progress: 738


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 739


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 740


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 741


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 742


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 743


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 744


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 745


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 746


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (repr (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil))
=================================================
Progress: 747


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 748


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 749


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 750


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 751


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 752


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 753


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 754


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 755


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 756


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 757


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
=================================================
Progress: 758


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 759


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 760


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 761


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 762


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
=================================================
Progress: 763


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 764


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 765


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 766


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 767


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 768


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 769


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 770


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 771


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 772


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
Lemma List
forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 773


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 774


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 775


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 776


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 777


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
lq (nat1) (tf1 (ZERO) (repr (Tnil))) = true -> tf1 (nat1) (repr (Tnil)) = mainNew (Tnil)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 778


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
lq (nat1) (tf1 (ZERO) (repr (Tnil))) = true -> tf1 (nat1) (repr (Tnil)) = mainNew (Tnil)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (tf1 (ZERO) (repr (Node (nat2) (tree2) (tree3)))) = true -> tf1 (nat1) (repr (Node (nat2) (tree2) (tree3))) = mainNew (Node (nat2) (tree2) (tree3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 779


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (tf1 (ZERO) (repr (Node (nat2) (tree2) (tree3)))) = true -> tf1 (nat1) (repr (Node (nat2) (tree2) (tree3))) = mainNew (Node (nat2) (tree2) (tree3))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true -> tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 780


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true -> tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:6.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 3(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:14.)
=================================================
Progress: 781


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
lq (nat1) (tf1 (ZERO) (repr (Tnil))) = true -> tf1 (nat1) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 782


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
lq (nat1) (tf1 (ZERO) (repr (Tnil))) = true -> tf1 (nat1) (repr (Tnil)) = tf1 (ZERO) (repr (Tnil))

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (tf1 (ZERO) (repr (Node (nat2) (tree2) (tree3)))) = true -> tf1 (nat1) (repr (Node (nat2) (tree2) (tree3))) = tf1 (ZERO) (repr (Node (nat2) (tree2) (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 783


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (tf1 (ZERO) (repr (Node (nat2) (tree2) (tree3)))) = true -> tf1 (nat1) (repr (Node (nat2) (tree2) (tree3))) = tf1 (ZERO) (repr (Node (nat2) (tree2) (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true -> tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 784


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true -> tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:6.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
case lq (tf1 (ZERO) (repr (tree2))) (nat2)(rank:6.)
=================================================
Progress: 785


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 786


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
case lq (nat2) (mainNew (tree3))(rank:7.)
rewrite <- IH2 in goal at 2(rank:15.)
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:7.)
rewrite IH1 in goal at 0(rank:15.)
rewrite IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 1(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite IH1 in goal at 1(rank:15.)
=================================================
Progress: 787


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat2)(rank:7.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 788


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat2)(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:7.)
rewrite IH1 in goal at 2(rank:23.)
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 1(rank:23.)
=================================================
Progress: 789


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (nat2) (mainNew (tree3))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 2(rank:24.)
=================================================
Progress: 790


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank:8.)
rewrite IH1 in goal at 0(rank:16.)
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 791


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (nat2) (mainNew (tree3))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Cond1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 2(rank:24.)
=================================================
Progress: 792


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat2)(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 793


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 794


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 795


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 796


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (tf1 (ZERO) (repr (tree2))) (nat2)
reflexivity
rewrite <- IH1 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (SUCC (SUCC (SUCC (ZERO)))) (repr (Node (ZERO) (Tnil) (Tnil)))) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (tf1 (SUCC (ZERO)) (repr (Tnil))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (SUCC (ZERO)) (repr (Tnil))) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))))) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) = tf1 (tf1 (ZERO) (repr (Tnil))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (tf1 (ZERO) (repr (tree2))) (nat2)
reflexivity
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))) (Tnil)) = tf1 (tf1 (ZERO) (repr (Tnil))) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))))) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = false -> tf1 (nat2) (tree1) = tf1 (tf1 (nat1) (repr (tree2))) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 797


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 798


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = false -> tf1 (nat2) (tree1) = tf1 (tf1 (nat1) (repr (tree2))) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = false -> tf1 (nat2) (tree1) = tf1 (tf1 (nat1) (repr (tree2))) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = false -> tf1 (nat2) (tree1) = tf1 (tf1 (nat1) (repr (tree2))) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:15.)
=================================================
Progress: 799


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (ZERO) (repr (tree2))) (nat2)
case lq (tf1 (nat1) (repr (tree2))) (nat2)
reflexivity
rewrite IH1 in goal at 0
Prop: tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Tnil) = tf1 (SUCC (ZERO)) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (SUCC (ZERO)) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))
Prop: tf1 (tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (ZERO) (repr (tree2))) (nat2)
case lq (tf1 (nat1) (repr (tree2))) (nat2)
reflexivity
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (SUCC (ZERO)) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) = tf1 (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))
Prop: tf1 (tf1 (ZERO) (repr (Tnil))) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Lemma List
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (tf1 (nat2) (repr (tree3))) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = false -> tf1 (tf1 (nat1) (repr (tree2))) (tree1) = tf1 (nat2) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 800


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (nat1) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (tf1 (nat2) (repr (tree3))) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = false -> tf1 (tf1 (nat1) (repr (tree2))) (tree1) = tf1 (nat2) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (tf1 (nat2) (repr (tree3))) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = false -> tf1 (tf1 (nat1) (repr (tree2))) (tree1) = tf1 (nat2) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree) (tree3:tree), lq (nat1) (tf1 (nat2) (repr (tree3))) = true->lq (tf1 (ZERO) (repr (tree2))) (nat2) = true->lq (tf1 (nat1) (repr (tree2))) (nat2) = false -> tf1 (tf1 (nat1) (repr (tree2))) (tree1) = tf1 (nat2) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:15.)
=================================================
Progress: 801


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = tf1 (ZERO) (repr (tree1))
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = tf1 (ZERO) (repr (tree2))
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (nat2) (repr (tree3))) = true
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat2) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = false
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (nat2) (repr (tree3))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 802


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 803


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 804


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:9.)
=================================================
Progress: 805


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (nat1) (repr (tree2))) (nat2) then nat2 else tf1 (nat1) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (tf1 (nat1) (repr (tree2))) (nat2)(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
Case3 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:9.)
=================================================
Progress: 806


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:9.)
=================================================
Progress: 807


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (tf1 (ZERO) (repr (Tnil))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 808


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (tf1 (ZERO) (repr (Tnil))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 809


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (tf1 (ZERO) (repr (Tnil))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 810


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (tf1 (ZERO) (repr (Tnil))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (nat1) = true -> tf1 (ZERO) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 811


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
forall (tree1:tree), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:9.)
=================================================
Progress: 812


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (nat1) = true -> tf1 (ZERO) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
forall (tree1:tree), tf1 (ZERO) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:9.)
=================================================
Progress: 813


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat2) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
intro Cond1
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat2) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Lemma List
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 814


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 815


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

---------------------------------------
forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 816


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree) (nat1:nat), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 817


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree) (nat1:nat), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
Cond1 : lq (nat2) (mainNew (tree2)) = true
---------------------------------------
forall (tree1:tree) (nat1:nat), tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 818


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
Cond1 : lq (nat2) (mainNew (tree2)) = true
---------------------------------------
forall (tree1:tree) (nat1:nat), tf1 (nat2) (tree1) = tf1 (nat1) (tree1)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
Cond1 : lq (nat2) (mainNew (tree2)) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat), tf1 (nat2) (Tnil) = tf1 (nat1) (Tnil)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 819


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
Cond1 : lq (nat2) (mainNew (tree2)) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat), tf1 (nat2) (Tnil) = tf1 (nat1) (Tnil)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
Cond1 : lq (nat2) (mainNew (tree2)) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat), nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:8.)
=================================================
Progress: 820


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
Cond1 : lq (nat2) (mainNew (tree2)) = true
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (nat1:nat), nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (nat2:nat) (tree2:tree), lq (nat2) (mainNew (tree2)) = true -> tf1 (nat2) (tree1) = tf1 (nat1) (tree1)
nat2 : nat
tree2 : tree
Cond1 : lq (nat2) (mainNew (tree2)) = true
tree1 : tree
Base1 : tree1 = Tnil
nat1 : nat
---------------------------------------
nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (SUCC (ZERO))
Prop: ZERO = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (ZERO)
asdf
=================================================
Progress: 821


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
Case3 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat2) (mainNew (tree3)) = true
Case3 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat2) (mainNew (tree3))
case lq (tf1 (nat1) (repr (tree2))) (nat2)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (SUCC (SUCC (ZERO))) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
intro Cond1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat2) (mainNew (tree3))
case lq (tf1 (nat1) (repr (tree2))) (nat2)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 822


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (nat1) (tf1 (ZERO) (repr (tree1))) = true -> tf1 (nat1) (repr (tree1)) = mainNew (tree1)
nat1 : nat
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true -> tf1 (nat1) (repr (tree2)) = mainNew (tree2)
IH2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true -> tf1 (nat1) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
Cond1 : lq (nat1) (tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat2) then nat2 else tf1 (ZERO) (repr (tree2))) (repr (tree3))) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (nat1) (repr (tree2))) (nat2) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat2) (repr (tree3)) = tf1 (nat1) (repr (tree3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (nat2) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Tnil))
previous tactics
simpl in goal
intro Cond1
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (tf1 (nat1) (repr (tree2))) (nat2)
case lq (nat2) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 823


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
forall (tree1:tree), tf1 (nat1) (tree1) = tf1 (ZERO) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = false
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
tf1 (nat1) (Tnil) = tf1 (ZERO) (Tnil)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 824


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
forall (tree1:tree), tf1 (ZERO) (tree1) = tf1 (nat1) (tree1)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
tf1 (ZERO) (Tnil) = tf1 (nat1) (Tnil)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 825


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = false
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
tf1 (nat1) (Tnil) = tf1 (ZERO) (Tnil)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = false
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
nat1 = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = false
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
nat1 = ZERO

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 826


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = false -> tf1 (nat1) (tree1) = tf1 (tf1 (ZERO) (repr (tree2))) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = false
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
nat1 = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 827


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
tf1 (ZERO) (Tnil) = tf1 (nat1) (Tnil)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
End of Lemma List


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = nat1

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 828


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree), lq (tf1 (ZERO) (repr (tree2))) (nat1) = true -> tf1 (tf1 (ZERO) (repr (tree2))) (tree1) = tf1 (nat1) (tree1)
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (nat1) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 829


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 830


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = true -> ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 831


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (SUCC (ZERO))) = ZERO
Prop: ZERO = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 832


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro nat1(rank:11.)
=================================================
Progress: 833


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = true -> ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
End of Lemma List


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 834


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro nat1(rank:11.)
=================================================
Progress: 835


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 836


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1

0 goal(s) more...

4 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = true -> ZERO = nat1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 837


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (SUCC (ZERO)) = ZERO
=================================================
Progress: 838


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = true -> ZERO = nat1

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = true -> ZERO = nat1
nat1 : nat
Cond1 : lq (ZERO) (nat1) = true
---------------------------------------
ZERO = nat1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
asdf
=================================================
Progress: 839


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 840


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 841


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 842


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 843


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 844


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 845


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 846


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 847


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 848


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 849


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 850


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 851


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
=================================================
Progress: 852


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (mainNew (tree3))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 853


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 854


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 855


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 856


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case2 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil)))))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite IH2 in goal at 0
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 857


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 858


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (mainNew (tree2)) (mainNew (tree3))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 859


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 860


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 861


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
=================================================
Progress: 862


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree2)) (mainNew (tree3))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 863


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 864


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 865


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (mainNew (tree2)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 866


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))))) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))))) (Tnil))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
=================================================
Progress: 867


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 868


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 0
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (SUCC (SUCC (SUCC (ZERO))))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))))
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 869


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (mainNew (tree2)) (nat1)(rank:5.)
=================================================
Progress: 870


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case lq (mainNew (tree2)) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 871


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 872


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree2)) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 873


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 874


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 875


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 876


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 877


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 878


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 879


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (mainNew (tree2)) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (nat1) (mainNew (tree3))
case lq (mainNew (tree2)) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 880


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 1
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 881


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 882


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 883


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 884


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 885


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 886


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 887


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 888


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 889


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 890


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) = mainNew (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 891


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (mainNew (tree3)) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))))))) = tf1 (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Tnil)))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (Tnil)))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 892


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite IH1 in goal at 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 893


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 894


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 895


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 896


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 897


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH1 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 898


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite IH1 in goal at 3(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 899


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:6.)
=================================================
Progress: 900


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 901


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 902


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 903


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 904


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 905


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 906


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 907


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) = tf1 (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 908


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil))) = mainNew (Node (ZERO) (Tnil) (Tnil))
=================================================
Progress: 909


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))) = mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))
=================================================
Progress: 910


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite IH1 in goal at 3(rank:20.)
=================================================
Progress: 911


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 912


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 913


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) then tf1 (ZERO) (repr (tree3)) else mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:7.)
=================================================
Progress: 914


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

4 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3))) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
Case4 : lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))) = mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (mainNew (tree2)) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 3
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (mainNew (tree3))
case lq (tf1 (ZERO) (repr (tree2))) (mainNew (tree3))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (SUCC (SUCC (ZERO)))) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 915


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree2)) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 916


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (mainNew (tree2)) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree2)) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree3))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 917


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then tf1 (ZERO) (repr (tree3)) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree3))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 918


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (mainNew (tree2)) (nat1) = true
Case3 : lq (nat1) (mainNew (tree3)) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) = mainNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 1
rewrite <- IH2 in goal at 2
case lq (mainNew (tree2)) (nat1)
case lq (nat1) (mainNew (tree3))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 919


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 920


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 921


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 922


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else mainNew (tree2)) (repr (tree3)) = mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 923


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else mainNew (tree2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 924


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
Case3 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
=================================================
Progress: 925


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))))) = mainNew (Node (ZERO) (Tnil) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Tnil) (Tnil)))))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
=================================================
Progress: 926


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 927


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 928


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 929


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (SUCC (ZERO))) (repr (Tnil)) = mainNew (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) (Tnil))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) = tf1 (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))
Prop: tf1 (SUCC (ZERO)) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
=================================================
Progress: 930


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 931


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 932


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:6.)
=================================================
Progress: 933


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
rewrite <- IH2 in goal at 0
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Tnil) = tf1 (ZERO) (Tnil)
Prop: tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil)) = tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))
previous tactics
simpl in goal
case lq (mainNew (tree2)) (mainNew (tree3))
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree2))) (nat1)
case lq (nat1) (tf1 (ZERO) (repr (tree3)))
validate generalize_common_subterm_goal
Prop: tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))) = mainNew (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (SUCC (ZERO)) (Tnil) (Tnil)))
Prop: tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)
Prop: tf1 (SUCC (ZERO)) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil))) = mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))
=================================================
Progress: 934


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (mainNew (tree3)) then if true then mainNew (tree3) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:5.)
=================================================
Progress: 935


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree3))) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 936


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
---------------------------------------
tf1 (if lq (tf1 (ZERO) (repr (tree2))) (nat1) then nat1 else tf1 (ZERO) (repr (tree2))) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else tf1 (ZERO) (repr (tree2)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree2))) (nat1)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree2)) (mainNew (tree3)) = true
Case2 : lq (tf1 (ZERO) (repr (tree2))) (nat1) = true
---------------------------------------
tf1 (nat1) (repr (tree3)) = if lq (nat1) (tf1 (ZERO) (repr (tree3))) then if true then tf1 (ZERO) (repr (tree3)) else tf1 (ZERO) (repr (tree2)) else nat1

2 goal(s) more...

0 conjecture(s) more...
