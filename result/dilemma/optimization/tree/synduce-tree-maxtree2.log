Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), tf1 (ZERO) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), tf1 (ZERO) (repr (tree1)) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
tf1 (ZERO) (repr (Tnil)) = mainNew (Tnil)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (ZERO) (repr (Node (nat1) (tree2) (tree3))) = mainNew (Node (nat1) (tree2) (tree3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
tf1 (ZERO) (repr (Node (nat1) (tree2) (tree3))) = mainNew (Node (nat1) (tree2) (tree3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 13
case lq (mainNew (tree3)) (mainNew (tree2))(rank:4.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:4.)
rewrite IH2 in goal at 0(rank:11.)
rewrite IH2 in goal at 2(rank:11.)
rewrite <- IH1 in goal at 1(rank:11.)
rewrite <- IH1 in goal at 2(rank:19.)
rewrite <- IH1 in goal at 3(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite IH2 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:11.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree3)) (mainNew (tree2))(rank:4.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
rewrite <- IH1 in goal at 3(rank:19.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:4.)
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 17


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 19


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 22


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 23


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree3)) (mainNew (tree2))(rank:4.)
rewrite <- IH1 in goal at 3(rank:11.)
rewrite <- IH1 in goal at 2(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
=================================================
Progress: 24


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 25


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 26


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 27


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 28


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 29


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree3)) (mainNew (tree2))(rank:4.)
rewrite <- IH1 in goal at 1(rank:11.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
rewrite <- IH1 in goal at 3(rank:19.)
=================================================
Progress: 30


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 31


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 32


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 33


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 34


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 35


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:4.)
rewrite <- IH2 in goal at 3(rank:11.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 1(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:4.)
=================================================
Progress: 36


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 37


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 38


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
=================================================
Progress: 39


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 40


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 41


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 42


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 43


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 44


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 45


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 46


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 47


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 48


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 49


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree3)) (mainNew (tree2))(rank:4.)
rewrite <- IH2 in goal at 1(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 3(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:4.)
=================================================
Progress: 50


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 51


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 52


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 53


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 54


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 55


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 56


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 57


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 58


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 60


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 61


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 62


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 63


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:4.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:4.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
=================================================
Progress: 64


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 65


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 66


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite <- IH2 in goal at 2(rank:13.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
=================================================
Progress: 67


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 68


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 69


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 70


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 71


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 72


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 73


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 74


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 75


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 76


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 77


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree3)) (mainNew (tree2))(rank:4.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:4.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 2(rank:19.)
=================================================
Progress: 78


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:12.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite IH2 in goal at 3(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
=================================================
Progress: 79


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 80


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 3(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 81


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 82


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 83


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 84


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 85


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 86


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 87


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 88


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 89


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 90


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 91


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree3)) (mainNew (tree2))(rank:4.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:4.)
=================================================
Progress: 92


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 93


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 94


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:13.)
=================================================
Progress: 95


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 96


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 97


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 98


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 99


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 100


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 101


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 102


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 103


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 104


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 105


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:4.)
=================================================
Progress: 106


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH2 in goal at 3(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 107


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 110


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 111


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 112


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 113


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 114


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 115


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 3(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:4.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:4.)
=================================================
Progress: 116


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 3(rank:12.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite IH2 in goal at 3(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
=================================================
Progress: 117


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 13
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 118


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 3(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 119


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 120


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 121


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 122


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 123


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 124


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 125


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 126


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 127


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 128


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 129


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:4.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:4.)
=================================================
Progress: 130


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 12
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 131


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 13
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
rewrite IH1 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite IH2 in goal at 0(rank:20.)
=================================================
Progress: 132


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 133


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 134


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 135


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 136


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 137


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 138


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 139


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 140


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 141


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 142


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 143


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 144


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 145


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 146


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 147


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 148


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:12.)
=================================================
Progress: 149


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 150


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 151


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:12.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 152


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 153


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 154


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 155


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
=================================================
Progress: 156


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 157


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 158


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 159


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 160


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 161


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 162


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 164


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 165


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 166


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 167


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 168


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 169


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 170


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 171


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 172


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 173


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 174


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 175


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 176


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 177


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 178


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 179


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 180


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 181


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 182


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 183


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 184


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 185


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 186


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 187


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 188


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 189


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 190


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 191


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 192


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 193


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 194


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 195


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 196


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 197


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 198


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
=================================================
Progress: 199


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 200


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 201


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 202


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 203


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 204


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 205


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 206


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 207


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 208


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 209


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 210


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 3(rank:12.)
=================================================
Progress: 211


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
=================================================
Progress: 212


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 213


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 214


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 215


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 216


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 217


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 218


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 219


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 220


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 221


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 222


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 223


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 224


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 225


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 226


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 227


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 228


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 229


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 230


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 231


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
=================================================
Progress: 232


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 233


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 234


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 235


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 236


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite IH2 in goal at 3(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 237


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 238


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 239


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 240


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 241


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 242


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 243


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 244


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 245


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 246


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 247


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 248


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 249


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 250


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
=================================================
Progress: 251


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 252


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 253


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 254


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
=================================================
Progress: 255


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 256


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 257


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 258


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 259


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 260


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 261


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 262


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 263


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:13.)
=================================================
Progress: 264


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 265


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 266


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 267


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 268


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 269


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 270


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 271


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 272


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 273


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 274


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
=================================================
Progress: 275


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 276


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 277


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
=================================================
Progress: 278


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 279


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 280


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 281


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 282


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 283


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 284


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 285


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 286


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 287


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
=================================================
Progress: 288


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 289


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 290


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 291


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 292


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 293


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 294


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 295


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 296


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 297


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 298


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 299


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 300


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 301


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 302


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 303


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 304


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 305


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 306


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 307


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 308


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 309


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 310


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 311


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 312


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 313


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 314


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 315


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 3(rank:12.)
=================================================
Progress: 316


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 3(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
=================================================
Progress: 317


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 318


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 319


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 320


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 321


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 322


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 323


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 324


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 325


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 326


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 327


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
=================================================
Progress: 328


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 329


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 330


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
=================================================
Progress: 331


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 332


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 333


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 334


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 335


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 336


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 337


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 338


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 339


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 340


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
=================================================
Progress: 341


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 342


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 343


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 344


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 345


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 3(rank:21.)
=================================================
Progress: 346


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 347


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 348


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 349


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 350


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 351


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 352


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 353


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 354


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 355


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 356


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 357


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 3(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 358


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 359


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 360


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 361


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 362


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 363


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 364


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 365


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 366


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 367


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 368


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite IH2 in goal at 1(rank:20.)
rewrite IH2 in goal at 3(rank:20.)
=================================================
Progress: 369


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 370


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 371


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
=================================================
Progress: 372


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 373


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 374


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 375


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 376


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 377


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite IH2 in goal at 3(rank:20.)
=================================================
Progress: 378


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 379


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 380


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 381


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 382


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite IH2 in goal at 3(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 383


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 384


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 385


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 386


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 387


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 388


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 389


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 390


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 391


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 392


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
=================================================
Progress: 393


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 394


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 395


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 396


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 397


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 398


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 399


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 400


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 401


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 402


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 403


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 404


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 405


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 406


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 407


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 408


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 409


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 410


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 411


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 412


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 413


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 414


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 415


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 416


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 417


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 418


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 419


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 420


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 421


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 422


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 423


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 424


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 425


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 426


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 427


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 428


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 429


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 430


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 431


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 432


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite IH2 in goal at 1(rank:20.)
rewrite IH2 in goal at 3(rank:20.)
=================================================
Progress: 433


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 434


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 435


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
=================================================
Progress: 436


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 437


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 438


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 439


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 440


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 441


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite IH2 in goal at 3(rank:20.)
=================================================
Progress: 442


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 443


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 444


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 445


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
=================================================
Progress: 446


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite IH2 in goal at 3(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 447


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 448


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 449


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 450


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 451


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 452


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 453


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 454


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 455


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 456


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 457


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
rewrite <- IH2 in goal at 2(rank:12.)
=================================================
Progress: 458


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 459


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 460


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 461


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 462


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
=================================================
Progress: 463


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 464


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 465


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 466


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 467


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 468


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 469


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 470


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 2(rank:12.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 471


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:13.)
=================================================
Progress: 472


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 473


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 474


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 475


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 476


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 477


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 478


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 479


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 480


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 481


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 482


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
=================================================
Progress: 483


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 11
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 484


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 485


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
=================================================
Progress: 486


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 487


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 488


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 489


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 490


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 491


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
=================================================
Progress: 492


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 493


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 494


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 495


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 1(rank:12.)
=================================================
Progress: 496


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 497


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 498


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 499


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 500


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 501


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 502


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 503


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 504


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 505


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 506


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 507


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 508


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 509


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 510


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 511


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 2(rank:12.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 1(rank:20.)
rewrite <- IH2 in goal at 2(rank:20.)
rewrite <- IH2 in goal at 0(rank:20.)
rewrite <- IH2 in goal at 3(rank:20.)
=================================================
Progress: 512


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 513


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 514


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 515


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 2(rank:20.)
rewrite <- IH1 in goal at 3(rank:20.)
=================================================
Progress: 516


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 517


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 518


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 519


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 520


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 521


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 522


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 523


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 524


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 525


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 526


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 527


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 528


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 529


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 530


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 531


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 532


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 533


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:4.)
=================================================
Progress: 534


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 535


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 536


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 537


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 538


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 539


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 540


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 541


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 542


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 543


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
=================================================
Progress: 544


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 545


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 546


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 547


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 548


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 549


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 550


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
=================================================
Progress: 551


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 552


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 553


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 554


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
=================================================
Progress: 555


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 556


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 557


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 558


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:4.)
=================================================
Progress: 559


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 560


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 561


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 562


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 563


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 564


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 565


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 566


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 567


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 568


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 569


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 570


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 571


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 572


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 573


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 574


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 575


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 576


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
rewrite <- IH2 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite IH2 in goal at 0(rank:20.)
rewrite IH2 in goal at 2(rank:20.)
=================================================
Progress: 577


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
=================================================
Progress: 578


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 579


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 580


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 581


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 582


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 583


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
=================================================
Progress: 584


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 585


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 586


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 587


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 588


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 589


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 590


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 3(rank:21.)
=================================================
Progress: 591


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 592


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
=================================================
Progress: 593


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 594


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 595


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 596


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 597


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 598


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 599


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
=================================================
Progress: 600


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 601


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
=================================================
Progress: 602


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 603


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 604


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 605


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 606


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 607


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite IH2 in goal at 0(rank:12.)
rewrite IH2 in goal at 1(rank:12.)
rewrite IH2 in goal at 2(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 608


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 609


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 610


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 611


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 612


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 613


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 614


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 615


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree3)) (mainNew (tree2))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 1
Prop: if lq (ZERO) (tf1 (SUCC (SUCC (ZERO))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (ZERO)) (mainNew (Tnil)) then if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then mainNew (Tnil) else SUCC (SUCC (ZERO)) else SUCC (ZERO)
Prop: if lq (ZERO) (tf1 (SUCC (ZERO)) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (SUCC (SUCC (ZERO)))) (mainNew (Tnil)) then if lq (SUCC (ZERO)) (mainNew (Tnil)) then mainNew (Tnil) else SUCC (ZERO) else SUCC (SUCC (SUCC (ZERO)))
Prop: if lq (ZERO) (tf1 (SUCC (SUCC (ZERO))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (ZERO)) (mainNew (Tnil)) then if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then mainNew (Tnil) else SUCC (SUCC (ZERO)) else SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (SUCC (SUCC (SUCC (SUCC (ZERO))))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (mainNew (Tnil)) then mainNew (Tnil) else SUCC (SUCC (SUCC (SUCC (ZERO)))) else ZERO
Prop: if lq (ZERO) (tf1 (SUCC (ZERO)) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (SUCC (ZERO)) (mainNew (Tnil)) then mainNew (Tnil) else SUCC (ZERO) else ZERO
Prop: if lq (ZERO) (tf1 (ZERO) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then if lq (ZERO) (mainNew (Tnil)) then mainNew (Tnil) else ZERO else SUCC (SUCC (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree3)) (mainNew (tree2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else SUCC (SUCC (ZERO))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil)))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) else ZERO
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree3)) (mainNew (tree2))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else SUCC (SUCC (ZERO))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) then tf1 (tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)))) (tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) then mainNew (Tnil) else mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) else ZERO
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 616


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 617


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 618


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 619


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 620


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 621


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (Tnil)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (Tnil)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Tnil) else mainNew (tree3) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 622


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (Tnil)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (Tnil)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Tnil) else mainNew (tree3) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (Node (nat2) (tree4) (tree5))) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (Node (nat2) (tree4) (tree5))) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 623


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (Node (nat2) (tree4) (tree5))) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (Node (nat2) (tree4) (tree5))) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree3(rank:6.)
=================================================
Progress: 624


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (tree2:tree), lq (mainNew (tree2)) (mainNew (Tnil)) = true -> if lq (ZERO) (tf1 (nat1) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (Tnil)) else ZERO = if lq (nat2) (mainNew (Tnil)) then if lq (nat1) (mainNew (Tnil)) then mainNew (Tnil) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 625


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
forall (tree2:tree), lq (mainNew (tree2)) (mainNew (Tnil)) = true -> if lq (ZERO) (tf1 (nat1) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (Tnil)) else ZERO = if lq (nat2) (mainNew (Tnil)) then if lq (nat1) (mainNew (Tnil)) then mainNew (Tnil) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (mainNew (tree2)) (mainNew (Node (nat3) (tree3) (tree4))) = true -> if lq (ZERO) (tf1 (nat1) (repr (Node (nat3) (tree3) (tree4)))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (Node (nat3) (tree3) (tree4))) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 626


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (mainNew (tree2)) (mainNew (Node (nat3) (tree3) (tree4))) = true -> if lq (ZERO) (tf1 (nat1) (repr (Node (nat3) (tree3) (tree4)))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (Node (nat3) (tree3) (tree4))) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (mainNew (tree2)) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true -> if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 627


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree3(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree), lq (mainNew (Tnil)) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 628


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (mainNew (tree2)) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true -> if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
lq (mainNew (Tnil)) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true -> if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 629


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree), lq (mainNew (Tnil)) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 630


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
lq (mainNew (Tnil)) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true -> if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true -> if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 631


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 632


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true -> if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:7.)
case lq (mainNew (tree4)) (mainNew (tree3))(rank:7.)
=================================================
Progress: 633


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 634


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree4)) (mainNew (tree3))(rank:8.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:8.)
=================================================
Progress: 635


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree4)) (mainNew (tree3))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat3) (mainNew (tree3))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:8.)
=================================================
Progress: 636


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = if lq (ZERO) (if lq (ZERO) (if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Tnil))) then if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Tnil)) else ZERO) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) else mainNew (Tnil) else ZERO
Prop: ZERO = if lq (ZERO) (if lq (SUCC (ZERO)) (if lq (mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) then if lq (mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) else SUCC (ZERO)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) else mainNew (Tnil) else ZERO
Prop: ZERO = if lq (SUCC (ZERO)) (if lq (ZERO) (if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (ZERO) (Tnil) (Tnil)) else mainNew (Tnil) else SUCC (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
End of Lemma List


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 637


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (mainNew (tree3)) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 638


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 639


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 640


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 641


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 642


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree1))(rank:8.)
=================================================
Progress: 643


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree4)) (mainNew (tree3))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (mainNew (tree3))(rank:9.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 644


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (mainNew (tree4)) (mainNew (tree3))(rank:9.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:9.)
=================================================
Progress: 645


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:9.)
case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:9.)
=================================================
Progress: 646


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (mainNew (tree3))(rank:9.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 647


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree1))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (if lq (nat2) (mainNew (tree1)) then if true then mainNew (tree1) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (mainNew (tree1)) then if true then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree1))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
=================================================
Progress: 648


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:10.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:10.)
=================================================
Progress: 649


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (mainNew (tree3))(rank:10.)
rewrite <- Case3 in goal at 0(rank:25.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
=================================================
Progress: 650


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree4)) (mainNew (tree3))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (mainNew (tree3))(rank:10.)
rewrite <- Case3 in goal at 0(rank:25.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
=================================================
Progress: 651


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree4)) (mainNew (tree3))(rank:10.)
=================================================
Progress: 652


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:10.)
rewrite Case1 in goal at 2(rank:17.)
case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:10.)
rewrite Case1 in goal at 0(rank:17.)
rewrite Case1 in goal at 1(rank:17.)
=================================================
Progress: 653


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:10.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:10.)
=================================================
Progress: 654


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:10.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:10.)
=================================================
Progress: 655


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (mainNew (tree3))(rank:10.)
rewrite <- Case3 in goal at 0(rank:25.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:10.)
rewrite <- Case1 in goal at 0(rank:25.)
rewrite <- Case2 in goal at 0(rank:25.)
=================================================
Progress: 656


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (if lq (nat2) (mainNew (tree1)) then if true then mainNew (tree1) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (mainNew (tree1)) then if true then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree1))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
---------------------------------------
ZERO = if lq (nat1) (mainNew (tree1)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (nat1) (mainNew (tree1))(rank:10.)
=================================================
Progress: 657


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:11.)
rewrite Case2 in goal at 2(rank:18.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:11.)
rewrite Case2 in goal at 0(rank:18.)
rewrite Case2 in goal at 1(rank:18.)
=================================================
Progress: 658


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:11.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:11.)
=================================================
Progress: 659


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:11.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:11.)
=================================================
Progress: 660


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (mainNew (tree3))(rank:11.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:26.)
rewrite <- Case3 in goal at 0(rank:26.)
rewrite <- Case4 in goal at 0(rank:26.)
=================================================
Progress: 661


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:11.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:11.)
=================================================
Progress: 662


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (mainNew (tree3))(rank:11.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:26.)
rewrite <- Case3 in goal at 0(rank:26.)
rewrite <- Case4 in goal at 0(rank:26.)
=================================================
Progress: 663


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (tree4)) (mainNew (tree3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (mainNew (tree3))(rank:11.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:26.)
rewrite <- Case3 in goal at 0(rank:26.)
rewrite <- Case4 in goal at 0(rank:26.)
=================================================
Progress: 664


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:11.)
rewrite Case1 in goal at 0(rank:26.)
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:11.)
=================================================
Progress: 665


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:11.)
rewrite Case1 in goal at 2(rank:18.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:11.)
rewrite Case1 in goal at 0(rank:18.)
rewrite Case1 in goal at 1(rank:18.)
=================================================
Progress: 666


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:11.)
rewrite Case1 in goal at 2(rank:18.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:11.)
rewrite Case1 in goal at 0(rank:18.)
rewrite Case1 in goal at 1(rank:18.)
=================================================
Progress: 667


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:11.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:11.)
=================================================
Progress: 668


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:11.)
rewrite Case1 in goal at 2(rank:18.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:11.)
rewrite Case1 in goal at 0(rank:18.)
rewrite Case1 in goal at 1(rank:18.)
=================================================
Progress: 669


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:11.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:11.)
=================================================
Progress: 670


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree3))(rank:11.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:11.)
=================================================
Progress: 671


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (mainNew (tree3))(rank:11.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case2 in goal at 0(rank:26.)
rewrite <- Case3 in goal at 0(rank:26.)
rewrite <- Case4 in goal at 0(rank:26.)
=================================================
Progress: 672


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
---------------------------------------
ZERO = if lq (nat1) (mainNew (tree1)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree1))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
Case3 : lq (nat1) (mainNew (tree1)) = true
---------------------------------------
ZERO = ZERO

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 673


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
Case3 : lq (nat1) (mainNew (tree1)) = true
---------------------------------------
ZERO = ZERO

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
Case3 : lq (nat1) (mainNew (tree1)) = false
---------------------------------------
ZERO = nat1

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), ZERO = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
Case3 : lq (nat1) (mainNew (tree1)) = false
---------------------------------------
ZERO = nat1

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 674


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
Case3 : lq (nat1) (mainNew (tree1)) = false
---------------------------------------
ZERO = nat1

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), ZERO = nat1(rank : 0.)


1st goal of : forall (nat1:nat), ZERO = nat1

---------------------------------------
forall (nat1:nat), ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 675


1st goal of : forall (nat1:nat), ZERO = nat1

---------------------------------------
forall (nat1:nat), ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat), ZERO = nat1
nat1 : nat
---------------------------------------
ZERO = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (SUCC (SUCC (SUCC (ZERO))))
asdf
=================================================
Progress: 676


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case2 in goal at 0(rank:27.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:12.)
=================================================
Progress: 677


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case2 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case2 in goal at 0(rank:19.)
rewrite Case2 in goal at 1(rank:19.)
=================================================
Progress: 678


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case2 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case2 in goal at 0(rank:19.)
rewrite Case2 in goal at 1(rank:19.)
=================================================
Progress: 679


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 680


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case2 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case2 in goal at 0(rank:19.)
rewrite Case2 in goal at 1(rank:19.)
=================================================
Progress: 681


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 682


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 683


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case3 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case3 in goal at 0(rank:19.)
rewrite Case3 in goal at 1(rank:19.)
=================================================
Progress: 684


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 685


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 686


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (mainNew (tree4)) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 687


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case5 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 0(rank:27.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:12.)
=================================================
Progress: 688


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case5 : lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case1 in goal at 1(rank:19.)
rewrite Case1 in goal at 0(rank:27.)
rewrite Case1 in goal at 2(rank:19.)
rewrite Case4 in goal at 0(rank:27.)
=================================================
Progress: 689


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 0(rank:27.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:12.)
=================================================
Progress: 690


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case1 in goal at 0(rank:19.)
rewrite Case1 in goal at 1(rank:19.)
=================================================
Progress: 691


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 0(rank:27.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:12.)
=================================================
Progress: 692


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case1 in goal at 0(rank:19.)
rewrite Case1 in goal at 1(rank:19.)
=================================================
Progress: 693


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case1 in goal at 0(rank:19.)
rewrite Case1 in goal at 1(rank:19.)
=================================================
Progress: 694


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 695


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 0(rank:27.)
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:12.)
=================================================
Progress: 696


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case1 in goal at 0(rank:19.)
rewrite Case1 in goal at 1(rank:19.)
=================================================
Progress: 697


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case1 in goal at 0(rank:19.)
rewrite Case1 in goal at 1(rank:19.)
=================================================
Progress: 698


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 699


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:12.)
rewrite Case1 in goal at 2(rank:19.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:12.)
rewrite Case1 in goal at 0(rank:19.)
rewrite Case1 in goal at 1(rank:19.)
=================================================
Progress: 700


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 701


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (if lq (nat3) (mainNew (tree3)) then if true then mainNew (tree3) else mainNew (tree4) else nat3) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

5 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (mainNew (tree3))(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (mainNew (tree3))(rank:12.)
=================================================
Progress: 702


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree3)) (mainNew (tree2))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (ZERO) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (ZERO) (mainNew (Tnil)) then mainNew (Tnil) else ZERO else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (SUCC (SUCC (SUCC (ZERO)))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (SUCC (SUCC (SUCC (ZERO)))) (mainNew (Tnil)) then mainNew (Tnil) else SUCC (SUCC (SUCC (ZERO))) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (SUCC (ZERO)) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (SUCC (ZERO)) (mainNew (Tnil)) then mainNew (Tnil) else SUCC (ZERO) else ZERO
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree3)) (mainNew (tree2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))) else ZERO = if lq (ZERO) (mainNew (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))) then if lq (mainNew (Tnil)) (mainNew (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))) then mainNew (Node (SUCC (ZERO)) (Tnil) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else SUCC (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
case lq (mainNew (tree3)) (mainNew (tree2))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (SUCC (ZERO)) (mainNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Tnil))) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) else mainNew (Tnil) else SUCC (ZERO)
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)))) (Tnil) else ZERO = if lq (SUCC (ZERO)) (mainNew (Tnil)) then if lq (mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil))) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) (Tnil)) else SUCC (ZERO)
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (SUCC (ZERO)) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else SUCC (ZERO)
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Tnil)) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 703


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 704


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 705


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 706


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 707


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (Tnil))) then tf1 (nat1) (repr (Tnil)) else ZERO = if lq (nat2) (mainNew (Tnil)) then if lq (nat1) (mainNew (Tnil)) then mainNew (Tnil) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 708


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (Tnil))) then tf1 (nat1) (repr (Tnil)) else ZERO = if lq (nat2) (mainNew (Tnil)) then if lq (nat1) (mainNew (Tnil)) then mainNew (Tnil) else nat1 else nat2

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (repr (tree2))) then tf1 (nat1) (repr (Tnil)) else ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (ZERO) (repr (tree2)))(rank:7.)
=================================================
Progress: 709


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (repr (tree2))) then tf1 (nat1) (repr (Tnil)) else ZERO = nat2

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
tree1 : tree
Base1 : tree1 = Tnil
Case1 : lq (ZERO) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (ZERO) (tf1 (ZERO) (repr (tree2)))
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), nat1 = nat2
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
tree1 : tree
Base1 : tree1 = Tnil
Case1 : lq (ZERO) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 710


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1))) then tf1 (nat1) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree2 : tree
tree1 : tree
Base1 : tree1 = Tnil
Case1 : lq (ZERO) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
intro nat2(rank:7.)
=================================================
Progress: 711


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 712


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = nat2
nat2 : nat
---------------------------------------
forall (nat1:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = SUCC (SUCC (ZERO))
asdf
=================================================
Progress: 713


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
asdf
=================================================
Progress: 714


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 715


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 716


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite IH2 in goal at 3(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 717


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 718


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 719


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 720


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 721


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 722


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 723


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 724


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 725


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 726


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 727


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 728


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 729


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 730


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 731


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 732


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 733


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 734


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 735


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 736


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 737


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 738


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 739


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 740


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 741


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
=================================================
Progress: 742


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 743


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 744


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 745


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 746


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 747


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 748


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 749


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
=================================================
Progress: 750


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 751


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 752


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 753


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 754


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 755


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 756


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
=================================================
Progress: 757


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 758


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 759


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 760


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 761


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 762


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 763


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 764


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 765


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 766


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 767


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 768


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 3(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 769


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 770


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 771


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 772


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 773


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 774


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
=================================================
Progress: 775


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 776


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 777


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 778


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 779


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 780


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 781


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 782


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 783


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 784


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 785


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 786


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 787


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 788


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 789


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 790


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH1 in goal at 1(rank:12.)
=================================================
Progress: 791


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 792


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 793


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 794


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 795


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite <- IH1 in goal at 2(rank:20.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 1(rank:20.)
=================================================
Progress: 796


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 797


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 798


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 799


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 800


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
=================================================
Progress: 801


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 802


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
=================================================
Progress: 803


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
=================================================
Progress: 804


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 805


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 806


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
=================================================
Progress: 807


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 808


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 809


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 810


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 811


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 812


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 813


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 1
Prop: if lq (ZERO) (tf1 (ZERO) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Tnil)))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (ZERO) (mainNew (Tnil)) then mainNew (Tnil) else ZERO else ZERO
Prop: if lq (ZERO) (tf1 (ZERO) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (ZERO) (mainNew (Tnil)) then mainNew (Tnil) else ZERO else ZERO
Prop: if lq (ZERO) (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) then tf1 (tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)))) (repr (Node (ZERO) (Tnil) (Tnil))) else ZERO = if lq (SUCC (SUCC (SUCC (SUCC (ZERO))))) (mainNew (Node (ZERO) (Tnil) (Tnil))) then if lq (ZERO) (mainNew (Node (ZERO) (Tnil) (Tnil))) then mainNew (Node (ZERO) (Tnil) (Tnil)) else ZERO else SUCC (SUCC (SUCC (SUCC (ZERO))))
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (SUCC (SUCC (ZERO))) (repr (Node (ZERO) (Tnil) (Tnil)))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (ZERO) (Tnil) (Tnil))) else ZERO = if lq (ZERO) (mainNew (Node (ZERO) (Tnil) (Tnil))) then if lq (SUCC (SUCC (ZERO))) (mainNew (Node (ZERO) (Tnil) (Tnil))) then mainNew (Node (ZERO) (Tnil) (Tnil)) else SUCC (SUCC (ZERO)) else ZERO
Prop: if lq (ZERO) (tf1 (ZERO) (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)))) else ZERO = if lq (ZERO) (mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)))) then if lq (ZERO) (mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil)))) then mainNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) (Tnil))) else ZERO else ZERO
Prop: if lq (ZERO) (tf1 (ZERO) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (ZERO)) (mainNew (Tnil)) then if lq (ZERO) (mainNew (Tnil)) then mainNew (Tnil) else ZERO else SUCC (ZERO)
Prop: if lq (ZERO) (tf1 (mainNew (Tnil)) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (ZERO)) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else SUCC (ZERO)
Prop: if lq (ZERO) (tf1 (mainNew (Tnil)) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (SUCC (ZERO)) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else SUCC (ZERO)
Prop: if lq (ZERO) (tf1 (mainNew (Tnil)) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Node (ZERO) (Tnil) (Tnil))) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (ZERO) (Tnil) (Tnil)) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) else ZERO = if lq (ZERO) (mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) then mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil)) else mainNew (Tnil) else ZERO
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 814


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 815


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree3(rank:6.)
=================================================
Progress: 816


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree3(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 817


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 818


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
forall (tree2:tree), if lq (ZERO) (tf1 (ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (tree2) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 819


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
forall (tree2:tree), if lq (ZERO) (tf1 (ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (tree2) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
forall (tree2:tree), ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (tree2) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 820


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
forall (tree2:tree), ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (tree2) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
tree2 : tree
Base3 : tree2 = Tnil
---------------------------------------
ZERO = if lq (nat1) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else nat1

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 821


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
tree2 : tree
Base3 : tree2 = Tnil
---------------------------------------
ZERO = if lq (nat1) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else nat1

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree3 : tree
Base1 : tree3 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
tree2 : tree
Base3 : tree2 = Tnil
---------------------------------------
ZERO = nat1

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
asdf
=================================================
Progress: 822


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 2
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (ZERO) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (ZERO) (mainNew (Tnil)) then mainNew (Tnil) else ZERO else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (repr (Tnil))) then tf1 (SUCC (ZERO)) (repr (Tnil)) else ZERO = if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then if lq (SUCC (ZERO)) (mainNew (Tnil)) then mainNew (Tnil) else SUCC (ZERO) else SUCC (SUCC (ZERO))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) then tf1 (SUCC (ZERO)) (repr (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) else ZERO = if lq (SUCC (SUCC (ZERO))) (mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) then if lq (SUCC (ZERO)) (mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) then mainNew (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)) else SUCC (ZERO) else SUCC (SUCC (ZERO))
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (ZERO) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (ZERO) (mainNew (Tnil)) then mainNew (Tnil) else ZERO else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)))))) then tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil))))) else ZERO = if lq (ZERO) (mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil))))) then if lq (ZERO) (mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil))))) then mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) (Tnil)))) else ZERO else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))))) then tf1 (ZERO) (repr (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) else ZERO = if lq (ZERO) (mainNew (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) then if lq (ZERO) (mainNew (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil)))) then mainNew (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (ZERO) (Tnil) (Tnil)) (Tnil))) else ZERO else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (mainNew (Tnil)) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (mainNew (Tnil)) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (repr (Tnil))) then tf1 (mainNew (Node (ZERO) (Tnil) (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Tnil)) else ZERO
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))))) (repr (Tnil)) else ZERO = if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then if lq (mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) else SUCC (SUCC (ZERO))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO
previous tactics
simpl in goal
rewrite <- IH1 in goal at 3
rewrite <- IH2 in goal at 1
case lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil)) else ZERO = if lq (ZERO) (mainNew (Node (ZERO) (Tnil) (Tnil))) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Node (SUCC (SUCC (ZERO))) (Tnil) (Tnil))) then mainNew (Node (ZERO) (Tnil) (Tnil)) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (SUCC (SUCC (SUCC (ZERO)))) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else SUCC (SUCC (SUCC (ZERO)))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) (Tnil))))) (Node (ZERO) (Tnil) (Tnil))) then tf1 (tf1 (ZERO) (repr (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) (Tnil))))) (Node (ZERO) (Tnil) (Tnil)) else ZERO = if lq (ZERO) (mainNew (Tnil)) then if lq (mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) (Tnil)))) (tf1 (ZERO) (Node (ZERO) (Tnil) (Tnil))) then mainNew (Tnil) else mainNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Tnil) (Tnil))) (Tnil))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Tnil) (Tnil)) (Tnil))) else ZERO
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (SUCC (SUCC (ZERO))) (mainNew (Tnil)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else SUCC (SUCC (ZERO))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Node (ZERO) (Tnil) (Tnil))) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (ZERO) (Tnil) (Tnil)) else mainNew (Tnil) else ZERO
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Tnil) else ZERO = if lq (ZERO) (mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil))) then if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (tf1 (ZERO) (Tnil)) then mainNew (Node (SUCC (ZERO)) (Tnil) (Tnil)) else mainNew (Node (ZERO) (Tnil) (Tnil)) else ZERO
Lemma List
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 823


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1(rank : 0.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 824


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

---------------------------------------
forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 825


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (Tnil)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (Tnil)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Tnil) else mainNew (tree3) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 826


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (Tnil)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (Tnil)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Tnil) else mainNew (tree3) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (Node (nat2) (tree4) (tree5))) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (Node (nat2) (tree4) (tree5))) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 827


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (Node (nat2) (tree4) (tree5))) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (Node (nat2) (tree4) (tree5))) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree3(rank:6.)
=================================================
Progress: 828


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
---------------------------------------
forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (tree3) else nat1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree3(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree), lq (tf1 (ZERO) (repr (Tnil))) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 829


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree), lq (tf1 (ZERO) (repr (Tnil))) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 830


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
---------------------------------------
forall (tree1:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true -> if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 831


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (tree1)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 832


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = if lq (ZERO) (if lq (ZERO) (if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Tnil))) then if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Tnil)) else ZERO) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) else mainNew (Tnil) else ZERO
Prop: ZERO = if lq (ZERO) (if lq (ZERO) (if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Tnil))) then if lq (mainNew (Node (ZERO) (Tnil) (Tnil))) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Node (ZERO) (Tnil) (Tnil)) else ZERO) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil))) else mainNew (Tnil) else ZERO
Prop: ZERO = if lq (SUCC (SUCC (ZERO))) (if lq (ZERO) (if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil)) then if lq (mainNew (Tnil)) (mainNew (Tnil)) then mainNew (Tnil) else mainNew (Tnil) else ZERO) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (ZERO) (Tnil) (Tnil)) else mainNew (Tnil) else SUCC (SUCC (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
End of Lemma List


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 833


1st goal of : forall (tree1:tree) (nat1:nat) (tree2:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree2) else mainNew (tree3) else nat1
nat1 : nat
tree2 : tree
nat2 : nat
tree4 : tree
tree5 : tree
IH1 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree4)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree4) else mainNew (tree3) else nat1
IH2 : forall (tree1:tree) (tree3:tree), lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree5)) = true -> if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = if lq (nat1) (mainNew (tree5)) then if lq (mainNew (tree3)) (tf1 (ZERO) (tree1)) then mainNew (tree5) else mainNew (tree3) else nat1
Inductive1 : tree2 = Node (nat2) (tree4) (tree5)
tree3 : tree
Base1 : tree3 = Tnil
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) = true
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5)) then if lq (mainNew (tree5)) (mainNew (tree4)) then mainNew (tree4) else mainNew (tree5) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree4) (tree5)) else mainNew (Tnil) else nat1

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 834


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 835


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 836


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 837


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 838


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree2)) (mainNew (tree1))(rank:8.)
=================================================
Progress: 839


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

0 goal(s) more...

2 conjecture(s) more...
>>> case lq (mainNew (tree2)) (mainNew (tree1))(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (if lq (nat2) (mainNew (tree1)) then if true then mainNew (tree1) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (mainNew (tree1)) then if true then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (nat2) (mainNew (tree1))(rank:9.)
rewrite <- Case1 in goal at 0(rank:24.)
=================================================
Progress: 840


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (if lq (nat2) (mainNew (tree1)) then if true then mainNew (tree1) else mainNew (tree2) else nat2) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
---------------------------------------
ZERO = if lq (nat1) (if lq (nat2) (mainNew (tree1)) then if true then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree1))(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
---------------------------------------
ZERO = if lq (nat1) (mainNew (tree1)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (nat1) (mainNew (tree1))(rank:10.)
=================================================
Progress: 841


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
---------------------------------------
ZERO = if lq (nat1) (mainNew (tree1)) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1

2 goal(s) more...

2 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree1))(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
Case3 : lq (nat1) (mainNew (tree1)) = true
---------------------------------------
ZERO = ZERO

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 842


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
Case3 : lq (nat1) (mainNew (tree1)) = true
---------------------------------------
ZERO = ZERO

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (ZERO) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) = true -> ZERO = if lq (nat1) (if lq (nat2) (if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2)) then if lq (mainNew (tree2)) (mainNew (tree1)) then mainNew (tree1) else mainNew (tree2) else nat2) then if lq (mainNew (Tnil)) (tf1 (ZERO) (Tnil)) then mainNew (Node (nat2) (tree1) (tree2)) else mainNew (Tnil) else nat1
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (ZERO) (mainNew (tree1)) = true
Case1 : lq (mainNew (tree2)) (mainNew (tree1)) = true
Case2 : lq (nat2) (mainNew (tree1)) = true
Case3 : lq (nat1) (mainNew (tree1)) = false
---------------------------------------
ZERO = nat1

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 843


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite Case1 in goal at 0(rank:12.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 844


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 3(rank:21.)
rewrite Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
=================================================
Progress: 845


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 3(rank:21.)
=================================================
Progress: 846


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 847


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
=================================================
Progress: 848


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (nat1) (mainNew (tree2))(rank:5.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 849


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
=================================================
Progress: 850


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 10
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite Case1 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 851


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 852


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:22.)
rewrite IH2 in goal at 0(rank:22.)
=================================================
Progress: 853


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 854


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 855


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 856


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 857


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 858


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 859


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 860


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 861


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 862


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 3(rank:13.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 863


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
=================================================
Progress: 864


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 865


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 866


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH1 in goal at 3(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 867


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 868


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 869


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 870


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 871


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:14.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 3(rank:14.)
=================================================
Progress: 872


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3))

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 873


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 874


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 875


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank:7.)
rewrite IH1 in goal at 0(rank:14.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 2(rank:14.)
rewrite IH2 in goal at 1(rank:22.)
rewrite IH1 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 876


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
Case4 : lq (tf1 (ZERO) (repr (tree3))) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 877


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (tree3)) (mainNew (tree2))(rank:5.)
=================================================
Progress: 878


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 879


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 880


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 881


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 882


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 883


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 884


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 885


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 886


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 887


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 888


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 889


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 890


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 891


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 892


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 893


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 894


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 895


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (nat1) (mainNew (tree2))(rank:5.)
=================================================
Progress: 896


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 897


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 898


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (nat1) (mainNew (tree2))(rank:5.)
=================================================
Progress: 899


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 900


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 901


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 902


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 903


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 904


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:13.)
rewrite Case2 in goal at 0(rank:20.)
rewrite Case2 in goal at 1(rank:20.)
rewrite Case2 in goal at 2(rank:20.)
rewrite Case5 in goal at 0(rank:20.)
=================================================
Progress: 905


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 906


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 907


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 2(rank:20.)
rewrite Case2 in goal at 0(rank:20.)
rewrite Case2 in goal at 1(rank:20.)
=================================================
Progress: 908


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 909


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 2(rank:20.)
rewrite Case2 in goal at 0(rank:20.)
rewrite Case2 in goal at 1(rank:20.)
=================================================
Progress: 910


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 2(rank:20.)
rewrite Case2 in goal at 0(rank:20.)
rewrite Case2 in goal at 1(rank:20.)
=================================================
Progress: 911


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 912


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 2(rank:20.)
rewrite Case2 in goal at 0(rank:20.)
rewrite Case2 in goal at 1(rank:20.)
=================================================
Progress: 913


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 2(rank:20.)
rewrite Case2 in goal at 0(rank:20.)
rewrite Case2 in goal at 1(rank:20.)
=================================================
Progress: 914


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case2 in goal at 2(rank:20.)
rewrite Case2 in goal at 0(rank:20.)
rewrite Case2 in goal at 1(rank:20.)
=================================================
Progress: 915


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case3 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 916


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case3 in goal at 2(rank:20.)
rewrite Case3 in goal at 0(rank:20.)
rewrite Case3 in goal at 1(rank:20.)
=================================================
Progress: 917


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case3 in goal at 2(rank:20.)
rewrite Case3 in goal at 0(rank:20.)
rewrite Case3 in goal at 1(rank:20.)
=================================================
Progress: 918


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case3 in goal at 2(rank:20.)
rewrite Case3 in goal at 0(rank:20.)
rewrite Case3 in goal at 1(rank:20.)
=================================================
Progress: 919


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case4 in goal at 2(rank:20.)
rewrite Case4 in goal at 0(rank:20.)
rewrite Case4 in goal at 1(rank:20.)
=================================================
Progress: 920


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case5 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case5 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case4 in goal at 0(rank:20.)
=================================================
Progress: 921


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case5 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case5 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 922


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case5 : lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (if lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)) else nat1) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case5 : lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case4 in goal at 0(rank:20.)
=================================================
Progress: 923


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case5 in goal at 0(rank:20.)
=================================================
Progress: 924


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 925


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 926


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat2) (mainNew (tree3)) = true
Case4 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 927


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case5 in goal at 0(rank:20.)
=================================================
Progress: 928


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 929


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 930


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 931


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 932


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 933


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat3) (mainNew (tree3)) = true
Case3 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 934


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case5 in goal at 0(rank:20.)
=================================================
Progress: 935


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Node (nat3) (tree3) (tree4))) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
Case6 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 936


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 937


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (nat2) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 938


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 939


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 940


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (nat3) (mainNew (tree3)) = true
Case4 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 941


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (nat1) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 0(rank:20.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:13.)
=================================================
Progress: 942


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (nat2) (mainNew (tree3)) = true
Case6 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 943


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (nat3) (mainNew (tree3)) = true
Case5 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 944


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (Node (nat3) (tree3) (tree4))) then mainNew (Node (nat3) (tree3) (tree4)) else nat1 else nat2

6 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (mainNew (tree3))(rank : 12.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (mainNew (tree2)) (mainNew (tree1)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree1))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree1)) else ZERO = if lq (nat2) (mainNew (tree1)) then if lq (nat1) (mainNew (tree1)) then mainNew (tree1) else nat1 else nat2
nat1 : nat
nat2 : nat
tree1 : tree
nat3 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree3)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree3)) else ZERO = if lq (nat2) (mainNew (tree3)) then if lq (nat1) (mainNew (tree3)) then mainNew (tree3) else nat1 else nat2
IH2 : forall (tree2:tree), lq (mainNew (tree2)) (mainNew (tree4)) = true -> if lq (ZERO) (tf1 (nat1) (repr (tree4))) then tf1 (tf1 (ZERO) (repr (tree2))) (repr (tree4)) else ZERO = if lq (nat2) (mainNew (tree4)) then if lq (nat1) (mainNew (tree4)) then mainNew (tree4) else nat1 else nat2
Inductive1 : tree1 = Node (nat3) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Tnil
Cond1 : lq (ZERO) (mainNew (tree3)) = true
Case1 : lq (mainNew (tree4)) (mainNew (tree3)) = true
Case2 : lq (nat1) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case3 : lq (ZERO) (tf1 (tf1 (nat1) (repr (tree4))) (repr (tree3))) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case5 : lq (nat3) (mainNew (tree3)) = true
Case6 : lq (nat2) (mainNew (tree3)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = if lq (nat1) (if lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4)) then if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4) else nat3) then mainNew (Node (nat3) (tree3) (tree4)) else nat1

7 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case lq (nat3) (if lq (mainNew (tree4)) (mainNew (tree3)) then mainNew (tree3) else mainNew (tree4))(rank:13.)
rewrite Case1 in goal at 2(rank:20.)
rewrite Case1 in goal at 0(rank:20.)
rewrite Case1 in goal at 1(rank:20.)
=================================================
Progress: 945


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 946


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
=================================================
Progress: 947


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH1 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:13.)
=================================================
Progress: 948


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 949


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then tf1 (ZERO) (repr (tree2)) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 950


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 951


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 952


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 953


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:5.)
=================================================
Progress: 954


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 955


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 956


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 957


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 958


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (nat1) (mainNew (tree2))(rank:5.)
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:5.)
=================================================
Progress: 959


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 960


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
=================================================
Progress: 961


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 962


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else tf1 (ZERO) (repr (tree3)) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (tf1 (ZERO) (repr (tree3))) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 963


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 964


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 965


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 966


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
=================================================
Progress: 967


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 968


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 969


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 970


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 971


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (tree3)) (mainNew (tree2))
case lq (nat1) (mainNew (tree2))
rewrite <- IH1 in goal at 0
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = tf1 (ZERO) (Tnil)
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))) then tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil)) else ZERO = tf1 (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Tnil) (Tnil)) (Tnil))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = tf1 (ZERO) (Tnil)
previous tactics
simpl in goal
case lq (mainNew (tree3)) (mainNew (tree2))
case lq (nat1) (mainNew (tree2))
parent
mainNew (tree2)
lower
mainNew(_)
upper
_
remove upper
mainNew(tree3)
remove lower
mainNew(tree3)
remove upper
mainNew(tree2)
remove lower
mainNew(_)
remove upper
_
validate generalize_common_subterm_goal
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Node (ZERO) (Tnil) (Tnil)))) (repr (Tnil)) else ZERO = mainNew (Tnil)
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))))) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))))) (repr (Node (ZERO) (Tnil) (Tnil)))) then tf1 (tf1 (ZERO) (repr (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Tnil) (Tnil)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Tnil) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Tnil) (Tnil)) (Node (SUCC (ZERO)) (Tnil) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Tnil) (Tnil)) (Node (ZERO) (Tnil) (Node (ZERO) (Tnil) (Tnil)))) (Tnil))))) (Tnil)) (Node (ZERO) (Tnil) (Tnil))) (Tnil)) (Tnil)) (Node (ZERO) (Tnil) (Tnil)))))) (repr (Node (ZERO) (Tnil) (Tnil))) else ZERO = mainNew (Node (ZERO) (Tnil) (Tnil))
Prop: if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil))) then tf1 (tf1 (ZERO) (repr (Tnil))) (repr (Tnil)) else ZERO = mainNew (Tnil)
Lemma List
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 972


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)

---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 973


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)

---------------------------------------
forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = tf1 (ZERO) (tree1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 974


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Tnil))) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = tf1 (ZERO) (tree1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = tf1 (ZERO) (tree1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 975


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree1) else ZERO = tf1 (ZERO) (tree1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = tf1 (ZERO) (Tnil)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 976


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
Base2 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Tnil) else ZERO = tf1 (ZERO) (Tnil)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (Node (nat1) (tree3) (tree4))) then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (nat1) (tree3) (tree4)) else ZERO = tf1 (ZERO) (Node (nat1) (tree3) (tree4))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 977


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
if lq (ZERO) (tf1 (ZERO) (Node (nat1) (tree3) (tree4))) then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (nat1) (tree3) (tree4)) else ZERO = tf1 (ZERO) (Node (nat1) (tree3) (tree4))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
if lq (ZERO) (if lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) then tf1 (tf1 (ZERO) (tree4)) (tree3) else ZERO) then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (nat1) (tree3) (tree4)) else ZERO = if lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) then tf1 (tf1 (ZERO) (tree4)) (tree3) else ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3))(rank:7.)
=================================================
Progress: 978


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
if lq (ZERO) (if lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) then tf1 (tf1 (ZERO) (tree4)) (tree3) else ZERO) then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (nat1) (tree3) (tree4)) else ZERO = if lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) then tf1 (tf1 (ZERO) (tree4)) (tree3) else ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3))(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (nat1) (tree3) (tree4)) else ZERO = tf1 (tf1 (ZERO) (tree4)) (tree3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:7.)
=================================================
Progress: 979


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (nat1) (tree3) (tree4)) else ZERO = tf1 (tf1 (ZERO) (tree4)) (tree3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = true
---------------------------------------
if true then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (nat1) (tree3) (tree4)) else ZERO = tf1 (tf1 (ZERO) (tree4)) (tree3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 980


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = true
---------------------------------------
if true then tf1 (tf1 (ZERO) (repr (Tnil))) (Node (nat1) (tree3) (tree4)) else ZERO = tf1 (tf1 (ZERO) (tree4)) (tree3)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) then tf1 (tf1 (ZERO) (tree4)) (tree3) else ZERO = tf1 (tf1 (ZERO) (tree4)) (tree3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:7.)
=================================================
Progress: 981


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) then tf1 (tf1 (ZERO) (tree4)) (tree3) else ZERO = tf1 (tf1 (ZERO) (tree4)) (tree3)

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = true
---------------------------------------
if true then tf1 (tf1 (ZERO) (tree4)) (tree3) else ZERO = tf1 (tf1 (ZERO) (tree4)) (tree3)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 982


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = true
---------------------------------------
if true then tf1 (tf1 (ZERO) (tree4)) (tree3) else ZERO = tf1 (tf1 (ZERO) (tree4)) (tree3)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = false
---------------------------------------
ZERO = ZERO

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 983


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
Base1 : tree2 = Tnil
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : if lq (ZERO) (tf1 (ZERO) (tree3)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree3) else ZERO = tf1 (ZERO) (tree3)
IH2 : if lq (ZERO) (tf1 (ZERO) (tree4)) then tf1 (tf1 (ZERO) (repr (Tnil))) (tree4) else ZERO = tf1 (ZERO) (tree4)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (tree4)) (tree3)) = false
---------------------------------------
ZERO = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (tree1)) then tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (tree1) else ZERO = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 984


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (tree1)) then tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (tree1) else ZERO = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (tree1) else ZERO = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 985


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree1:tree), if lq (ZERO) (tf1 (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO) (tree1)) then tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (tree1) else ZERO = tf1 (ZERO) (tree1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (Tnil) else ZERO = tf1 (ZERO) (Tnil)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 986


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (tf1 (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO) (Tnil)) then tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (Tnil) else ZERO = tf1 (ZERO) (Tnil)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO) then tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (Tnil) else ZERO = ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case lq (ZERO) (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO)(rank:7.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH1 in goal at 3(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 987


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
tree1 : tree
Base1 : tree1 = Tnil
---------------------------------------
if lq (ZERO) (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO) then tf1 (tf1 (ZERO) (repr (Node (nat1) (tree3) (tree4)))) (Tnil) else ZERO = ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO)(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
tree1 : tree
Base1 : tree1 = Tnil
Case1 : lq (ZERO) (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank:8.)
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
=================================================
Progress: 988


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
tree1 : tree
Base1 : tree1 = Tnil
Case1 : lq (ZERO) (if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) then tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) else ZERO = ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)))(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree2))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree2))) (tree1) else ZERO = tf1 (ZERO) (tree1)
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree3))) (tree1) else ZERO = tf1 (ZERO) (tree1)
IH2 : forall (tree1:tree), if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (tree1)) then tf1 (tf1 (ZERO) (repr (tree4))) (tree1) else ZERO = tf1 (ZERO) (tree1)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
tree1 : tree
Base1 : tree1 = Tnil
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree4))) (repr (tree3)) = ZERO

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 989


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 990


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 991


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 992


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 993


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 994


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 995


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 996


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
Case2 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 997


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
=================================================
Progress: 998


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 999


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 1000


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
=================================================
Progress: 1001


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 1002


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 1003


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
=================================================
Progress: 1004


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 1005


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (nat1) (mainNew (tree2))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 1006


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 1007


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (mainNew (tree2)) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
=================================================
Progress: 1008


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (nat1) (tf1 (ZERO) (repr (tree2))) then if true then mainNew (tree2) else mainNew (tree3) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (tf1 (ZERO) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case3 : lq (nat1) (tf1 (ZERO) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 1009


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 1010


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 1011


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 1012


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = tf1 (ZERO) (repr (tree2))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = tf1 (ZERO) (repr (tree2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
=================================================
Progress: 1013


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 1014


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
=================================================
Progress: 1015


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case lq (mainNew (tree3)) (mainNew (tree2))(rank:7.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 3(rank:22.)
=================================================
Progress: 1016


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1017


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
Case4 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1018


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 1019


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 1020


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (mainNew (tree3)) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 1021


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (mainNew (tree3)) (mainNew (tree2))(rank:6.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
=================================================
Progress: 1022


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (tree3)) (mainNew (tree2))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:7.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 1023


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (mainNew (tree3)) (repr (tree2)) else ZERO = mainNew (tree2)

3 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 7.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (mainNew (tree3)) (mainNew (tree2)) = true
Case4 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (mainNew (tree3)) (repr (tree2)) = mainNew (tree2)

4 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1024


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 1025


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then tf1 (ZERO) (repr (tree2)) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
rewrite Case1 in goal at 0(rank:14.)
rewrite IH1 in goal at 1(rank:14.)
rewrite IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
rewrite IH1 in goal at 2(rank:14.)
rewrite IH1 in goal at 0(rank:14.)
=================================================
Progress: 1026


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (mainNew (tree2)) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite Case1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
=================================================
Progress: 1027


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
---------------------------------------
if lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) then tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) else ZERO = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : tf1 (ZERO) (repr (tree2)) = mainNew (tree2)
IH2 : tf1 (ZERO) (repr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) = true
Case2 : lq (nat1) (mainNew (tree2)) = true
Case3 : lq (ZERO) (tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2))) = true
---------------------------------------
tf1 (tf1 (ZERO) (repr (tree3))) (repr (tree2)) = if lq (mainNew (tree3)) (tf1 (ZERO) (repr (tree2))) then mainNew (tree2) else mainNew (tree3)

3 goal(s) more...

0 conjecture(s) more...
