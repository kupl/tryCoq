Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:4.)
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 1(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 3
Tactic List : 2
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 17


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 18


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = match (tf7 (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 19


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 22


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 23


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 24


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 25


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 26


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 27


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree3) (tree3)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 28


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list3 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list3) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 29


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list3) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list3

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 30


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list3) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list3

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list3) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
=================================================
Progress: 31


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list3) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list3) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list5

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 32


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list3) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list5 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list3) (nat_list5) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 33


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list3) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list5

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list3) (nat_list1) = nat_list5

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 34


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list5 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list3) (nat_list5) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list5 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list5) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 35


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list5 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list5) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list5 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: cat (6) ((ZERO::(Nil))) = 6
Prop: cat (0) ((Nil)) = 0
Prop: cat (8) ((Nil)) = 8
validate generalize_common_subterm_goal
Prop: cat (0) ((Nil)) = 0
Prop: cat (2) ((Nil)) = 2
Prop: cat (6) ((Nil)) = 6
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 0
Prop: cat (1) ((Nil)) = 1
Prop: cat (7) ((ZERO::(ZERO::(ZERO::(Nil))))) = 7
Prop: cat (1) ((Nil)) = 1
validate generalize_common_subterm_goal
Prop: cat (3) ((Nil)) = 3
Prop: cat (5) ((Nil)) = 5
Prop: cat (2) ((ZERO::(Nil))) = 2
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat ((SUCC (ZERO)::(Nil))) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
asdf
Lemma List
forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list5 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 36


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list5 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list6)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1(rank : 0.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1

---------------------------------------
forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 37


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1

---------------------------------------
forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), cat (any1) ((Nil)) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 38


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), cat (any1) ((Nil)) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), cat (any1) ((nat1::nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 39


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), cat (any1) ((nat1::nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), (nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5.)
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 40


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), (nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
(nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 41


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
(nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
(nat1::any1) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::0) = 0
Prop: (SUCC (ZERO)::2) = 2
Prop: (ZERO::4) = 4
asdf
previous tactics
simpl in goal
intro any1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::cat (6) ((Nil))) = 6
Prop: (ZERO::cat (0) ((Nil))) = 0
Prop: (SUCC (SUCC (SUCC (ZERO)))::cat (8) ((Nil))) = 8
asdf
=================================================
Progress: 42


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list3) (nat_list1) = nat_list5

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list3) (nat_list1) = nat_list3

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = (Nil)
Prop: cat ((Nil)) ((Nil)) = (Nil)
Prop: cat ((Nil)) ((SUCC (ZERO)::(Nil))) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = (Nil)
Prop: cat ((Nil)) ((ZERO::(SUCC (ZERO)::(Nil)))) = (Nil)
Prop: cat ((Nil)) ((Nil)) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(ZERO::(Nil)))
asdf
=================================================
Progress: 43


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list3) (nat_list1) = nat_list5

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (nat_list2) = true
Case2 : gq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list6)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
cat (nat_list5) (nat_list1) = nat_list5

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((ZERO::(ZERO::(Nil)))) = (Nil)
Prop: cat ((ZERO::(Nil))) ((Nil)) = (ZERO::(Nil))
Prop: cat ((Nil)) ((ZERO::(Nil))) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) ((ZERO::(Nil))) = (Nil)
Prop: cat ((Nil)) ((Nil)) = (Nil)
Prop: cat ((Nil)) ((ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(SUCC (ZERO)::(Nil)))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 44


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), (nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), (nat1::any1) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::0) = 0
Prop: (ZERO::6) = 6
Prop: (SUCC (ZERO)::7) = 7
asdf
previous tactics
simpl in goal
parent
(nat1::cat (any1) (nat_list2))
lower
Cons(_, cat(any1, nat_list2))
upper
_
remove upper
cat(any1, nat_list2)
remove lower
cat(any1, nat_list2)
remove upper
Cons(nat1, cat(any1, nat_list2))
remove lower
Cons(nat1, cat(any1, nat_list2))
remove upper
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove lower
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove upper
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
remove lower
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
validate generalize_common_subterm_goal
Prop: (ZERO::cat (6) ((Nil))) = 6
Prop: (ZERO::cat (0) ((Nil))) = 0
Prop: (ZERO::cat (5) ((Nil))) = 5
asdf
=================================================
Progress: 45


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
=================================================
Progress: 46


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 47


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
=================================================
Progress: 48


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 49


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 50


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 51


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
=================================================
Progress: 52


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 53


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 54


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 55


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 56


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 57


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: cat (4) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 4
Prop: cat (3) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 3
Prop: cat (6) (match (tf7 (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 6
validate generalize_common_subterm_goal
Prop: cat (5) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 5
Prop: cat (4) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 4
Prop: cat (4) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 4
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = match (tf7 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 58


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:13.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 60


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 61


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any1(rank:13.)
induction tree2(rank:22.)
case tf5 (tree1) (tree1)(rank:37.)
case tf7 (tree1)(rank:37.)
intro tree2(rank:13.)
=================================================
Progress: 62


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
=================================================
Progress: 63


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list3 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list4)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list4)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list3

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 64


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 65


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:14.)
=================================================
Progress: 66


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 67


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 68


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = (Nil)
Prop: cat ((Nil)) ((ZERO::(Nil))) = (Nil)
Prop: cat ((Nil)) ((Nil)) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((ZERO::(Nil))) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((ZERO::(Nil))) ((ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 69


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 70


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list3 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list4)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list3) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 0
Prop: cat (7) ((Nil)) = 7
Prop: cat (3) ((Nil)) = 3
Prop: cat (6) ((Nil)) = 6
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 71


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 72


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 73


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:13.)
=================================================
Progress: 74


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 13.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
any1 : any
---------------------------------------
cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (4) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 4
Prop: cat (3) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 3
asdf
=================================================
Progress: 75


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 76


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 77


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 78


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 79


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: (ZERO::8) = 8
Prop: (SUCC (SUCC (ZERO))::6) = 6
Prop: (SUCC (ZERO)::0) = 0
asdf
=================================================
Progress: 80


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
=================================================
Progress: 81


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 82


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 83


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree3) (tree3)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 84


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 85


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 86


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf5 (tree2) (tree2)(rank:5.)
=================================================
Progress: 87


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 88


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 89


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list3

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 90


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 91


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list3

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 92


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) (match (tf5 (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Node (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Node (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))))) with
| Tuple2 a _ -> a) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 93


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 94


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = (Nil)
Prop: cat ((Nil)) ((Nil)) = (Nil)
Prop: cat ((ZERO::(Nil))) ((Nil)) = (ZERO::(Nil))
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree3)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((SUCC (ZERO)::(Nil))) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
asdf
Lemma List
forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 95


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1(rank : 0.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:6.)
=================================================
Progress: 96


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) ((Nil)) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 97


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) ((Nil)) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) ((nat1::nat_list3)) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 98


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) ((nat1::nat_list3)) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), (nat1::cat (nat_list1) (nat_list3)) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat_list1(rank:5.)
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 99


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), (nat1::cat (nat_list1) (nat_list3)) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
---------------------------------------
(nat1::cat (nat_list1) (nat_list3)) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 100


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
---------------------------------------
(nat1::cat (nat_list1) (nat_list3)) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat_list1
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (Nil)
asdf
previous tactics
simpl in goal
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::cat ((ZERO::(Nil))) ((Nil))) = (ZERO::(Nil))
Prop: (ZERO::cat ((Nil)) ((Nil))) = (Nil)
Prop: (ZERO::cat ((Nil)) ((Nil))) = (Nil)
asdf
=================================================
Progress: 101


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (nat_list3) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 102


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), (nat1::cat (nat_list1) (nat_list3)) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), cat (nat_list1) (nat_list2) = nat_list1
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), cat (nat_list1) (nat_list3) = nat_list1
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (Nil)
Prop: (ZERO::(ZERO::(SUCC (ZERO)::(Nil)))) = (ZERO::(SUCC (ZERO)::(Nil)))
asdf
previous tactics
simpl in goal
parent
(nat1::cat (nat_list1) (nat_list3))
lower
Cons(_, cat(nat_list1, nat_list3))
upper
_
remove upper
cat(nat_list1, nat_list3)
remove lower
cat(nat_list1, nat_list3)
remove upper
Cons(nat1, cat(nat_list1, nat_list3))
remove lower
Cons(nat1, cat(nat_list1, nat_list3))
remove upper
Cons(nat1, Cons(nat2, cat(nat_list1, nat_list4)))
remove lower
Cons(nat1, Cons(nat2, cat(nat_list1, nat_list4)))
remove upper
Cons(nat1, Cons(nat2, Cons(nat3, cat(nat_list1, nat_list5))))
remove lower
Cons(nat1, Cons(nat2, Cons(nat3, cat(nat_list1, nat_list5))))
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::cat ((Nil)) ((Nil))) = (Nil)
Prop: (ZERO::cat ((ZERO::(Nil))) ((Nil))) = (ZERO::(Nil))
Prop: (ZERO::cat ((Nil)) ((Nil))) = (Nil)
asdf
=================================================
Progress: 103


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 104


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 105


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 106


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 107


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 110


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
asdf
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: (Nil) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat (match (tf7 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 111


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat_list1(rank:9.)
intro tree2(rank:9.)
induction tree1(rank:18.)
induction tree2(rank:18.)
intro tree1(rank:9.)
=================================================
Progress: 112


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 113


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree2(rank:9.)
induction tree2(rank:18.)
case tf7 (tree1)(rank:33.)
=================================================
Progress: 114


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction tree1(rank:18.)
case tf5 (tree2) (tree2)(rank:33.)
case tf7 (tree2)(rank:33.)
=================================================
Progress: 115


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 116


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 117


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
case tf5 (tree2) (tree2)(rank:33.)
case tf7 (tree1)(rank:33.)
=================================================
Progress: 118


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:9.)
case tf7 (tree1)(rank:9.)
=================================================
Progress: 119


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
nat_list3 : nat list
Case1 : tf5 (tree2) (tree2) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (nat_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = cat (match (tf7 (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Node (Leaf (SUCC (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (ZERO)))))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) ((Nil))
Prop: (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil)))
Prop: (Nil) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil))
asdf
=================================================
Progress: 120


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> case tf7 (tree1)(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (nat_list3) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (nat_list3) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
nat_list3 : nat list
Case1 : tf7 (tree1) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
nat_list1 = cat (nat_list2) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
asdf
=================================================
Progress: 121


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 122


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:11.)
=================================================
Progress: 123


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 124


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 125


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 126


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 127


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 128


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 129


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:11.)
intro nat2(rank:11.)
intro nat_list1(rank:11.)
=================================================
Progress: 130


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat2(rank:11.)
intro nat_list1(rank:11.)
=================================================
Progress: 131


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:11.)
=================================================
Progress: 132


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (SUCC (SUCC (ZERO)))::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 133


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 134


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:11.)
=================================================
Progress: 135


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 136


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (SUCC (SUCC (SUCC (ZERO))))::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 137


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 138


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 139


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 140


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
nat_list3 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 141


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 142


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 143


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf5 (tree2) (tree2)(rank:5.)
=================================================
Progress: 144


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list3 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list4)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
nat_list3 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 145


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 146


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list3
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
nat_list3 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 147


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list3
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list4) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree3) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list3)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 148


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 149


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
nat_list3 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 150


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list5 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 151


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (nat_list3) (nat_list5)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 152


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list3 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list4)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
nat_list3 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list3 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list4)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list3) (nat_list4)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 153


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:13.)
intro nat2(rank:13.)
intro nat_list1(rank:13.)
=================================================
Progress: 154


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list5 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list3 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 155


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list3 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list3 = cat (nat_list3) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) ((Nil))
Prop: (ZERO::(Nil)) = cat ((ZERO::(Nil))) ((Nil))
Prop: (Nil) = cat ((Nil)) ((Nil))
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a)
asdf
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
asdf
Lemma List
forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list3 = cat (nat_list3) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 156


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list3 = cat (nat_list3) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)(rank : 0.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 157


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), nat_list2 = cat (nat_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 158


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), nat_list2 = cat (nat_list2) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), nat_list2 = cat (nat_list2) ((nat1::nat_list3))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 159


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), nat_list2 = cat (nat_list2) ((nat1::nat_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), nat_list2 = (nat1::cat (nat_list2) (nat_list3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro nat_list2(rank:5.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 160


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), nat_list2 = (nat1::cat (nat_list2) (nat_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
---------------------------------------
nat_list2 = (nat1::cat (nat_list2) (nat_list3))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 161


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
---------------------------------------
nat_list2 = (nat1::cat (nat_list2) (nat_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
nat_list2 : nat list
---------------------------------------
nat_list2 = (nat1::nat_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat_list2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(Nil))
asdf
previous tactics
simpl in goal
intro nat_list2
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::cat ((SUCC (ZERO)::(Nil))) ((Nil)))
Prop: (Nil) = (ZERO::cat ((Nil)) ((Nil)))
Prop: (Nil) = (ZERO::cat ((Nil)) ((ZERO::(Nil))))
asdf
=================================================
Progress: 162


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list5 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list5 = cat (nat_list5) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list5 = cat (nat_list5) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list5 = cat (nat_list5) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) ((Nil))
Prop: (Nil) = cat ((Nil)) ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))
Prop: (Nil) = cat ((Nil)) ((Nil))
asdf
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(ZERO::(ZERO::(Nil)))) = cat ((ZERO::(ZERO::(ZERO::(Nil))))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
asdf
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
asdf
=================================================
Progress: 164


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list5 = cat (nat_list3) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list5 = nat_list3
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list6)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list4) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
nat_list5 = cat (nat_list3) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = cat ((Nil)) ((Nil))
Prop: (Nil) = cat ((Nil)) ((Nil))
Prop: (ZERO::(Nil)) = cat ((Nil)) ((SUCC (ZERO)::(Nil)))
asdf
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Node (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
asdf
=================================================
Progress: 165


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (nat_list3) (nat_list5)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list5)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 166


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list5)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf7 (tree3)
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: 0 = cat (0) ((ZERO::(Nil)))
Prop: 6 = cat (6) ((Nil))
Prop: 3 = cat (3) ((Nil))
validate generalize_common_subterm_goal
Prop: 3 = cat (3) ((Nil))
Prop: 3 = cat (3) ((Nil))
Prop: 4 = cat (4) ((Nil))
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf7 (tree3)
rewrite <- IH1 in goal at 0
Prop: 5 = cat (5) ((Nil))
Prop: 0 = cat (0) ((Nil))
Prop: 3 = cat (3) ((ZERO::(Nil)))
validate generalize_common_subterm_goal
Prop: 5 = cat (5) ((Nil))
Prop: 0 = cat (0) ((Nil))
Prop: 1 = cat (1) ((Nil))
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
case tf7 (tree3)
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = cat ((Nil)) ((ZERO::(Nil)))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = cat ((Nil)) ((Nil))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = cat ((Nil)) ((ZERO::(Nil)))
asdf
Lemma List
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list5)

2 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 167


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list5)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)(rank : 0.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 168


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list3
IH2 : nat_list1 = nat_list5
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list4) (nat_list6) = false
Case3 : nat_eq (nat_list4) (nat_list6) = true
nat_list1 : nat list
nat_list2 : nat list
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
nat_list3 : nat list
nat_list4 : nat list
Case5 : tf7 (tree2) = Tuple2 (nat_list3) (nat_list4)
nat_list5 : nat list
nat_list6 : nat list
Case6 : tf7 (tree3) = Tuple2 (nat_list5) (nat_list6)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)(rank : 0.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 169


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 170


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((nat1::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 171


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((nat1::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 172


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 173


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::any1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: 6 = (ZERO::6)
Prop: 8 = (SUCC (ZERO)::8)
Prop: 8 = (ZERO::8)
asdf
previous tactics
simpl in goal
intro any1
validate generalize_common_subterm_goal
Prop: 1 = (ZERO::cat (1) ((Nil)))
Prop: 0 = (ZERO::cat (0) ((Nil)))
Prop: 4 = (SUCC (SUCC (SUCC (SUCC (ZERO))))::cat (4) ((Nil)))
asdf
=================================================
Progress: 174


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 175


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((nat1::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 176


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((nat1::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 177


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 178


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::any1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: 5 = (ZERO::5)
Prop: 2 = (ZERO::2)
Prop: 1 = (ZERO::1)
asdf
previous tactics
simpl in goal
intro any1
validate generalize_common_subterm_goal
Prop: 7 = (ZERO::cat (7) ((ZERO::(Nil))))
Prop: 5 = (ZERO::cat (5) ((Nil)))
Prop: 4 = (SUCC (ZERO)::cat (4) ((Nil)))
asdf
=================================================
Progress: 179


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:13.)
intro nat_list1(rank:13.)
=================================================
Progress: 180


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 181


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (SUCC (SUCC (ZERO))::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 182


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), nat_list2 = (nat1::cat (nat_list2) (nat_list3))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list2:nat list), nat_list2 = cat (nat_list2) (nat_list3)
Inductive1 : nat_list1 = (nat1::nat_list3)
---------------------------------------
forall (nat_list2:nat list), nat_list2 = (nat1::nat_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
asdf
previous tactics
simpl in goal
parent
(nat1::cat (nat_list2) (nat_list3))
lower
Cons(_, cat(nat_list2, nat_list3))
upper
_
remove upper
cat(nat_list2, nat_list3)
remove lower
cat(nat_list2, nat_list3)
remove upper
Cons(nat1, cat(nat_list2, nat_list3))
remove lower
Cons(nat1, cat(nat_list2, nat_list3))
remove upper
Cons(nat1, Cons(nat2, cat(nat_list2, nat_list4)))
remove lower
Cons(nat1, Cons(nat2, cat(nat_list2, nat_list4)))
remove upper
Cons(nat1, Cons(nat2, Cons(nat3, cat(nat_list2, nat_list5))))
remove lower
Cons(nat1, Cons(nat2, Cons(nat3, cat(nat_list2, nat_list5))))
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::cat ((Nil)) ((Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::cat ((ZERO::(ZERO::(Nil)))) ((Nil)))
Prop: (Nil) = (ZERO::cat ((Nil)) ((SUCC (ZERO)::(Nil))))
asdf
=================================================
Progress: 183


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::any1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: 8 = (ZERO::8)
Prop: 5 = (SUCC (SUCC (ZERO))::5)
Prop: 5 = (ZERO::5)
asdf
previous tactics
simpl in goal
parent
(nat1::cat (any1) (nat_list2))
lower
Cons(_, cat(any1, nat_list2))
upper
_
remove upper
cat(any1, nat_list2)
remove lower
cat(any1, nat_list2)
remove upper
Cons(nat1, cat(any1, nat_list2))
remove lower
Cons(nat1, cat(any1, nat_list2))
remove upper
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove lower
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove upper
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
remove lower
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
validate generalize_common_subterm_goal
Prop: 1 = (ZERO::cat (1) ((Nil)))
Prop: 4 = (SUCC (SUCC (ZERO))::cat (4) ((ZERO::(Nil))))
Prop: 8 = (SUCC (SUCC (ZERO))::cat (8) ((Nil)))
asdf
=================================================
Progress: 184


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::any1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: 0 = (ZERO::0)
Prop: 0 = (ZERO::0)
Prop: 5 = (ZERO::5)
asdf
previous tactics
simpl in goal
parent
(nat1::cat (any1) (nat_list2))
lower
Cons(_, cat(any1, nat_list2))
upper
_
remove upper
cat(any1, nat_list2)
remove lower
cat(any1, nat_list2)
remove upper
Cons(nat1, cat(any1, nat_list2))
remove lower
Cons(nat1, cat(any1, nat_list2))
remove upper
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove lower
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove upper
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
remove lower
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
validate generalize_common_subterm_goal
Prop: 0 = (ZERO::cat (0) ((Nil)))
Prop: 8 = (ZERO::cat (8) ((Nil)))
Prop: 2 = (SUCC (ZERO)::cat (2) ((Nil)))
asdf
=================================================
Progress: 185


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 186


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 187


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 188


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 189


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 190


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:10.)
intro tree2(rank:10.)
induction tree2(rank:19.)
=================================================
Progress: 191


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:11.)
=================================================
Progress: 192


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 193


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 194


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 195


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree2
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 196


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:11.)
intro nat_list1(rank:11.)
intro tree1(rank:11.)
induction tree1(rank:20.)
=================================================
Progress: 197


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 198


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:11.)
intro tree1(rank:11.)
induction tree1(rank:20.)
=================================================
Progress: 199


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:11.)
induction tree1(rank:20.)
=================================================
Progress: 200


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 201


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 202


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:12.)
=================================================
Progress: 203


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 204


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 205


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 206


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 207


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 208


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 209


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 210


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:13.)
intro nat_list1(rank:13.)
intro tree1(rank:13.)
induction tree1(rank:22.)
=================================================
Progress: 211


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 212


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:11.)
=================================================
Progress: 213


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
=================================================
Progress: 214


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (SUCC (ZERO)::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 215


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 216


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 217


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 218


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 219


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 220


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:13.)
intro tree1(rank:13.)
induction tree1(rank:22.)
=================================================
Progress: 221


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:13.)
induction tree1(rank:22.)
=================================================
Progress: 222


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 223


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 224


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:14.)
=================================================
Progress: 225


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 226


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 227


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 228


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:13.)
intro nat2(rank:13.)
intro nat_list1(rank:13.)
=================================================
Progress: 229


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 230


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 231


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (SUCC (ZERO))::(Nil))) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
=================================================
Progress: 232


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:13.)
intro nat_list1(rank:13.)
=================================================
Progress: 233


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 234


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 235


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 236


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (SUCC (ZERO))::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil))))) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 237


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 238


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 239


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 240


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 241


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 242


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 243


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 244


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 245


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 246


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 18.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 247


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:10.)
intro tree1(rank:10.)
induction tree1(rank:19.)
=================================================
Progress: 248


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:11.)
=================================================
Progress: 249


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 250


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 251


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 252


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(ZERO::(ZERO::(SUCC (ZERO)::(Nil))))) = (SUCC (SUCC (ZERO))::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 253


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:11.)
intro nat_list1(rank:11.)
intro tree1(rank:11.)
induction tree1(rank:20.)
=================================================
Progress: 254


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 255


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:11.)
intro tree1(rank:11.)
induction tree1(rank:20.)
=================================================
Progress: 256


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:11.)
induction tree1(rank:20.)
=================================================
Progress: 257


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 258


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 259


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:12.)
=================================================
Progress: 260


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 261


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 262


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 263


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 264


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 265


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 266


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (SUCC (SUCC (SUCC (ZERO))))::match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 267


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:13.)
intro nat_list1(rank:13.)
intro tree1(rank:13.)
induction tree1(rank:22.)
=================================================
Progress: 268


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (ZERO::(SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 269


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 270


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:11.)
=================================================
Progress: 271


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
=================================================
Progress: 272


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 273


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(Nil)) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
=================================================
Progress: 274


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:11.)
intro nat2(rank:11.)
intro nat_list1(rank:11.)
=================================================
Progress: 275


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat2(rank:11.)
intro nat_list1(rank:11.)
=================================================
Progress: 276


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:11.)
=================================================
Progress: 277


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 278


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 279


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:11.)
=================================================
Progress: 280


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 281


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (Nil) = (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 282


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (SUCC (ZERO))::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 283


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 284


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 285


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 286


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 287


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 288


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:13.)
intro tree1(rank:13.)
induction tree1(rank:22.)
=================================================
Progress: 289


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:13.)
induction tree1(rank:22.)
=================================================
Progress: 290


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 291


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 292


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 293


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:14.)
=================================================
Progress: 294


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 295


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 296


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 297


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:13.)
intro nat2(rank:13.)
intro nat_list1(rank:13.)
=================================================
Progress: 298


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:13.)
intro nat2(rank:13.)
intro nat_list1(rank:13.)
=================================================
Progress: 299


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 300


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 301


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(Nil)) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
=================================================
Progress: 302


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:13.)
intro nat_list1(rank:13.)
=================================================
Progress: 303


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 304


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
=================================================
Progress: 305


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:13.)
intro nat_list1(rank:13.)
=================================================
Progress: 306


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 307


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 308


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 309


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::match (tf7 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 310


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 311


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 312


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 313


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:13.)
=================================================
Progress: 314


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 315


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 316


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a)
=================================================
Progress: 317


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 318


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 13.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 319


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 320


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 321


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 322


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))
=================================================
Progress: 323


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 18.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 324


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 325


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 326


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 327


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a)
=================================================
Progress: 328


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 329


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 330


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 331


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 332


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 333


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 19.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 334


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 335


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 336


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:11.)
=================================================
Progress: 337


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 338


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 19.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:11.)
=================================================
Progress: 339


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 340


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:11.)
=================================================
Progress: 341


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:11.)
=================================================
Progress: 342


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 343


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 20.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 344


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 345


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 346


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:12.)
intro nat_list1(rank:12.)
=================================================
Progress: 347


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:12.)
=================================================
Progress: 348


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 349


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 350


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 20.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 351


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 352


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 353


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:12.)
=================================================
Progress: 354


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 355


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 20.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 356


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:12.)
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 360


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 20.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 361


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 362


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 363


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:12.)
intro nat_list1(rank:12.)
=================================================
Progress: 364


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:12.)
=================================================
Progress: 365


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 366


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 367


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 20.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 368


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 369


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 370


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:12.)
=================================================
Progress: 371


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 372


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 20.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:12.)
=================================================
Progress: 373


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:12.)
=================================================
Progress: 374


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:12.)
=================================================
Progress: 375


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:12.)
=================================================
Progress: 376


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 12.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 377


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: cat (7) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 7
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (1) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 0
Prop: cat (0) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 0
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
Prop: cat (7) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 7
Prop: cat (4) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 4
Prop: cat (8) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 8
validate generalize_common_subterm_goal
