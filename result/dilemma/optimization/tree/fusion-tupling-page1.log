Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:4.)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
rewrite <- IH1 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 1(rank:13.)
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 2(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Lemma List
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 17


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 19


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:6.)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:6.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 6.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 21


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 6.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 22


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree2)(rank:31.)
=================================================
Progress: 23


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree2)(rank:31.)
=================================================
Progress: 24


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 25


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 3
Tactic List : 2
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
=================================================
Progress: 26


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 27


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 28


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 29


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 30


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 31


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 32


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 33


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:21.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 34


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 35


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree3) (tree3)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 36


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 37


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 38


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
=================================================
Progress: 39


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 40


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
=================================================
Progress: 41


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 42


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 43


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 2
Prop: cat (2) ((Nil)) = 2
Prop: cat (8) ((Nil)) = 8
Prop: cat (2) ((ZERO::(Nil))) = 2
validate generalize_common_subterm_goal
Prop: cat (0) ((Nil)) = 0
Prop: cat (4) ((SUCC (SUCC (ZERO))::(Nil))) = 4
Prop: cat (0) ((Nil)) = 0
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) ((SUCC (ZERO)::(Nil))) = match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(ZERO::(Nil)))) = (ZERO::(ZERO::(Nil)))
asdf
=================================================
Progress: 44


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:7.)
=================================================
Progress: 45


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 46


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 47


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 1(rank:15.)
rewrite IH2 in goal at 0(rank:15.)
rewrite IH1 in goal at 2(rank:23.)
case tf5 (tree2) (tree2)(rank:31.)
case tf5 (tree3) (tree3)(rank:31.)
rewrite IH1 in goal at 0(rank:23.)
=================================================
Progress: 48


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Lemma List
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 49


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 50


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 51


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 52


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (tf5 (Node (tree2) (tree3)) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:8.)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:8.)
=================================================
Progress: 53


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:9.)
rewrite <- IH1 in goal at 0(rank:16.)
=================================================
Progress: 54


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 8.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 55


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
case tf5 (tree2) (tree2)(rank:33.)
case tf7 (tree2)(rank:33.)
=================================================
Progress: 56


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
case tf5 (tree2) (tree2)(rank:33.)
case tf7 (tree2)(rank:33.)
=================================================
Progress: 57


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 58


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 3
Tactic List : 2
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:7.)
rewrite IH1 in goal at 0(rank:22.)
=================================================
Progress: 60


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree2)(rank:31.)
case tf7 (tree3)(rank:31.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 61


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:15.)
case tf5 (tree2) (tree2)(rank:31.)
case tf5 (tree3) (tree3)(rank:31.)
case tf7 (tree2)(rank:31.)
=================================================
Progress: 62


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:23.)
rewrite IH1 in goal at 2(rank:23.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree3)(rank:31.)
=================================================
Progress: 63


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case tf5 (tree2) (tree2)(rank:7.)
case tf7 (tree2)(rank:7.)
case tf7 (tree3)(rank:7.)
=================================================
Progress: 64


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:15.)
case tf7 (tree2)(rank:31.)
case tf7 (tree3)(rank:31.)
=================================================
Progress: 65


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case tf7 (tree2)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree3)(rank:31.)
=================================================
Progress: 66


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case tf7 (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:23.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree2)(rank:31.)
=================================================
Progress: 67


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:23.)
case tf7 (tree3)(rank:31.)
=================================================
Progress: 68


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:7.)
=================================================
Progress: 69


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case tf5 (tree3) (tree3)(rank:7.)
case tf7 (tree2)(rank:7.)
=================================================
Progress: 70


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 71


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case tf7 (tree2)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 72


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:23.)
case tf5 (tree2) (tree2)(rank:31.)
case tf5 (tree3) (tree3)(rank:31.)
=================================================
Progress: 73


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:7.)
=================================================
Progress: 74


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:7.)
case tf5 (tree3) (tree3)(rank:7.)
=================================================
Progress: 75


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:23.)
rewrite IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 76


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 7.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 77


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 2
Prop: cat (7) ((Nil)) = 7
Prop: cat (3) ((SUCC (ZERO)::(Nil))) = 3
Prop: cat (8) ((Nil)) = 8
validate generalize_common_subterm_goal
Prop: cat (5) ((Nil)) = 5
Prop: cat (2) ((Nil)) = 2
Prop: cat (0) ((SUCC (ZERO)::(ZERO::(Nil)))) = 0
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) ((SUCC (ZERO)::(Nil))) = match (tf5 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
asdf
=================================================
Progress: 78


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:9.)
=================================================
Progress: 79


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (if gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (fst3 (tf5 (tree2) (tree2))) (Node (tree2) (tree3)) else if nat_eq (depth (snd3 (tf5 (tree2) (tree2)))) (depth (snd3 (tf5 (tree3) (tree3)))) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 80


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 81


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 1(rank:17.)
rewrite IH2 in goal at 0(rank:17.)
rewrite IH1 in goal at 2(rank:25.)
case tf5 (tree2) (tree2)(rank:33.)
case tf5 (tree3) (tree3)(rank:33.)
rewrite IH1 in goal at 0(rank:25.)
=================================================
Progress: 82


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 83


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))))) (Leaf (ZERO))) (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = match (tf7 (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 84


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 85


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 2
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:9.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 86


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 0(rank:25.)
rewrite <- IH2 in goal at 0(rank:25.)
case tf5 (tree2) (tree2)(rank:33.)
case tf7 (tree2)(rank:33.)
case tf7 (tree3)(rank:33.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 87


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:17.)
case tf5 (tree2) (tree2)(rank:33.)
case tf5 (tree3) (tree3)(rank:33.)
case tf7 (tree2)(rank:33.)
=================================================
Progress: 88


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:25.)
rewrite IH1 in goal at 2(rank:25.)
case tf5 (tree2) (tree2)(rank:33.)
case tf7 (tree3)(rank:33.)
=================================================
Progress: 89


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case tf5 (tree2) (tree2)(rank:9.)
case tf7 (tree2)(rank:9.)
case tf7 (tree3)(rank:9.)
=================================================
Progress: 90


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:17.)
case tf7 (tree2)(rank:33.)
case tf7 (tree3)(rank:33.)
=================================================
Progress: 91


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> case tf7 (tree2)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:25.)
rewrite <- IH1 in goal at 0(rank:25.)
case tf5 (tree2) (tree2)(rank:33.)
case tf7 (tree3)(rank:33.)
=================================================
Progress: 92


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> case tf7 (tree3)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:25.)
case tf5 (tree2) (tree2)(rank:33.)
case tf7 (tree2)(rank:33.)
=================================================
Progress: 93


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:25.)
case tf7 (tree3)(rank:33.)
=================================================
Progress: 94


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:9.)
=================================================
Progress: 95


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case tf5 (tree3) (tree3)(rank:9.)
case tf7 (tree2)(rank:9.)
=================================================
Progress: 96


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 2(rank:25.)
=================================================
Progress: 97


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> case tf7 (tree2)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 2(rank:17.)
rewrite <- IH2 in goal at 2(rank:17.)
rewrite <- IH2 in goal at 1(rank:25.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- IH2 in goal at 0(rank:25.)
=================================================
Progress: 98


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:25.)
case tf5 (tree2) (tree2)(rank:33.)
case tf5 (tree3) (tree3)(rank:33.)
=================================================
Progress: 99


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:9.)
=================================================
Progress: 100


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:9.)
case tf5 (tree3) (tree3)(rank:9.)
=================================================
Progress: 101


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:25.)
rewrite IH2 in goal at 1(rank:25.)
rewrite <- IH2 in goal at 0(rank:25.)
=================================================
Progress: 102


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 9.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:17.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- IH1 in goal at 1(rank:25.)
=================================================
Progress: 103


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 17.)


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 2
Prop: cat (4) ((Nil)) = 4
Prop: cat (5) ((ZERO::(SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))) = 5
Prop: cat (0) ((Nil)) = 0
validate generalize_common_subterm_goal
Prop: cat (2) ((ZERO::(Nil))) = 2
Prop: cat (7) ((ZERO::(Nil))) = 7
Prop: cat (0) ((ZERO::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))) = 0
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
asdf
Lemma List
forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 104


1st goal of : forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:18.)
induction tree1(rank:18.)
=================================================
Progress: 105


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 18.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 106


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) ((nat1::nat_list2)) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 107


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) ((nat1::nat_list2)) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (tree1:tree), (nat1::cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2)) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 108


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (tree1:tree), (nat1::cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2)) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
(nat1::cat (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) (nat_list2)) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 109


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
(nat1::cat (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) (nat_list2)) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
(nat1::cat ((nat2::(Nil))) (nat_list2)) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
Prop: (ZERO::cat ((ZERO::(Nil))) ((Nil))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::cat ((Nil)) ((Nil))) = (Nil)
Prop: (SUCC (ZERO)::cat ((Nil)) ((Nil))) = (Nil)
validate generalize_common_subterm_goal
Prop: (ZERO::cat ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))) ((Nil))) = (SUCC (ZERO)::(ZERO::(ZERO::(Nil))))
Prop: (SUCC (SUCC (ZERO))::cat ((Nil)) ((Nil))) = (Nil)
Prop: (ZERO::cat ((SUCC (ZERO)::(ZERO::(Nil)))) ((Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::cat ((SUCC (SUCC (ZERO))::(Nil))) ((Nil))) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::cat ((ZERO::(Nil))) ((ZERO::(Nil)))) = (ZERO::(Nil))
Prop: (ZERO::cat ((ZERO::(Nil))) ((Nil))) = (ZERO::(Nil))
asdf
=================================================
Progress: 110


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), cat (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 111


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), cat (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:11.)
=================================================
Progress: 112


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> induction nat_list1(rank : 11.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
cat ((nat1::(Nil))) ((Nil)) = (nat1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:10.)
=================================================
Progress: 113


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
cat ((nat1::(Nil))) ((Nil)) = (nat1::(Nil))

2 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : cat ((nat1::(Nil))) (nat_list2) = (nat1::(Nil))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
cat ((nat1::(Nil))) ((nat2::nat_list2)) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 114


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : cat ((nat1::(Nil))) (nat_list2) = (nat1::(Nil))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
cat ((nat1::(Nil))) ((nat2::nat_list2)) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : cat ((nat1::(Nil))) (nat_list2) = (nat1::(Nil))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
(nat2::cat ((nat1::(Nil))) (nat_list2)) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:10.)
=================================================
Progress: 115


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : cat ((nat1::(Nil))) (nat_list2) = (nat1::(Nil))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
(nat2::cat ((nat1::(Nil))) (nat_list2)) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 10.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : cat ((nat1::(Nil))) (nat_list2) = (nat1::(Nil))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
(nat2::(nat1::(Nil))) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: (ZERO::(Nil)) = (Nil)
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (Nil)
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (Nil)
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
asdf
previous tactics
simpl in goal
parent
(nat2::cat ((nat1::(Nil))) (nat_list2))
lower
Cons(_, cat(Cons(nat1, Nil()), nat_list2))
upper
_
remove upper
cat(Cons(nat1, Nil()), nat_list2)
remove lower
cat(Cons(nat1, Nil()), nat_list2)
remove upper
Cons(nat2, cat(Cons(nat1, Nil()), nat_list2))
remove lower
Cons(nat2, cat(Cons(nat1, Nil()), nat_list2))
remove upper
Cons(nat2, Cons(nat3, cat(Cons(nat1, Nil()), nat_list3)))
remove lower
Cons(nat2, Cons(nat3, cat(Cons(nat1, Nil()), nat_list3)))
remove upper
Cons(nat2, Cons(nat3, Cons(nat4, cat(Cons(nat1, Nil()), nat_list4))))
remove lower
Cons(nat2, Cons(nat3, Cons(nat4, cat(Cons(nat1, Nil()), nat_list4))))
Prop: (ZERO::cat ((Nil)) ((Nil))) = (Nil)
Prop: (SUCC (ZERO)::cat ((ZERO::(Nil))) ((Nil))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::cat ((Nil)) ((ZERO::(Nil)))) = (Nil)
validate generalize_common_subterm_goal
Prop: (ZERO::cat ((Nil)) ((Nil))) = (Nil)
Prop: (SUCC (SUCC (ZERO))::cat ((Nil)) ((Nil))) = (Nil)
Prop: (ZERO::cat ((Nil)) ((Nil))) = (Nil)
Prop: (SUCC (ZERO)::cat ((ZERO::(Nil))) ((ZERO::(ZERO::(Nil))))) = (ZERO::(Nil))
Prop: (ZERO::cat ((ZERO::(Nil))) ((ZERO::(Nil)))) = (ZERO::(Nil))
Prop: (ZERO::cat ((ZERO::(Nil))) ((Nil))) = (ZERO::(Nil))
asdf
=================================================
Progress: 116


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
=================================================
Progress: 117


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 118


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank:5.)
=================================================
Progress: 119


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
match (if nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) then Tuple2 (cat (fst3 (tf5 (tree2) (tree2))) (fst3 (tf5 (tree3) (tree3)))) (Node (tree2) (tree3)) else Tuple2 (fst3 (tf5 (tree3) (tree3))) (Node (tree2) (tree3))) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
rewrite IH2 in goal at 0(rank:13.)
=================================================
Progress: 120


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 121


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 122


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
=================================================
Progress: 123


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 124


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 1(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 125


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 126


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 127


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
=================================================
Progress: 128


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
Prop: cat (0) (match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 0
Prop: cat (4) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 4
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
validate generalize_common_subterm_goal
Prop: cat (3) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 3
Prop: cat (1) (match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 1
Prop: cat (2) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 2
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Leaf (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))))))) with
| Tuple2 a _ -> a
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 129


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 130


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any1(rank:5.)
induction tree2(rank:14.)
case tf5 (tree1) (tree1)(rank:29.)
case tf7 (tree1)(rank:29.)
intro tree2(rank:5.)
=================================================
Progress: 131


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 132


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 133


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 134


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:5.)
=================================================
Progress: 135


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:5.)
=================================================
Progress: 136


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
any1 : any
---------------------------------------
cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (8) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 8
Prop: cat (5) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 5
asdf
=================================================
Progress: 137


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 138


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 139


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 140


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:6.)
=================================================
Progress: 141


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::7) = 7
Prop: (ZERO::4) = 4
Prop: (ZERO::5) = 5
asdf
=================================================
Progress: 142


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
=================================================
Progress: 143


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 144


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
=================================================
Progress: 145


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
asdf
=================================================
Progress: 146


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite IH1 in goal at 0(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite IH2 in goal at 2(rank:13.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 147


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:21.)
rewrite IH2 in goal at 1(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH2 in goal at 3(rank:21.)
=================================================
Progress: 148


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 149


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
=================================================
Progress: 150


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 1
Prop: cat (8) ((Nil)) = 8
Prop: cat (8) ((ZERO::(Nil))) = 8
Prop: cat (1) ((Nil)) = 1
validate generalize_common_subterm_goal
Prop: cat (6) ((ZERO::(Nil))) = 6
Prop: cat (7) ((Nil)) = 7
Prop: cat (7) ((Nil)) = 7
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 151


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 2
Prop: cat ((Nil)) (8) = 8
Prop: cat ((ZERO::(Nil))) (4) = 4
Prop: cat ((Nil)) (6) = 6
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (1) = 1
Prop: cat ((Nil)) (5) = 5
Prop: cat ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))) (1) = 1
Prop: cat ((Nil)) (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((ZERO::(ZERO::(Nil)))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 152


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 153


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 154


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 155


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:6.)
=================================================
Progress: 156


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (any1:any), (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:6.)
=================================================
Progress: 157


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (any1:any), (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
any1 : any
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
intro any1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::6) = 6
Prop: (SUCC (ZERO)::2) = 2
Prop: (ZERO::2) = 2
asdf
=================================================
Progress: 158


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 20.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:5.)
=================================================
Progress: 159


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (if nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 160


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 161


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree3) (tree3)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 162


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 164


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf5 (tree2) (tree2)(rank:5.)
=================================================
Progress: 165


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:13.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 166


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf7 (tree3)(rank:5.)
=================================================
Progress: 167


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 168


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 169


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree3) (tree3)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 170


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 171


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
=================================================
Progress: 172


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 173


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite <- IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf7 (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree3)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 174


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:21.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 175


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
Prop: cat (1) ((ZERO::(Nil))) = 1
Prop: cat (1) ((SUCC (ZERO)::(ZERO::(Nil)))) = 1
Prop: cat (3) ((ZERO::(Nil))) = 3
validate generalize_common_subterm_goal
Prop: cat (3) ((Nil)) = 3
Prop: cat (0) ((Nil)) = 0
Prop: cat (8) ((ZERO::(Nil))) = 8
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
asdf
=================================================
Progress: 176


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 177


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 178


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 179


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree3) (tree3)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 180


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 181


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf5 (tree3) (tree3)(rank:29.)
=================================================
Progress: 182


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:13.)
case tf5 (tree3) (tree3)(rank:29.)
=================================================
Progress: 183


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf5 (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))))) (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
asdf
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: (Nil) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))))) (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat (match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 184


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat_list1(rank:5.)
intro tree2(rank:5.)
induction tree1(rank:14.)
induction tree2(rank:14.)
intro tree1(rank:5.)
=================================================
Progress: 185


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 186


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree2(rank:5.)
induction tree2(rank:14.)
case tf7 (tree1)(rank:29.)
=================================================
Progress: 187


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction tree1(rank:14.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 188


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 189


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 190


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:5.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree1)(rank:29.)
=================================================
Progress: 191


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree1)(rank:5.)
=================================================
Progress: 192


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
Case1 : tf5 (tree2) (tree2) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (nat_list2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil)))
Prop: (Nil) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil)))
asdf
=================================================
Progress: 193


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> case tf7 (tree1)(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
Cond1 : gq (nat_list3) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false
Cond2 : nat_eq (nat_list3) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
Case1 : tf7 (tree1) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
nat_list1 = cat (nat_list2) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = cat ((Nil)) (match (tf5 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(ZERO::(Nil)))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(SUCC (ZERO)::(SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))::(Nil)))) = cat ((Nil)) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
asdf
=================================================
Progress: 194


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 195


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:7.)
=================================================
Progress: 196


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 197


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 198


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 199


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 200


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 201


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 202


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7.)
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 203


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 204


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 205


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 206


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 207


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 208


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 209


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 210


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::(ZERO::(ZERO::(Nil)))) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 211


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 212


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 213


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 214


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 215


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 216


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 217


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 218


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 219


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 220


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 221


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 222


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH2 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
=================================================
Progress: 223


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 224


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 225


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf5 (tree2) (tree2)(rank:5.)
=================================================
Progress: 226


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite IH1 in goal at 1(rank:13.)
rewrite IH2 in goal at 1(rank:13.)
rewrite IH2 in goal at 2(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 227


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 228


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((Nil)) (match (tf7 (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((Nil)) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
asdf
=================================================
Progress: 229


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 230


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 231


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 232


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 233


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (nat_list2) = false
Case3 : nat_eq (nat_list2) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 1(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 234


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:21.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 235


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
case tf7 (tree2)(rank:29.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 236


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 237


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 238


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
=================================================
Progress: 239


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree3)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
=================================================
Progress: 240


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (nat_list2) = false
Case3 : nat_eq (nat_list2) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (nat_list2) = false
Case3 : nat_eq (nat_list2) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case tf7 (tree3)
rewrite <- IH1 in goal at 1
Prop: 4 = cat (4) ((Nil))
Prop: 7 = cat (7) ((Nil))
Prop: 2 = cat (2) ((Nil))
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite IH1 in goal at 0
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite IH2 in goal at 1
rewrite <- IH1 in goal at 0
case tf7 (tree3)
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(Nil)) = cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((SUCC (SUCC (ZERO))::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = cat (match (tf5 (Node (Node (Leaf (SUCC (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))) (Node (Node (Leaf (SUCC (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) ((ZERO::(ZERO::(Nil))))
Prop: (Nil) = cat (match (tf5 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))))) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) ((Nil))
asdf
Lemma List
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (nat_list2) = false
Case3 : nat_eq (nat_list2) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 241


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case2 : gq (nat_list2) (nat_list2) = false
Case3 : nat_eq (nat_list2) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)(rank : 0.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 242


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 243


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((nat1::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 244


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = cat (any1) ((nat1::nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 245


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 246


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
any1 = (nat1::any1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: 2 = (ZERO::2)
Prop: 4 = (ZERO::4)
Prop: 0 = (ZERO::0)
asdf
previous tactics
simpl in goal
intro any1
validate generalize_common_subterm_goal
Prop: 4 = (ZERO::cat (4) ((Nil)))
Prop: 0 = (ZERO::cat (0) ((SUCC (SUCC (SUCC (ZERO)))::(ZERO::(ZERO::(Nil))))))
Prop: 0 = (ZERO::cat (0) ((Nil)))
asdf
=================================================
Progress: 247


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (nat_list2)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = false
Case3 : nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case4 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 1
rewrite IH1 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 1
Prop: 6 = cat (6) ((Nil))
Prop: 5 = cat (5) ((Nil))
Prop: 8 = cat (8) ((Nil))
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
case nat_eq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 1
rewrite IH1 in goal at 0
case tf7 (tree3)
validate generalize_common_subterm_goal
Prop: (Nil) = cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(SUCC (ZERO)::(Nil))))
Prop: (Nil) = cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil))
asdf
=================================================
Progress: 248


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::cat (any1) (nat_list2))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (any1:any) (nat_list1:nat list), any1 = cat (any1) (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), any1 = cat (any1) (nat_list2)
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), any1 = (nat1::any1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: 6 = (SUCC (ZERO)::6)
Prop: 1 = (SUCC (ZERO)::1)
Prop: 4 = (ZERO::4)
asdf
previous tactics
simpl in goal
parent
(nat1::cat (any1) (nat_list2))
lower
Cons(_, cat(any1, nat_list2))
upper
_
remove upper
cat(any1, nat_list2)
remove lower
cat(any1, nat_list2)
remove upper
Cons(nat1, cat(any1, nat_list2))
remove lower
Cons(nat1, cat(any1, nat_list2))
remove upper
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove lower
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove upper
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
remove lower
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
validate generalize_common_subterm_goal
Prop: 1 = (SUCC (ZERO)::cat (1) ((Nil)))
Prop: 3 = (SUCC (ZERO)::cat (3) ((Nil)))
Prop: 0 = (ZERO::cat (0) ((ZERO::(ZERO::(Nil)))))
asdf
=================================================
Progress: 249


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 250


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:6.)
intro tree2(rank:6.)
induction tree2(rank:15.)
=================================================
Progress: 251


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:7.)
=================================================
Progress: 252


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 253


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 254


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 255


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree2
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (SUCC (ZERO)::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 256


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 257


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 258


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 259


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 260


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 261


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 262


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 263


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 264


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 265


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 266


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 267


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 268


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 269


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (SUCC (ZERO))::(Nil))) (match (tf5 (Node (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 270


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 271


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 272


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 273


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(ZERO::(SUCC (SUCC (ZERO))::(Nil)))) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
=================================================
Progress: 274


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((SUCC (SUCC (ZERO))::(Nil))) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
=================================================
Progress: 275


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 276


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 277


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 278


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 279


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 280


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 281


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 282


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 283


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 284


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 285


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 286


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 287


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 288


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 289


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 290


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 291


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(Nil)) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a)
=================================================
Progress: 292


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 293


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 294


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(ZERO::(Nil)))) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 295


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 296


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat1:nat), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(ZERO::(SUCC (ZERO)::(ZERO::(SUCC (SUCC (ZERO))::(Nil)))))) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 297


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 298


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 299


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 300


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(Nil)) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 301


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 302


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 303


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 304


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 305


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (SUCC (SUCC (SUCC (ZERO))))::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 306


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 307


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:6.)
intro tree1(rank:6.)
induction tree1(rank:15.)
=================================================
Progress: 308


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 309


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 310


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 311


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 312


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (SUCC (ZERO)))::(Nil)) = (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::match (tf7 (Node (Leaf (ZERO)) (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 313


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 314


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 315


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 316


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 317


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 318


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 319


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 320


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 321


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 322


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 323


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 324


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 325


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 326


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (SUCC (SUCC (ZERO)))) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 327


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 328


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 329


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 330


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 331


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
=================================================
Progress: 332


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 333


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
=================================================
Progress: 334


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7.)
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 335


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 336


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 337


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 338


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 339


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 340


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 341


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 342


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 343


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 344


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 345


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 346


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 347


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 348


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 349


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 350


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 351


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 352


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 353


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 354


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 355


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 356


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 360


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 361


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::match (tf7 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a)
=================================================
Progress: 362


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 363


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 364


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 365


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 366


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 367


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(SUCC (ZERO)::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 368


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 369


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::match (tf7 (Node (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a)
=================================================
Progress: 370


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 371


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 372


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 373


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 374


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 375


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 376


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a)
=================================================
Progress: 377


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(ZERO::(ZERO::(SUCC (ZERO)::(Nil)))))) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 378


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 379


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 380


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 381


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 382


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))::(ZERO::(Nil)))
=================================================
Progress: 383


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 384


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 385


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 386


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 387


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false
Cond2 : nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = (ZERO::match (tf7 (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
=================================================
Progress: 388


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 389


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 390


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 391


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 392


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(ZERO::(Nil)))) = cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a)
Prop: (Nil) = cat ((ZERO::(Nil))) (match (tf5 (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a)
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a)
=================================================
Progress: 393


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 394


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 395


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 396


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 397


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))::(Nil)))
=================================================
Progress: 398


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 399


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 400


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 401


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 402


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 403


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 404


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 405


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 406


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:8.)
intro nat_list1(rank:8.)
=================================================
Progress: 407


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 408


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (ZERO::(Nil)) = (SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 409


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 410


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 411


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 412


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 413


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 414


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 415


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 416


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 417


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 418


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:8.)
=================================================
Progress: 419


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 420


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 421


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 422


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 423


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:8.)
intro nat_list1(rank:8.)
=================================================
Progress: 424


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 425


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 426


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 427


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 428


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 429


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 430


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 431


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))::(Nil)) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 432


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 433


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 434


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 435


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:8.)
=================================================
Progress: 436


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 437


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 438


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 439


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 440


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:10.)
intro nat_list1(rank:10.)
=================================================
Progress: 441


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 442


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (SUCC (ZERO))::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 443


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
=================================================
Progress: 444


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 445


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 446


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 447


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 448


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(ZERO::(SUCC (ZERO)::(Nil))))) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 449


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 450


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 451


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 452


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:10.)
=================================================
Progress: 453


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> nat_list1 = cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
nat_list1 = (nat2::(nat1::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(ZERO::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 454


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 455


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 456


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 457


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:10.)
intro nat_list1(rank:10.)
=================================================
Progress: 458


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 459


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 460


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))
=================================================
Progress: 461


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 462


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 463


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 464


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 465


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
=================================================
Progress: 466


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 467


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a)

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 468


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 469


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:10.)
=================================================
Progress: 470


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = false->nat_eq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> nat_list1 = (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
nat_list1 = (nat1::(nat2::(Nil)))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (Nil) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: (Nil) = (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))
Prop: (Nil) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 471


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 0
Prop: cat (4) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 4
Prop: cat (6) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 6
Prop: cat (3) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 3
validate generalize_common_subterm_goal
Prop: cat (8) (match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 8
Prop: cat (7) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 7
Prop: cat (6) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 6
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
Prop: cat (0) (match (tf7 (Node (Node (Node (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 0
Prop: cat (0) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (8) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 8
validate generalize_common_subterm_goal
Prop: cat (7) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 7
Prop: cat (3) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 3
Prop: cat (6) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 6
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
Prop: cat (4) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 4
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 0
Prop: cat (6) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 6
Prop: cat (6) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 6
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 472


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 473


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro any1(rank:5.)
induction tree2(rank:14.)
case tf5 (tree1) (tree1)(rank:29.)
case tf7 (tree1)(rank:29.)
intro tree2(rank:5.)
=================================================
Progress: 474


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 475


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 476


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 477


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:5.)
=================================================
Progress: 478


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:5.)
=================================================
Progress: 479


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
any1 : any
---------------------------------------
cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (6) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 6
Prop: cat (4) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 4
Prop: cat (0) (match (tf5 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) (Node (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) = 0
asdf
=================================================
Progress: 480


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 481


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 482


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 483


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:6.)
=================================================
Progress: 484


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: (ZERO::4) = 4
Prop: (SUCC (SUCC (ZERO))::0) = 0
Prop: (ZERO::5) = 5
asdf
=================================================
Progress: 485


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 486


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 487


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 488


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:6.)
=================================================
Progress: 489


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (any1:any), (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:6.)
=================================================
Progress: 490


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (any1:any), (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true->gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
Cond2 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond3 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
any1 : any
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
intro any1
validate generalize_common_subterm_goal
Prop: (ZERO::1) = 1
Prop: (ZERO::0) = 0
Prop: (ZERO::2) = 2
asdf
=================================================
Progress: 491


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:5.)
case tf7 (tree3)(rank:5.)
=================================================
Progress: 492


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf7 (tree3)(rank:5.)
=================================================
Progress: 493


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 494


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
rewrite IH1 in goal at 0(rank:13.)
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 495


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 3(rank:21.)
=================================================
Progress: 496


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 497


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf5 (tree3) (tree3)(rank:5.)
=================================================
Progress: 498


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 1(rank:21.)
=================================================
Progress: 499


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 500


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
=================================================
Progress: 501


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 2
case tf7 (tree2)
case tf7 (tree3)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
rewrite <- IH2 in goal at 2
Prop: cat ((ZERO::(Nil))) (6) = 6
Prop: cat ((Nil)) (1) = 1
Prop: cat ((ZERO::(Nil))) (6) = 6
validate generalize_common_subterm_goal
Prop: cat ((SUCC (ZERO)::(Nil))) (1) = 1
Prop: cat ((Nil)) (2) = 2
Prop: cat ((SUCC (ZERO)::(Nil))) (0) = 0
Prop: cat ((Nil)) (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat ((ZERO::(SUCC (ZERO)::(Nil)))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH2 in goal at 0
rewrite IH1 in goal at 2
case tf7 (tree2)
case tf7 (tree3)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
=================================================
Progress: 502


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) (Leaf (ZERO))))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 503


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat_list1(rank:5.)
intro tree2(rank:5.)
induction tree1(rank:14.)
induction tree2(rank:14.)
intro tree1(rank:5.)
=================================================
Progress: 504


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 505


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree2(rank:5.)
induction tree2(rank:14.)
case tf5 (tree1) (tree1)(rank:29.)
=================================================
Progress: 506


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction tree1(rank:14.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 507


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 508


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 509


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:5.)
case tf5 (tree1) (tree1)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 510


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case tf5 (tree1) (tree1)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 511


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree1) (tree1)(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (nat_list3)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (nat_list3)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
Case1 : tf5 (tree1) (tree1) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list2

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf7 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 512


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
Case1 : tf7 (tree2) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
cat (nat_list1) (nat_list2) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((SUCC (SUCC (ZERO))::(Nil))) ((ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((SUCC (ZERO)::(Nil))) ((ZERO::(ZERO::(ZERO::(Nil))))) = match (tf5 (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 513


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 514


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:7.)
=================================================
Progress: 515


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 516


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 517


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 518


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 519


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 520


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 521


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7.)
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 522


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 523


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 524


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 525


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 526


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 527


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 528


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (SUCC (SUCC (SUCC (ZERO)))::(Nil))
=================================================
Progress: 529


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 530


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 531


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 532


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 533


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 534


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(SUCC (SUCC (ZERO))::(Nil)))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 535


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 536


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 537


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
=================================================
Progress: 538


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 539


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 540


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:6.)
intro tree2(rank:6.)
induction tree2(rank:15.)
=================================================
Progress: 541


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:7.)
=================================================
Progress: 542


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 543


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 544


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 545


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree2
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 546


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 547


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 548


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 549


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 550


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 551


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 552


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 553


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 554


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 555


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 556


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 557


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 558


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 559


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (SUCC (SUCC (ZERO)))::(Nil))
Prop: cat ((Nil)) (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 560


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 561


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(ZERO::(ZERO::(Nil)))) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 562


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 563


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: cat ((Nil)) (match (tf7 (Node (Node (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
=================================================
Progress: 564


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
=================================================
Progress: 565


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 566


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 567


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 568


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 569


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 570


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 571


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 572


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 573


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 574


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 575


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 576


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 577


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 578


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 579


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 580


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 581


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((SUCC (ZERO)::(ZERO::(Nil)))) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (SUCC (ZERO))::(Nil))
=================================================
Progress: 582


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 583


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 584


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 585


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 586


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
=================================================
Progress: 587


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 588


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 589


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 590


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (SUCC (ZERO))::(Nil))
=================================================
Progress: 591


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 592


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 593


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 594


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 595


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 596


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 597


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:6.)
intro tree1(rank:6.)
induction tree1(rank:15.)
=================================================
Progress: 598


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 599


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 600


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 601


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 602


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 603


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 604


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 605


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 606


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 607


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 608


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 609


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 610


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 611


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 612


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 613


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 614


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 615


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 616


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a
Prop: (SUCC (SUCC (SUCC (ZERO)))::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (ZERO::(ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 617


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 618


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 619


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 620


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 621


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
=================================================
Progress: 622


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 623


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: (SUCC (ZERO)::(Nil)) = match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
=================================================
Progress: 624


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7.)
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 625


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 626


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 627


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(Nil))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 628


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 629


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 630


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 631


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 632


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 633


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 634


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 635


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 636


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(Nil))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 637


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 638


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 639


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 640


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 641


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 642


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 643


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 644


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 645


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 646


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 647


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 648


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 649


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 650


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 651


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Node (Node (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: (SUCC (SUCC (ZERO))::(Nil)) = match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a
=================================================
Progress: 652


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 653


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 654


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil)))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(ZERO::(ZERO::(Nil)))) = (ZERO::(Nil))
=================================================
Progress: 655


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 656


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 657


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 658


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 659


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (SUCC (ZERO)::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
=================================================
Progress: 660


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 661


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 662


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil)))) = (ZERO::(Nil))
=================================================
Progress: 663


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 664


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(SUCC (SUCC (ZERO))::(Nil)))))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 665


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 666


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
=================================================
Progress: 667


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 668


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 669


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 670


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 671


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 672


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 673


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 674


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 675


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 676


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 677


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
=================================================
Progress: 678


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 679


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 680


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 681


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 682


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf7 (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf7 (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Leaf (ZERO)))) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 683


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 684


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 685


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 686


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 687


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 688


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 689


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 690


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 691


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 692


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 693


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 694


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 695


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 696


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:8.)
intro nat_list1(rank:8.)
=================================================
Progress: 697


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 698


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 699


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 700


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 701


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 702


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 703


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 704


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (SUCC (SUCC (SUCC (ZERO)))::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(ZERO::(Nil)))) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 705


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 706


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 707


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 708


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:8.)
=================================================
Progress: 709


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 710


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 711


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 712


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 713


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:8.)
intro nat_list1(rank:8.)
=================================================
Progress: 714


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 715


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (SUCC (SUCC (ZERO))))::(ZERO::(Nil))) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(ZERO::(Nil)))) = (ZERO::(Nil))
=================================================
Progress: 716


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 717


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 718


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 719


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 720


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 721


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 722


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 723


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 724


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 725


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:8.)
=================================================
Progress: 726


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 727


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 728


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 729


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 730


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:10.)
intro nat_list1(rank:10.)
=================================================
Progress: 731


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 732


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
=================================================
Progress: 733


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 734


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 735


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 736


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 737


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 738


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(ZERO::(Nil)))) = (ZERO::(Nil))
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 739


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 740


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 741


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 742


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:10.)
=================================================
Progress: 743


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat (nat_list1) (match (tf7 (tree1)) with
| Tuple2 a _ -> a) = (nat1::(Nil))
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
(nat2::nat_list1) = (nat1::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 744


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 745


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 746


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 747


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:10.)
intro nat_list1(rank:10.)
=================================================
Progress: 748


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 749


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (ZERO::(Nil))
=================================================
Progress: 750


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(ZERO::(Nil)))) = (ZERO::(Nil))
=================================================
Progress: 751


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 752


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 753


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 754


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 755


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(ZERO::(Nil)))) = (ZERO::(Nil))
=================================================
Progress: 756


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 757


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 758


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 759


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:10.)
=================================================
Progress: 760


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::nat_list1) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
(nat1::nat_list1) = (nat2::(Nil))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (SUCC (ZERO))::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 761


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 0
Prop: cat (0) (match (tf7 (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) = 0
Prop: cat (3) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 3
Prop: cat (3) (match (tf7 (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 3
validate generalize_common_subterm_goal
Prop: cat (2) (match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 2
Prop: cat (3) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 3
Prop: cat (6) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 6
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((ZERO::(ZERO::(Nil)))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf7 (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 762


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 763


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:5.)
intro tree2(rank:5.)
induction tree2(rank:14.)
case tf5 (tree1) (tree1)(rank:29.)
=================================================
Progress: 764


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 765


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 766


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 767


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:5.)
=================================================
Progress: 768


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
any1 : any
---------------------------------------
cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (4) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 4
Prop: cat (5) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = 5
Prop: cat (1) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = 1
asdf
=================================================
Progress: 769


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 770


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 771


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 772


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::3) = 3
Prop: (ZERO::0) = 0
Prop: (ZERO::3) = 3
asdf
=================================================
Progress: 773


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 774


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 775


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 776


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (any1:any), (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:6.)
=================================================
Progress: 777


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (any1:any), (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
any1 : any
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro any1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::0) = 0
Prop: (ZERO::8) = 8
Prop: (ZERO::4) = 4
asdf
=================================================
Progress: 778


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:21.)
case tf5 (tree2) (tree2)(rank:29.)
=================================================
Progress: 779


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf5 (tree3) (tree3)(rank:5.)
=================================================
Progress: 780


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 781


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 0
Prop: cat (6) ((Nil)) = 6
Prop: cat (6) ((ZERO::(ZERO::(ZERO::(Nil))))) = 6
Prop: cat (0) ((ZERO::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))) = 0
validate generalize_common_subterm_goal
Prop: cat (5) ((Nil)) = 5
Prop: cat (0) ((SUCC (ZERO)::(Nil))) = 0
Prop: cat (6) ((Nil)) = 6
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
Prop: cat (6) ((Nil)) = 6
Prop: cat (0) ((Nil)) = 0
Prop: cat (2) ((ZERO::(Nil))) = 2
validate generalize_common_subterm_goal
Prop: cat (5) ((ZERO::(Nil))) = 5
Prop: cat (1) ((Nil)) = 1
Prop: cat (1) ((Nil)) = 1
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 782


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 783


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 1(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite IH1 in goal at 2(rank:13.)
=================================================
Progress: 784


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:13.)
rewrite <- IH1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 785


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 1
Prop: cat (8) ((Nil)) = 8
Prop: cat (2) ((Nil)) = 2
Prop: cat (3) ((Nil)) = 3
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))) ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))) = match (tf7 (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((ZERO::(Nil))) ((ZERO::(Nil))) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
Lemma List
forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 786


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1(rank : 0.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1

---------------------------------------
forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 787


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1

---------------------------------------
forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), cat (any1) ((Nil)) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 788


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (any1:any), cat (any1) ((Nil)) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), cat (any1) ((nat1::nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 789


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), cat (any1) ((nat1::nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), (nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro any1(rank:5.)
rewrite IH1 in goal at 0(rank:13.)
=================================================
Progress: 790


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), (nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
(nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 791


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
(nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
any1 : any
---------------------------------------
(nat1::any1) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro any1
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (ZERO::4) = 4
Prop: (SUCC (ZERO)::6) = 6
Prop: (ZERO::2) = 2
asdf
previous tactics
simpl in goal
intro any1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::cat (2) ((SUCC (SUCC (ZERO))::(Nil)))) = 2
Prop: (ZERO::cat (0) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) = 0
Prop: (SUCC (ZERO)::cat (0) ((Nil))) = 0
asdf
=================================================
Progress: 792


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 2
Prop: cat ((Nil)) (2) = 2
Prop: cat ((ZERO::(ZERO::(Nil)))) (4) = 4
Prop: cat ((Nil)) (8) = 8
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (5) = 5
Prop: cat ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) (4) = 4
Prop: cat ((ZERO::(Nil))) (3) = 3
Prop: cat ((Nil)) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((ZERO::(Nil))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) ((ZERO::(Nil))) = match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 793


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 1
case tf7 (tree2)
rewrite <- IH1 in goal at 2
Prop: cat (5) ((Nil)) = 5
Prop: cat (0) ((Nil)) = 0
Prop: cat (0) ((Nil)) = 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 1
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = (ZERO::(Nil))
Prop: cat (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Node (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
asdf
=================================================
Progress: 794


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), (nat1::cat (any1) (nat_list2)) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (any1:any) (nat_list1:nat list), cat (any1) (nat_list1) = any1
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : forall (any1:any), cat (any1) (nat_list2) = any1
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
forall (any1:any), (nat1::any1) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: (ZERO::1) = 1
Prop: (ZERO::1) = 1
Prop: (ZERO::8) = 8
asdf
previous tactics
simpl in goal
parent
(nat1::cat (any1) (nat_list2))
lower
Cons(_, cat(any1, nat_list2))
upper
_
remove upper
cat(any1, nat_list2)
remove lower
cat(any1, nat_list2)
remove upper
Cons(nat1, cat(any1, nat_list2))
remove lower
Cons(nat1, cat(any1, nat_list2))
remove upper
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove lower
Cons(nat1, Cons(nat2, cat(any1, nat_list3)))
remove upper
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
remove lower
Cons(nat1, Cons(nat2, Cons(nat3, cat(any1, nat_list4))))
validate generalize_common_subterm_goal
Prop: (ZERO::cat (7) ((Nil))) = 7
Prop: (SUCC (SUCC (SUCC (ZERO)))::cat (0) ((Nil))) = 0
Prop: (ZERO::cat (0) ((Nil))) = 0
asdf
=================================================
Progress: 795


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 796


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 1(rank:5.)
=================================================
Progress: 797


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 2(rank:5.)
=================================================
Progress: 798


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: cat (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(ZERO::(Nil)))
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
asdf
=================================================
Progress: 799


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 2
case tf7 (tree2)
rewrite <- IH1 in goal at 2
Prop: cat ((Nil)) (3) = 3
Prop: cat ((Nil)) (7) = 7
Prop: cat ((Nil)) (6) = 6
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (8) = 8
Prop: cat ((Nil)) (6) = 6
Prop: cat ((Nil)) (3) = 3
Prop: cat ((Nil)) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 2
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 800


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 801


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 0
rewrite IH2 in goal at 0
Prop: cat (6) ((ZERO::(Nil))) = 6
Prop: cat (5) ((Nil)) = 5
Prop: cat (1) ((Nil)) = 1
validate generalize_common_subterm_goal
Prop: cat (7) ((Nil)) = 7
Prop: cat (8) ((Nil)) = 8
Prop: cat (0) ((SUCC (ZERO)::(Nil))) = 0
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 0
Prop: cat (1) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
Prop: cat (4) (match (tf5 (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = 4
Prop: cat (1) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 1
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf5 (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
asdf
Lemma List
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 802


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1(rank : 0.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 803


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

---------------------------------------
forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro any1(rank:5.)
intro tree2(rank:5.)
induction tree2(rank:14.)
case tf5 (tree1) (tree1)(rank:29.)
=================================================
Progress: 804


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 805


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 806


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 807


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:5.)
=================================================
Progress: 808


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (any1:any), cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 5.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
any1 : any
---------------------------------------
cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (0) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 0
Prop: cat (8) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = 8
asdf
=================================================
Progress: 809


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 810


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 811


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 812


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
any1 : any
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::5) = 5
Prop: (ZERO::7) = 7
Prop: (ZERO::0) = 0
asdf
=================================================
Progress: 813


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
---------------------------------------
forall (any1:any) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 814


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 815


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (any1:any), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 816


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (any1:any), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (any1:any), (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro any1(rank:6.)
=================================================
Progress: 817


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (any1:any), (nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
>>> intro any1(rank : 6.)


1st goal of : forall (any1:any) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (any1) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = any1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
any1 : any
---------------------------------------
(nat1::any1) = any1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro any1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::4) = 4
Prop: (SUCC (ZERO)::4) = 4
Prop: (ZERO::7) = 7
asdf
=================================================
Progress: 818


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(ZERO::(Nil)))
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
Lemma List
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 819


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1(rank : 0.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat_list1(rank:5.)
intro tree2(rank:5.)
induction tree1(rank:14.)
induction tree2(rank:14.)
intro tree1(rank:5.)
=================================================
Progress: 820


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 821


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree2(rank:5.)
induction tree2(rank:14.)
case tf5 (tree1) (tree1)(rank:29.)
=================================================
Progress: 822


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction tree1(rank:14.)
case tf5 (tree2) (tree2)(rank:29.)
=================================================
Progress: 823


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 824


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 825


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:5.)
case tf5 (tree1) (tree1)(rank:29.)
case tf5 (tree2) (tree2)(rank:29.)
=================================================
Progress: 826


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case tf5 (tree1) (tree1)(rank:5.)
case tf5 (tree2) (tree2)(rank:5.)
=================================================
Progress: 827


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree1) (tree1)(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (nat_list3)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (nat_list3)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
Case1 : tf5 (tree1) (tree1) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
cat (nat_list2) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(ZERO::(Nil)))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 828


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (nat_list3)) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (nat_list3)) = true
nat_list1 : nat list
Case1 : tf5 (tree2) (tree2) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) ((SUCC (ZERO)::(Nil))) = (Nil)
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = (ZERO::(Nil))
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = (Nil)
asdf
=================================================
Progress: 829


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 830


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:7.)
=================================================
Progress: 831


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 832


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 833


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 834


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 835


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 836


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 837


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7.)
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 838


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 839


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 840


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 841


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 842


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 843


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 844


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 845


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 846


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 847


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 848


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 849


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 850


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 851


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 852


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 853


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 854


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 855


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 856


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:6.)
intro tree2(rank:6.)
induction tree2(rank:15.)
=================================================
Progress: 857


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:7.)
=================================================
Progress: 858


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 859


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 860


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 861


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree2
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 862


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 863


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 864


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 865


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 866


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 867


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 868


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 869


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 870


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 871


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 872


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 873


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 874


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 875


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (SUCC (ZERO))::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 876


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 877


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (Nil)
=================================================
Progress: 878


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 879


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Node (Node (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Node (Node (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 880


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 881


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 882


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 883


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 884


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 885


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 886


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 887


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 888


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 889


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 890


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 891


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 892


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 893


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 894


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 895


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 896


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 897


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
=================================================
Progress: 898


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 899


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 900


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 901


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 902


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat1:nat), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: cat ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
=================================================
Progress: 903


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 904


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil))) = (Nil)
=================================================
Progress: 905


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (SUCC (ZERO))::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
=================================================
Progress: 906


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Node (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Node (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 907


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
=================================================
Progress: 908


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 909


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 910


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 911


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 912


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 913


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:6.)
intro tree1(rank:6.)
induction tree1(rank:15.)
=================================================
Progress: 914


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 915


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 916


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 917


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 918


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 919


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 920


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 921


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 922


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 923


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 924


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 925


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 926


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 927


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 928


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 929


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 930


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 931


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 932


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 933


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 934


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(SUCC (SUCC (SUCC (ZERO)))::(Nil))) = (Nil)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 935


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 936


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 937


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: (ZERO::match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(ZERO::(Nil)))
=================================================
Progress: 938


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 939


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: (ZERO::match (tf5 (Node (Leaf (SUCC (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Leaf (SUCC (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 940


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7.)
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 941


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat2(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 942


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 943


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (SUCC (SUCC (ZERO))::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 944


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 945


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 946


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 947


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 948


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(ZERO::(ZERO::(Nil))))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 949


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 950


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 951


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 952


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Lemma List
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 953


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 954


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 955


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 956


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 957


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 958


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 959


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 960


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 961


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 962


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 963


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 964


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 965


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 966


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 967


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
=================================================
Progress: 968


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 969


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 970


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 971


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat2(rank:9.)
intro nat_list1(rank:9.)
=================================================
Progress: 972


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 973


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (nat2:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 974


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 975


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat1:nat), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 976


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 977


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (SUCC (SUCC (ZERO))::(Nil))
=================================================
Progress: 978


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
=================================================
Progress: 979


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 980


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat2:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (nat2:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(ZERO::(ZERO::(Nil))))
=================================================
Progress: 981


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat2 : nat
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 982


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 983


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(SUCC (SUCC (ZERO))::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 984


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat2 : nat
nat_list1 : nat list
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 985


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 986


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 987


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 988


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 989


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 990


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 991


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 992


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 993


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false
Cond2 : nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(SUCC (SUCC (ZERO))::(Nil)))
Prop: (SUCC (ZERO)::match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 994


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 995


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 996


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 997


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 998


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
---------------------------------------
forall (nat_list1:nat list), cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true
nat_list1 : nat list
---------------------------------------
cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
=================================================
Progress: 999


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1000


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1001


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1002


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 1003


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
tree2 : tree
nat2 : nat
Base2 : tree2 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1004


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1005


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1006


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 1007


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 1008


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) = true -> cat (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil))) = (Nil)
=================================================
Progress: 1009


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1010


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1011


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 1012


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:8.)
intro nat_list1(rank:8.)
=================================================
Progress: 1013


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 1014


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil))) = (Nil)
=================================================
Progress: 1015


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::(SUCC (SUCC (ZERO))::(Nil))) = (Nil)
=================================================
Progress: 1016


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1017


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1018


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 1019


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 1020


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1021


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1022


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1023


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 1024


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:8.)
=================================================
Progress: 1025


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1026


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1027


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1028


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 1029


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:8.)
intro nat_list1(rank:8.)
=================================================
Progress: 1030


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 1031


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
=================================================
Progress: 1032


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (SUCC (SUCC (SUCC (ZERO))))::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1033


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1034


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1035


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 1036


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:8.)
=================================================
Progress: 1037


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
=================================================
Progress: 1038


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 1039


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 1040


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 1041


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:8.)
=================================================
Progress: 1042


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (SUCC (SUCC (ZERO))::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1043


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1044


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1045


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 1046


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:10.)
intro nat_list1(rank:10.)
=================================================
Progress: 1047


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 1048


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(ZERO::(ZERO::(Nil))))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1049


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(SUCC (SUCC (SUCC (ZERO)))::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1050


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1051


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1052


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 1053


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 1054


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (ZERO::(Nil))
=================================================
Progress: 1055


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1056


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1057


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 1058


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:10.)
=================================================
Progress: 1059


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), false = false->nat_eq (ZERO) (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) = true -> cat ((nat1::(Nil))) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
(nat2::(nat1::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (Nil)
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (SUCC (ZERO)::(ZERO::(Nil)))
=================================================
Progress: 1060


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1061


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1062


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 1063


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro nat1(rank:10.)
intro nat_list1(rank:10.)
=================================================
Progress: 1064


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 1065


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1066


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1067


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1068


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1069


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 1070


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat_list1:nat list), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:10.)
=================================================
Progress: 1071


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(SUCC (ZERO)::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1072


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 18.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 1073


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (Leaf (nat2)) (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 1074


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), false = false->nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:10.)
=================================================
Progress: 1075


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
---------------------------------------
forall (nat1:nat), nat_eq (ZERO) (ZERO) = true -> (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:10.)
=================================================
Progress: 1076


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = false->nat_eq (depth (match (tf5 (tree1) (tree1)) with
| Tuple2 _ b -> b)) (ZERO) = true -> (nat1::match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
Cond1 : false = false
Cond2 : nat_eq (ZERO) (ZERO) = true
nat1 : nat
---------------------------------------
(nat1::(nat2::(Nil))) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro nat1
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
Prop: (ZERO::(ZERO::(Nil))) = (Nil)
=================================================
Progress: 1077


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 0
Prop: cat (2) (2) = 2
Prop: cat (7) (7) = 7
Prop: cat (7) (7) = 7
validate generalize_common_subterm_goal
Prop: cat (5) (5) = 5
Prop: cat (0) (0) = 0
Prop: cat (2) (2) = 2
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 1078


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(ZERO::(ZERO::(Nil))))) (match (tf5 (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(ZERO::(ZERO::(Nil))))
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
=================================================
Progress: 1079


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf5 (tree2) (tree2)(rank:5.)
=================================================
Progress: 1080


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 2(rank:5.)
=================================================
Progress: 1081


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 2(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 2
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = (ZERO::(Nil))
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((ZERO::(SUCC (ZERO)::(Nil)))) = (ZERO::(SUCC (ZERO)::(Nil)))
Prop: cat (match (tf5 (Node (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO))) (Node (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(ZERO::(Nil)))
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
=================================================
Progress: 1082


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))) = (ZERO::(ZERO::(Nil)))
Prop: cat ((Nil)) ((Nil)) = (Nil)
Prop: cat ((Nil)) ((Nil)) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
Prop: cat ((Nil)) (0) = 0
Prop: cat ((Nil)) (8) = 8
Prop: cat ((ZERO::(Nil))) (8) = 8
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (4) = 4
Prop: cat ((Nil)) (3) = 3
Prop: cat ((Nil)) (4) = 4
Prop: cat ((Nil)) (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 1083


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (nat_list1) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH2 in goal at 1
validate generalize_common_subterm_goal
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) ((Nil)) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
Prop: cat ((Nil)) (7) = 7
Prop: cat ((Nil)) (3) = 3
Prop: cat ((Nil)) (5) = 5
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (3) = 3
Prop: cat ((Nil)) (4) = 4
Prop: cat ((Nil)) (1) = 1
Prop: cat ((Nil)) (match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 1084


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
rewrite <- IH2 in goal at 0
Prop: cat (5) (5) = 5
Prop: cat (8) (8) = 8
Prop: cat (1) (1) = 1
validate generalize_common_subterm_goal
Prop: cat (0) (0) = 0
Prop: cat (8) (8) = 8
Prop: cat (2) (2) = 2
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
Prop: cat ((Nil)) (1) = 1
Prop: cat ((SUCC (ZERO)::(Nil))) (2) = 2
Prop: cat ((ZERO::(Nil))) (3) = 3
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (4) = 4
Prop: cat ((ZERO::(Nil))) (7) = 7
Prop: cat ((Nil)) (3) = 3
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 1085


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 1086


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1087


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), cat (nat_list1) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 1088


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat_list1
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::(Nil)) = (SUCC (SUCC (ZERO))::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(Nil)) = (SUCC (ZERO)::(Nil))
Lemma List
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1089


1st goal of : forall (nat_list1:nat list) (tree1:tree), cat (nat_list1) (match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a) = match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat1::(Nil))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro nat1(rank:7.)
intro nat_list1(rank:7.)
=================================================
Progress: 1090


1st goal of : forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 1091


1st goal of : forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))
nat_list1 : nat list
---------------------------------------
forall (nat1:nat), (nat1::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(SUCC (ZERO)::(ZERO::(Nil)))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
asdf
=================================================
Progress: 1092


1st goal of : forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), (nat1::nat_list1) = (nat1::(Nil))
nat1 : nat
nat_list1 : nat list
---------------------------------------
(nat1::nat_list1) = (nat1::(Nil))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::(ZERO::(Nil))) = (ZERO::(Nil))
Prop: (ZERO::(Nil)) = (ZERO::(Nil))
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = (SUCC (ZERO)::(Nil))
asdf
=================================================
Progress: 1093


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 0
Prop: cat (7) (7) = 7
Prop: cat (0) (0) = 0
Prop: cat (0) (0) = 0
validate generalize_common_subterm_goal
Prop: cat (1) (1) = 1
Prop: cat (7) (7) = 7
Prop: cat (4) (4) = 4
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: cat (match (tf5 (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = match (tf5 (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO)))) (Node (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))))) (Leaf (ZERO)))) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Node (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO))))) (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (SUCC (ZERO))))) (Node (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO)))))))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((SUCC (ZERO)::(Nil))) = (SUCC (ZERO)::(Nil))
asdf
=================================================
Progress: 1094


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : nat_list1 = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (nat_list2) = true
Case2 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (nat_list2)) = true
Case4 : tf7 (tree3) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
Case6 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
rewrite <- IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat (match (tf5 (Node (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Node (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 1
rewrite IH2 in goal at 0
case tf7 (tree3)
rewrite IH1 in goal at 0
rewrite <- IH2 in goal at 0
case tf7 (tree2)
rewrite <- IH2 in goal at 2
rewrite <- IH1 in goal at 0
case tf5 (tree3) (tree3)
validate generalize_common_subterm_goal
Prop: cat (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf5 (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = (ZERO::(Nil))
Prop: cat (match (tf5 (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
asdf
=================================================
Progress: 1095


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 1096


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 1097


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case3 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 1098


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case3 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:5.)
=================================================
Progress: 1099


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case3 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case3 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 1
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: (Nil) = match (tf7 (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (SUCC (SUCC (ZERO)))))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: (Nil) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: (Nil) = match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 1100


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case3 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case3 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 1
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: match (tf5 (Leaf (SUCC (SUCC (SUCC (ZERO))))) (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a = (Nil)
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (Nil)
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (Nil)
asdf
=================================================
Progress: 1101


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 1102


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case3 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 2
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = (Nil)
Prop: match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = (Nil)
Prop: match (tf7 (Node (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (ZERO))))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a = (Nil)
asdf
=================================================
Progress: 1103


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf7 (tree2)) with
| Tuple2 a _ -> a = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case2 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case3 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite IH1 in goal at 0
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 2
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::(ZERO::(Nil))) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: (Nil) = match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
Prop: (Nil) = match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 1104


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree3) (tree3)(rank:5.)
case tf7 (tree2)(rank:5.)
=================================================
Progress: 1105


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree3) (tree3)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : nat_list1 = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (nat_list2)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (nat_list2)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf5 (tree3) (tree3) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (nat_list1) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:21.)
rewrite IH2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 2(rank:21.)
=================================================
Progress: 1106


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = match (tf7 (tree2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree2)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:5.)
=================================================
Progress: 1107


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = nat_list1
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (nat_list2) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
Case5 : tf7 (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 0
case tf7 (tree2)
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((SUCC (ZERO)::(Nil))) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: cat ((Nil)) (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
asdf
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((ZERO::(Nil))) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
asdf
=================================================
Progress: 1108


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (nat_list1) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
rewrite IH1 in goal at 1
validate generalize_common_subterm_goal
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (ZERO)))))) (Leaf (ZERO))) (Leaf (ZERO)))) (Node (Leaf (ZERO)) (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Node (Node (Leaf (ZERO)) (Node (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO))))) (Node (Leaf (ZERO)) (Leaf (ZERO)))))) (Leaf (ZERO))) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
previous tactics
simpl in goal
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
case gq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
reflexivity
rewrite IH1 in goal at 0
case nat_eq (depth (match (tf5 (tree2) (tree2)) with
| Tuple2 _ b -> b)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b))
rewrite <- IH1 in goal at 0
case tf5 (tree2) (tree2)
validate generalize_common_subterm_goal
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
asdf
Lemma List
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 1109


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : nat_list1 = match (tf7 (tree2)) with
| Tuple2 a _ -> a
IH2 : match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a = match (tf7 (tree3)) with
| Tuple2 a _ -> a
Inductive1 : tree1 = Node (tree2) (tree3)
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : gq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = false
Case3 : nat_eq (depth (nat_list2)) (depth (match (tf5 (tree3) (tree3)) with
| Tuple2 _ b -> b)) = true
Case4 : tf5 (tree2) (tree2) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
cat (match (tf7 (tree2)) with
| Tuple2 a _ -> a) (match (tf5 (tree3) (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1(rank : 0.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
intro nat_list1(rank:5.)
intro tree2(rank:5.)
induction tree1(rank:14.)
induction tree2(rank:14.)
intro tree1(rank:5.)
=================================================
Progress: 1110


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 1111


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree2(rank:5.)
induction tree2(rank:14.)
case tf7 (tree1)(rank:29.)
=================================================
Progress: 1112


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
induction tree1(rank:14.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree2)(rank:29.)
=================================================
Progress: 1113


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 1114


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:5.)
case tf5 (tree2) (tree2)(rank:29.)
case tf7 (tree1)(rank:29.)
=================================================
Progress: 1115


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
forall (nat_list1:nat list), cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case tf5 (tree2) (tree2)(rank:5.)
case tf7 (tree1)(rank:5.)
=================================================
Progress: 1116


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> case tf5 (tree2) (tree2)(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
Case1 : tf5 (tree2) (tree2) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (nat_list2) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat (match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) ((Nil)) = (Nil)
Prop: cat (match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) ((ZERO::(Nil))) = (Nil)
asdf
=================================================
Progress: 1117


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
---------------------------------------
cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> case tf7 (tree1)(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
Cond1 : gq (nat_list3) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
nat_list1 : nat list
Case1 : tf7 (tree1) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
cat (nat_list2) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: cat ((ZERO::(Nil))) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: cat ((Nil)) (match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: cat ((Nil)) (match (tf5 (Leaf (SUCC (ZERO))) (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 1118


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 1119


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 1120


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 1121


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (tree2:tree), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1122


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 1123


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:7.)
=================================================
Progress: 1124


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf7 (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 1125


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 1126


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 1127


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:5.)
=================================================
Progress: 1128


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree2(rank:6.)
=================================================
Progress: 1129


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
---------------------------------------
forall (tree2:tree), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1130


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 1131


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:7.)
=================================================
Progress: 1132


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 1133


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1134


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:6.)
intro tree1(rank:6.)
induction tree1(rank:15.)
=================================================
Progress: 1135


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:7.)
=================================================
Progress: 1136


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 1137


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 1138


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf7 (Node (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
End of Lemma List


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 1139


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 1140


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 1141


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1142


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 1143


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
=================================================
Progress: 1144


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:7.)
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 1145


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:7.)
induction tree1(rank:16.)
=================================================
Progress: 1146


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1147


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1148


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 1149


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1150


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1151


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (SUCC (ZERO)::match (tf7 (Leaf (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(SUCC (ZERO)::(Nil)))
Prop: (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(ZERO::(Nil)))
Prop: (ZERO::match (tf7 (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) = (Nil)
Lemma List
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1152


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 1153


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 1154


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf7 (Leaf (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(Nil))
Prop: (ZERO::match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 1155


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf7 (Node (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Node (Node (Leaf (SUCC (ZERO))) (Leaf (ZERO))) (Leaf (ZERO)))))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(ZERO::(ZERO::(Nil))))
Prop: (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf7 (Node (Node (Node (Leaf (ZERO)) (Leaf (ZERO))) (Leaf (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 1156


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 1157


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1158


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1159


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:8.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
=================================================
Progress: 1160


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:17.)
rewrite <- IH1 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
=================================================
Progress: 1161


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 1162


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 2
intro tree1(rank:9.)
induction tree1(rank:18.)
=================================================
Progress: 1163


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1164


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction tree1(rank:10.)
=================================================
Progress: 1165


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1166


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1167


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf7 (Leaf (SUCC (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 1168


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:9.)
=================================================
Progress: 1169


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (nat1:nat), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat1:nat), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf7 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (SUCC (ZERO))::match (tf7 (Node (Leaf (SUCC (ZERO))) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a) = (SUCC (SUCC (ZERO))::(ZERO::(SUCC (ZERO)::(Nil))))
=================================================
Progress: 1170


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 1171


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
---------------------------------------
forall (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> induction tree1(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
discriminate(rank:9.)
=================================================
Progress: 1172


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 1173


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1174


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:10.)
rewrite <- IH1 in goal at 0(rank:18.)
rewrite <- IH2 in goal at 0(rank:18.)
=================================================
Progress: 1175


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

3 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 10.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 0(rank:19.)
=================================================
Progress: 1176


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
---------------------------------------
forall (nat_list1:nat list) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1177


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (Leaf (nat1)) (Leaf (nat1))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 1178


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 1179


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
forall (nat_list1:nat list), (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
Cond1 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true
nat_list1 : nat list
---------------------------------------
(nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro nat_list1
validate generalize_common_subterm_goal
Prop: (ZERO::match (tf7 (Node (Leaf (ZERO)) (Leaf (ZERO)))) with
| Tuple2 a _ -> a) = (SUCC (ZERO)::(ZERO::(Nil)))
Prop: (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (SUCC (ZERO)::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
=================================================
Progress: 1180


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 1181


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat1))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Leaf (nat1))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 1182


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:5.)
=================================================
Progress: 1183


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 1184


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:6.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 1(rank:14.)
rewrite <- IH2 in goal at 2(rank:14.)
rewrite <- IH2 in goal at 3(rank:22.)
rewrite <- IH1 in goal at 3(rank:22.)
rewrite <- IH1 in goal at 1(rank:14.)
=================================================
Progress: 1185


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 3(rank:23.)
case tf5 (tree2) (tree2)(rank:30.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
case tf7 (tree3)(rank:30.)
=================================================
Progress: 1186


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 1187


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 9
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 0(rank:22.)
rewrite <- IH2 in goal at 1(rank:22.)
rewrite <- IH2 in goal at 2(rank:22.)
case tf7 (tree2)(rank:29.)
rewrite <- IH1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
case tf7 (tree3)(rank:29.)
=================================================
Progress: 1188


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 3(rank:23.)
case tf5 (tree2) (tree2)(rank:30.)
case tf7 (tree3)(rank:30.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
=================================================
Progress: 1189


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 1(rank:15.)
rewrite <- IH2 in goal at 3(rank:23.)
case tf5 (tree2) (tree2)(rank:30.)
case tf7 (tree3)(rank:30.)
rewrite <- IH1 in goal at 3(rank:23.)
=================================================
Progress: 1190


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 1191


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 5
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite <- IH2 in goal at 2(rank:22.)
case tf7 (tree2)(rank:29.)
case tf7 (tree4)(rank:29.)
rewrite <- IH1 in goal at 2(rank:22.)
=================================================
Progress: 1192


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 3(rank:23.)
case tf5 (tree2) (tree2)(rank:30.)
case tf7 (tree4)(rank:30.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
=================================================
Progress: 1193


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH2 in goal at 1(rank:15.)
rewrite <- IH2 in goal at 3(rank:23.)
case tf5 (tree2) (tree2)(rank:30.)
case tf7 (tree4)(rank:30.)
rewrite <- IH1 in goal at 3(rank:23.)
=================================================
Progress: 1194


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 1195


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
nat2 : nat
Base2 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 1196


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Node (tree3) (tree4))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree3) (tree4))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:6.)
=================================================
Progress: 1197


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
---------------------------------------
forall (nat_list1:nat list), gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 1198


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
---------------------------------------
gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 1(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 1(rank:15.)
=================================================
Progress: 1199


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 3(rank:16.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
=================================================
Progress: 1200


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:8.)
=================================================
Progress: 1201


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 1202


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
(nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 2
case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:8.)
rewrite IH1 in goal at 0(rank:24.)
=================================================
Progress: 1203


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
---------------------------------------
(nat1::match (if nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (plus (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (SUCC (ZERO))) (ZERO) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = false
Case2 : nat_eq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf7 (tree4)) with
| Tuple2 a _ -> a)) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:25.)
case tf7 (tree3)(rank:32.)
case tf7 (tree4)(rank:32.)
=================================================
Progress: 1204


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:8.)
=================================================
Progress: 1205


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
nat_list1 : nat list
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:25.)
rewrite IH2 in goal at 0(rank:25.)
case tf7 (tree3)(rank:32.)
case tf7 (tree4)(rank:32.)
=================================================
Progress: 1206


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1207


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 10
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- Cond1 in goal at 0(rank:14.)
case tf7 (tree2)(rank:30.)
case tf7 (tree3)(rank:30.)
=================================================
Progress: 1208


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 3(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
case tf7 (tree2)(rank:30.)
case tf7 (tree3)(rank:30.)
case tf7 (tree4)(rank:30.)
=================================================
Progress: 1209


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
case tf7 (tree2)(rank:30.)
case tf7 (tree3)(rank:30.)
=================================================
Progress: 1210


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1211


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
case tf7 (tree2)(rank:30.)
case tf7 (tree4)(rank:30.)
rewrite <- Cond1 in goal at 0(rank:14.)
=================================================
Progress: 1212


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
case tf7 (tree2)(rank:30.)
case tf7 (tree3)(rank:30.)
case tf7 (tree4)(rank:30.)
rewrite <- IH2 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
=================================================
Progress: 1213


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
case tf7 (tree2)(rank:30.)
case tf7 (tree3)(rank:30.)
case tf7 (tree4)(rank:30.)
rewrite <- IH2 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
=================================================
Progress: 1214


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1215


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 9
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
case tf7 (tree2)(rank:30.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
case tf7 (tree3)(rank:30.)
=================================================
Progress: 1216


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree3)(rank:31.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
=================================================
Progress: 1217


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1218


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 9
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 1(rank:23.)
rewrite <- IH2 in goal at 2(rank:23.)
case tf7 (tree2)(rank:30.)
rewrite <- IH1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
case tf7 (tree4)(rank:30.)
=================================================
Progress: 1219


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- IH2 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree4)(rank:31.)
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 3(rank:24.)
=================================================
Progress: 1220


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1221


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 3
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH2 in goal at 0(rank:23.)
=================================================
Progress: 1222


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
=================================================
Progress: 1223


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::(nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
=================================================
Progress: 1224


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 1225


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Cond1 in goal at 0(rank:6.)
=================================================
Progress: 1226


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Cond1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:7.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 0(rank:15.)
rewrite <- IH2 in goal at 1(rank:15.)
rewrite <- IH2 in goal at 2(rank:15.)
rewrite <- IH2 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 1(rank:15.)
=================================================
Progress: 1227


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 7.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1228


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- IH2 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
=================================================
Progress: 1229


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::(nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)) = nat_list1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
=================================================
Progress: 1230


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) (cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) = gq (cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) (cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree3)(rank:31.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 3(rank:24.)
=================================================
Progress: 1231


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree3)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (SUCC (match (tf7 (tree3)) with
| Tuple2 _ b -> b)) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) (cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) = gq (cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a)) (cat (match (tf7 (tree4)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
case tf5 (tree2) (tree2)(rank:31.)
case tf7 (tree4)(rank:31.)
rewrite <- IH1 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
=================================================
Progress: 1232


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq ((nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)) (ZERO) = gq ((nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
=================================================
Progress: 1233


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq ((nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:8.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 1(rank:24.)
=================================================
Progress: 1234


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq ((nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq ((nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)) (ZERO) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 2(rank:25.)
rewrite <- IH2 in goal at 0(rank:25.)
rewrite <- IH2 in goal at 2(rank:25.)
=================================================
Progress: 1235


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq ((nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a)) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 3(rank:24.)
case tf7 (tree3)(rank:31.)
case tf7 (tree4)(rank:31.)
rewrite <- IH1 in goal at 3(rank:24.)
=================================================
Progress: 1236


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq ((nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)) (ZERO) = gq ((nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
=================================================
Progress: 1237


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq ((nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank:8.)
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
=================================================
Progress: 1238


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq ((nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq ((nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)) (ZERO) = true

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite <- Case1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- IH1 in goal at 2(rank:25.)
rewrite <- IH2 in goal at 2(rank:25.)
=================================================
Progress: 1239


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree3))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree3)))) else if nat_eq (snd3 (tf7 (tree3))) (snd3 (tf7 (tree4))) then Tuple2 (cat (fst3 (tf7 (tree3))) (fst3 (tf7 (tree4)))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree4))) (plus (snd3 (tf7 (tree4))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq ((nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a)) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
=================================================
Progress: 1240


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (tree1:tree) (tree2:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (match (tf7 (tree2)) with
| Tuple2 _ b -> b) = true -> cat (match (tf7 (tree1)) with
| Tuple2 a _ -> a) (match (tf5 (tree2) (tree2)) with
| Tuple2 a _ -> a) = nat_list1
tree2 : tree
nat1 : nat
Base1 : tree2 = Leaf (nat1)
tree1 : tree
tree3 : tree
tree4 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree4)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree3) (tree4)
nat_list1 : nat list
Cond1 : true = true
Case1 : gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree4)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (match (tf7 (tree4)) with
| Tuple2 _ b -> b)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
rewrite <- IH1 in goal at 0(rank:24.)
rewrite <- IH1 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 0(rank:24.)
rewrite <- IH2 in goal at 1(rank:24.)
rewrite <- IH2 in goal at 2(rank:24.)
rewrite <- IH2 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 1(rank:24.)
case tf7 (tree3)(rank:31.)
case tf7 (tree4)(rank:31.)
=================================================
Progress: 1241


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

---------------------------------------
forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 1242


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1243


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 1244


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat1:nat) (nat_list1:nat list), gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 1245


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
nat_list1 : nat list
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1246


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
nat_list1 : nat list
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:8.)
=================================================
Progress: 1247


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat) (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
nat_list1 : nat list
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro nat_list1
intro Cond1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: (SUCC (SUCC (ZERO))::match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a) = (Nil)
Prop: (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (ZERO::(Nil))
Prop: (ZERO::match (tf7 (Leaf (ZERO))) with
| Tuple2 a _ -> a) = (Nil)
asdf
=================================================
Progress: 1248


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
---------------------------------------
forall (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 1249


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1250


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat_list1:nat list), gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat_list1:nat list), gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat_list1(rank:7.)
=================================================
Progress: 1251


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat_list1:nat list), gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat_list1 : nat list
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1252


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat_list1 : nat list
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 9
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:8.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 0(rank:16.)
rewrite <- IH2 in goal at 1(rank:16.)
rewrite <- IH2 in goal at 2(rank:16.)
rewrite <- IH2 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 1(rank:16.)
=================================================
Progress: 1253


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat_list1 : nat list
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat1 : nat
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat_list1:nat list), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat_list1:nat list), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat_list1 : nat list
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- IH1 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 0(rank:17.)
rewrite <- IH2 in goal at 1(rank:25.)
rewrite <- IH2 in goal at 3(rank:17.)
rewrite <- IH2 in goal at 2(rank:25.)
rewrite <- IH1 in goal at 2(rank:25.)
=================================================
Progress: 1254


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
---------------------------------------
forall (nat1:nat) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 16.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 1255


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
nat2 : nat
Base1 : tree1 = Leaf (nat2)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Leaf (nat2))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Leaf (nat2))) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 1256


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat1:nat), gq (match (tf7 (Node (tree2) (tree3))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (Node (tree2) (tree3))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat1:nat), gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 1257


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
---------------------------------------
forall (nat1:nat), gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 1258


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
---------------------------------------
gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank:8.)
=================================================
Progress: 1259


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : gq (match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
---------------------------------------
(nat1::match (if gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) then Tuple2 (fst3 (tf7 (tree2))) (plus (SUCC (ZERO)) (snd3 (tf7 (tree2)))) else if nat_eq (snd3 (tf7 (tree2))) (snd3 (tf7 (tree3))) then Tuple2 (cat (fst3 (tf7 (tree2))) (fst3 (tf7 (tree3)))) (plus (snd3 (tf7 (tree2))) (SUCC (ZERO))) else Tuple2 (fst3 (tf7 (tree3))) (plus (snd3 (tf7 (tree3))) (SUCC (ZERO)))) with
| Tuple2 a _ -> a) = nat_list1

0 goal(s) more...

2 conjecture(s) more...
>>> case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 1260


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
(nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
nat_list1 = nat_list1

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 1261


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
nat_list1 = nat_list1

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:8.)
=================================================
Progress: 1262


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case tf7 (tree2)(rank:8.)
case tf7 (tree3)(rank:8.)
=================================================
Progress: 1263


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

2 conjecture(s) more...
>>> case tf7 (tree2)(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (nat_list3) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : tf7 (tree2) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
gq (nat_list3) (ZERO) = gq (nat_list3) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro Cond1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
rewrite <- Case1 in goal at 0
case tf7 (tree2)
validate generalize_common_subterm_goal
Prop: gq ((ZERO::(Nil))) (ZERO) = gq ((ZERO::(Nil))) (match (tf7 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 _ b -> b)
Prop: gq ((ZERO::(Nil))) (ZERO) = gq ((ZERO::(Nil))) (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b)
Prop: gq ((ZERO::(Nil))) (ZERO) = gq ((ZERO::(Nil))) (match (tf7 (Leaf (ZERO))) with
| Tuple2 _ b -> b)
Lemma List
forall (nat_list1:nat list) (tree1:tree), true = true->gq (nat_list1) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> gq (nat_list1) (ZERO) = gq (nat_list1) (match (tf7 (tree1)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (nat_list3) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : tf7 (tree2) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
gq (nat_list3) (ZERO) = gq (nat_list3) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1264


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (nat_list3) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
Case2 : tf7 (tree2) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
gq (nat_list3) (ZERO) = gq (nat_list3) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (tree1:tree), true = true->gq (nat_list1) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> gq (nat_list1) (ZERO) = gq (nat_list1) (match (tf7 (tree1)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (nat_list1:nat list) (tree1:tree), true = true->gq (nat_list1) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> gq (nat_list1) (ZERO) = gq (nat_list1) (match (tf7 (tree1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (nat_list1:nat list) (tree1:tree), true = true->gq (nat_list1) (match (tf7 (tree1)) with
| Tuple2 _ b -> b) = true -> gq (nat_list1) (ZERO) = gq (nat_list1) (match (tf7 (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 1265


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)

1 goal(s) more...

2 conjecture(s) more...
>>> case tf7 (tree3)(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3) = true
Case2 : tf7 (tree3) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite Case1 in goal at 0(rank:8.)
=================================================
Progress: 1266


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3) = true
Case2 : tf7 (tree3) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3) = true
Case2 : tf7 (tree3) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro Cond1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
rewrite <- Case1 in goal at 0
case tf7 (tree3)
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: gq (match (tf7 (Leaf (ZERO))) with
| Tuple2 _ b -> b) (ZERO) = true
Prop: gq (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
Prop: gq (match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 _ b -> b) (ZERO) = true
asdf
previous tactics
simpl in goal
intro nat1
intro Cond1
case gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (match (tf7 (tree3)) with
| Tuple2 _ b -> b)
rewrite IH1 in goal at 0
reflexivity
rewrite <- Case1 in goal at 0
case tf7 (tree3)
Prop: gq (8) (ZERO) = gq (8) ((Nil))
Prop: gq (5) (ZERO) = gq (5) ((ZERO::(Nil)))
Prop: gq (0) (ZERO) = gq (0) ((Nil))
validate generalize_common_subterm_goal
Prop: gq (5) (ZERO) = gq (5) ((Nil))
Prop: gq (6) (ZERO) = gq (6) ((Nil))
Prop: gq (8) (ZERO) = gq (8) ((Nil))
Lemma List
forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3) = true
Case2 : tf7 (tree3) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3)

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 1267


1st goal of : forall (nat1:nat) (nat_list1:nat list) (tree1:tree), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree1)) with
| Tuple2 a _ -> a) = nat_list1
nat_list1 : nat list
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree2)) with
| Tuple2 a _ -> a) = nat_list1
IH2 : forall (nat1:nat), gq (match (tf7 (tree3)) with
| Tuple2 _ b -> b) (ZERO) = true -> (nat1::match (tf7 (tree3)) with
| Tuple2 a _ -> a) = nat_list1
Inductive1 : tree1 = Node (tree2) (tree3)
nat1 : nat
Cond1 : true = true
Case1 : gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3) = true
Case2 : tf7 (tree3) = Tuple2 (nat_list2) (nat_list3)
---------------------------------------
gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (ZERO) = gq (match (tf7 (tree2)) with
| Tuple2 _ b -> b) (nat_list3)

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)(rank : 0.)


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat_list1(rank:9.)
intro tree1(rank:9.)
induction nat_list1(rank:18.)
=================================================
Progress: 1268


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat_list1(rank : 9.)


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
nat_list1 : nat list
---------------------------------------
forall (any1:any) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 1269


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

---------------------------------------
forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
tree1 : tree
---------------------------------------
forall (any1:any) (nat_list1:nat list), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 1270


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
nat_list1 : nat list
---------------------------------------
forall (any1:any) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro tree1(rank : 9.)


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (any1:any), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 1271


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
nat_list1 : nat list
tree1 : tree
---------------------------------------
forall (any1:any), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
nat_list1 : nat list
tree1 : tree
Cond1 : true = true
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 1272


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
nat_list1 : nat list
tree1 : tree
Cond1 : true = true
---------------------------------------
forall (any1:any), gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (any1:any) (nat_list1:nat list) (tree1:tree), true = true->gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true -> gq (any1) (ZERO) = gq (any1) (nat_list1)
nat_list1 : nat list
tree1 : tree
Cond1 : true = true
Cond2 : gq (match (tf7 (tree1)) with
| Tuple2 _ b -> b) (nat_list1) = true
---------------------------------------
forall (any1:any), gq (any1) (ZERO) = gq (any1) (nat_list1)

0 goal(s) more...

3 conjecture(s) more...
Fatal error: exception Invalid_argument("option is None")
Raised at Stdlib.invalid_arg in file "stdlib.ml", line 30, characters 20-45
Called from Stdlib__Option.get in file "option.ml" (inlined), line 21, characters 41-69
Called from Dilemma__Prover.rank_tactics in file "lib/prover.ml", line 1335, characters 35-70
Called from Dilemma__Prover.prune_rank_worklist_update_state_list in file "lib/prover.ml", line 1421, characters 4-65
Called from Dilemma__Engine.progress in file "lib/engine.ml", lines 198-202, characters 9-20
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
