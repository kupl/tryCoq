Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro tree1(rank:3.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> intro tree1(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
---------------------------------------
match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf5 (tree1) (tree1)(rank:3.)
case tf7 (tree1)(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
---------------------------------------
match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tree1) (tree1)(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Case1 : tf5 (tree1) (tree1) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
nat_list1 = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: (Nil) = match (tf7 (Node (Node (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO)))) (Leaf (ZERO))) (Leaf (ZERO)))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf7 (Node (Leaf (ZERO)) (Node (Leaf (ZERO)) (Leaf (ZERO))))) with
| Tuple2 a _ -> a
Prop: (ZERO::(Nil)) = match (tf7 (Leaf (SUCC (ZERO)))) with
| Tuple2 a _ -> a
asdf
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
---------------------------------------
match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = match (tf7 (tree1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tree1)(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Case1 : tf7 (tree1) = Tuple2 (nat_list1) (nat_list2)
---------------------------------------
match (tf5 (tree1) (tree1)) with
| Tuple2 a _ -> a = nat_list1

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: match (tf5 (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO)))) (Node (Leaf (ZERO)) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = (Nil)
Prop: match (tf5 (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO)))) (Node (Leaf (SUCC (SUCC (ZERO)))) (Leaf (SUCC (ZERO))))) with
| Tuple2 a _ -> a = (ZERO::(SUCC (SUCC (ZERO))::(ZERO::(ZERO::(SUCC (SUCC (ZERO))::(Nil))))))
Prop: match (tf5 (Leaf (ZERO)) (Leaf (ZERO))) with
| Tuple2 a _ -> a = (Nil)
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
